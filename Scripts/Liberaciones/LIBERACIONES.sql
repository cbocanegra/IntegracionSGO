-------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------
---------------------------------LIBERACIONES----------------------------------------------------
-------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------


-- ----------------------------------------------------------------------------------------------------
--  4.1.1   REQF001     Creación Pre Liberación (Cabecera pre liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CREACION_PRE_LIBERACION_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CREACION_PRE_LIBERACION_CABECERA(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_CCLNT NUMERIC(6,0),
	IN PARAM_NPRLBR NUMERIC(10,0),
	IN PARAM_NOPRCN NUMERIC(10,0),
	IN PARAM_NWRRNT NUMERIC(10,0),
	IN PARAM_NLBRRL NUMERIC(10,0),
	IN PARAM_CTPOLB CHAR(1),
	IN PARAM_CUSAPR CHAR(10),
	IN PARAM_FAPRB NUMERIC(8,0),
	IN PARAM_HAPRB NUMERIC(6,0),
	IN PARAM_IVLRLB NUMERIC(15,5),
	IN PARAM_SORGZN CHAR(1),
	IN PARAM_SIMPR CHAR(1),
	IN PARAM_SLBPDF CHAR(1),
	IN PARAM_SIMPDF CHAR(1),
	IN PARAM_SSTCLB CHAR(1),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CDVSN CHAR(1),
	IN PARAM_CPLNDV NUMERIC(3,0),
	IN PARAM_CALMCM NUMERIC(6,0),
	IN PARAM_CZNAAL NUMERIC(3,0),
	IN PARAM_CUSCRT CHAR(10),
	IN PARAM_NTRMCR CHAR(10),
	IN PARAM_SPDFLB CHAR(1),
	IN PARAM_NSLCCL NUMERIC(12,0),
	IN PARAM_SLBEND CHAR(1),
	IN PARAM_NOPNWR NUMERIC(10,0),
	IN PARAM_NOPEMR NUMERIC(10,0),
	IN PARAM_NCRTIS CHAR(20),
	IN PARAM_NIMPLB NUMERIC(2,0),
	IN PARAM_SAPRB CHAR(1),
	IN PARAM_NTXTEM NUMERIC(10,0) ,
	IN PARAM_NCNTBN CHAR(25),
	IN PARAM_TOBSUR CHAR(30),
	IN PARAM_IMNCRG NUMERIC(15,5),
	IN PARAM_SORLBC CHAR(1),
	IN PARAM_SPNDAN CHAR(1),
	IN PARAM_SLBEMB CHAR(1),
	IN PARAM_NDSAND NUMERIC(4,0),
	IN PARAM_FLGCND CHAR(1),
	IN PARAM_CUSANL CHAR(10),
	IN PARAM_FCHANL NUMERIC(8,0),
	IN PARAM_HRAANL NUMERIC(6,0),
	IN PARAM_NCTRID CHAR(10),
	IN PARAM_NROFNC CHAR(20),
	IN PARAM_NROFRM NUMERIC(10,0),
	IN PARAM_NROFCT CHAR(20),
	IN PARAM_CULUSA CHAR (10),
	IN PARAM_NTRMNL CHAR (10),
	IN PARAM_CAGRCR NUMERIC(2,0),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)
)
BEGIN
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);
	
	-- VALIDACIONES
	IF 
		TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
		IFNULL(PARAM_CCLNT, 0) = 0 OR
		IFNULL(PARAM_NPRLBR, 0) = 0 OR
		IFNULL(PARAM_NOPRCN, 0) = 0 OR
		IFNULL(PARAM_NWRRNT, 0) = 0 OR
		IFNULL(PARAM_NLBRRL, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_CTPOLB, '')) = '' OR 
		TRIM(B ' ' FROM IFNULL(PARAM_CUSAPR, '')) = '' OR
		IFNULL(PARAM_FAPRB, 0) = 0 OR
		IFNULL(PARAM_HAPRB, 0) = 0 OR
		IFNULL(PARAM_IVLRLB, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_SORGZN, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SIMPR, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SLBPDF, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SIMPDF, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SSTCLB, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_CDVSN, '')) = '' OR
		IFNULL(PARAM_CPLNDV, 0) = 0 OR
		IFNULL(PARAM_CALMCM, 0) = 0 OR
		IFNULL(PARAM_CZNAAL, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_CUSCRT, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_NTRMCR, '')) = ''
	THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
	END IF;
	
	IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;
	
	IF PARAM_CTPOLB NOT IN ('A','F','W') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de tipo de liberación no válido,';
	END IF;
	
	IF PARAM_CUSAPR NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario de aprobación no válido,';
	END IF;
	
	IF PARAM_SORGZN NOT IN ('L','P') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de origen de zona no válido,';
	END IF;
	
	IF PARAM_SIMPR <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de activación no válido,';
	END IF;
	
	IF PARAM_SAPRB NOT IN ('X',' ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de aprobación no válido,';
	END IF;
	
	IF PARAM_SLBPDF NOT IN ('I','P') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de aprobación no válido,';
	END IF;
	
	IF PARAM_SIMPDF NOT IN ('I','A') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de impresión no válido,';
	END IF;
	
	IF PARAM_SSTCLB NOT IN ('R','E','A') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de situación de liberación no válido,';
	END IF;
	
	IF PARAM_SORLBC NOT IN (' ','C','T','E','P','M') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de origen de liberación contable no válido,';
	END IF;
	
	IF PARAM_CUSCRT NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario de creación no válido,';
	END IF;
	
	IF PARAM_NTRMCR NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal usado no válido,';
	END IF;

	IF PARAM_SESTRG <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de estado de registro no válido,';
	END IF;
	
	
	-- INSERCIÓN DE DATOS ZZWW13
	IF VAL = 0 THEN
		
		IF PARAM_CCMPN = 'AM' THEN -- DC@ALMAPER
		
			IF EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWW13 WHERE CCLNT = PARAM_CCLNT AND NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
			ELSE
				
				INSERT INTO DC@ALMAPER.ZZWW13 (
					CCLNT, NPRLBR, NOPRCN, NWRRNT, NSLCCL, SLBEND, NOPNWR, NLBRRL, NOPEMR, NCRTIS, NIMPLB, NTXTEM, NCNTBN, CTPOLB, TOBSUR,
					CUSAPR, FAPRB, HAPRB, IVLRLB, IMNCRG, SORLBC, SORGZN, SIMPR, SAPRB, SPNDAN, SLBPDF, SIMPDF, SLBEMB, SSTCLB, SPDFLB,
					SESTRG, NDSAND, FLGCND, CUSANL, FCHANL, HRAANL, CCMPN, CDVSN, CPLNDV, CALMCM, CZNAAL, FULTAC, NCTRID, NROFNC, NROFRM,
					NROFCT, HULTAC, CULUSA, NTRMNL, FCHCRT, HRACRT, CUSCRT, CAGRCR, NTRMCR
				)
				VALUES (
					PARAM_CCLNT, PARAM_NPRLBR, PARAM_NOPRCN, PARAM_NWRRNT, PARAM_NSLCCL, PARAM_SLBEND, PARAM_NOPNWR, PARAM_NLBRRL,
					PARAM_NOPEMR, PARAM_NCRTIS, PARAM_NIMPLB, PARAM_NTXTEM, PARAM_NCNTBN, PARAM_CTPOLB, PARAM_TOBSUR, PARAM_CUSAPR,
					PARAM_FAPRB, PARAM_HAPRB, PARAM_IVLRLB, PARAM_IMNCRG, PARAM_SORLBC, PARAM_SORGZN, PARAM_SIMPR, PARAM_SAPRB,
					PARAM_SPNDAN, PARAM_SLBPDF, PARAM_SIMPDF, PARAM_SLBEMB, PARAM_SSTCLB, PARAM_SPDFLB, PARAM_SESTRG, PARAM_NDSAND,
					PARAM_FLGCND, PARAM_CUSANL, PARAM_FCHANL, PARAM_HRAANL, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, PARAM_CALMCM,
					PARAM_CZNAAL, DC@RNSLIB.FECHA(), PARAM_NCTRID, PARAM_NROFNC, PARAM_NROFRM, PARAM_NROFCT, DC@RNSLIB.HORA(),
					PARAM_CULUSA, PARAM_NTRMNL, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CUSCRT, PARAM_CAGRCR, PARAM_NTRMCR
				);
				
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			END IF;
		
		ELSEIF PARAM_CCMPN = 'LZ' THEN -- DC@RNSLIB
		
			IF EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWW13 WHERE CCLNT = PARAM_CCLNT AND NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
			ELSE
			
				INSERT INTO DC@RNSLIB.ZZWW13 (
					CCLNT, NPRLBR, NOPRCN, NWRRNT, NSLCCL, SLBEND, NOPNWR, NLBRRL, NOPEMR, NCRTIS, NIMPLB, NTXTEM, NCNTBN, CTPOLB, TOBSUR,
					CUSAPR, FAPRB, HAPRB, IVLRLB, IMNCRG, SORLBC, SORGZN, SIMPR, SAPRB, SPNDAN, SLBPDF, SIMPDF, SLBEMB, SSTCLB, SPDFLB,
					SESTRG, NDSAND, FLGCND, CUSANL, FCHANL, HRAANL, CCMPN, CDVSN, CPLNDV, CALMCM, CZNAAL, FULTAC, NCTRID, NROFNC, NROFRM,
					NROFCT, HULTAC, CULUSA, NTRMNL, FCHCRT, HRACRT, CUSCRT, CAGRCR, NTRMCR
				)
				VALUES (
					PARAM_CCLNT, PARAM_NPRLBR, PARAM_NOPRCN, PARAM_NWRRNT, PARAM_NSLCCL, PARAM_SLBEND, PARAM_NOPNWR, PARAM_NLBRRL,
					PARAM_NOPEMR, PARAM_NCRTIS, PARAM_NIMPLB, PARAM_NTXTEM, PARAM_NCNTBN, PARAM_CTPOLB, PARAM_TOBSUR, PARAM_CUSAPR,
					PARAM_FAPRB, PARAM_HAPRB, PARAM_IVLRLB, PARAM_IMNCRG, PARAM_SORLBC, PARAM_SORGZN, PARAM_SIMPR, PARAM_SAPRB,
					PARAM_SPNDAN, PARAM_SLBPDF, PARAM_SIMPDF, PARAM_SLBEMB, PARAM_SSTCLB, PARAM_SPDFLB, PARAM_SESTRG, PARAM_NDSAND,
					PARAM_FLGCND, PARAM_CUSANL, PARAM_FCHANL, PARAM_HRAANL, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, PARAM_CALMCM,
					PARAM_CZNAAL, DC@RNSLIB.FECHA(), PARAM_NCTRID, PARAM_NROFNC, PARAM_NROFRM, PARAM_NROFCT, DC@RNSLIB.HORA(),
					PARAM_CULUSA, PARAM_NTRMNL, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CUSCRT, PARAM_CAGRCR, PARAM_NTRMCR
				);
				
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
		END IF;
		
	ELSE
		SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
	END IF;
	
	SET PARAMETROS =
		'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
		'PARAM_CCLNT: ' || IFNULL(CAST(PARAM_CCLNT AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NPRLBR: ' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NWRRNT: ' || IFNULL(CAST(PARAM_NWRRNT AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NLBRRL: ' || IFNULL(CAST(PARAM_NLBRRL AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_CTPOLB: ' || IFNULL(PARAM_CTPOLB, '(NULL)') || ' | ' ||
		'PARAM_CUSAPR: ' || IFNULL(PARAM_CUSAPR, '(NULL)') || ' | ' ||
		'PARAM_FAPRB: ' || IFNULL(CAST(PARAM_FAPRB AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_HAPRB: ' || IFNULL(CAST(PARAM_HAPRB AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SORGZN: ' || IFNULL(PARAM_SORGZN, '(NULL)') || ' | ' ||
		'PARAM_SIMPR: ' || IFNULL(PARAM_SIMPR, '(NULL)') || ' | ' ||
		'PARAM_SLBPDF: ' || IFNULL(PARAM_SLBPDF, '(NULL)') || ' | ' ||
		'PARAM_SIMPDF: ' || IFNULL(PARAM_SIMPDF, '(NULL)') || ' | ' ||
		'PARAM_SSTCLB: ' || IFNULL(PARAM_SSTCLB, '(NULL)') || ' | ' ||
		'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
		'PARAM_CDVSN: ' || IFNULL(PARAM_CDVSN, '(NULL)') || ' | ' ||
		'PARAM_CPLNDV: ' || IFNULL(CAST(PARAM_CPLNDV AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_CALMCM: ' || IFNULL(CAST(PARAM_CALMCM AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_CZNAAL: ' || IFNULL(CAST(PARAM_CZNAAL AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_CUSCRT: ' || IFNULL(PARAM_CUSCRT, '(NULL)') || ' | ' ||
		'PARAM_NTRMCR: ' || IFNULL(PARAM_NTRMCR, '(NULL)') || ' | ' ||
		'PARAM_SPDFLB: ' || IFNULL(PARAM_SPDFLB, '(NULL)') || ' | ' ||
		'PARAM_NSLCCL: ' || IFNULL(CAST(PARAM_NSLCCL AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SLBEND: ' || IFNULL(PARAM_SLBEND, '(NULL)') || ' | ' ||
		'PARAM_NOPNWR: ' || IFNULL(CAST(PARAM_NOPNWR AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NOPEMR: ' || IFNULL(CAST(PARAM_NOPEMR AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NCRTIS: ' || IFNULL(PARAM_NCRTIS, '(NULL)') || ' | ' ||
		'PARAM_NIMPLB: ' || IFNULL(CAST(PARAM_NIMPLB AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SAPRB: ' || IFNULL(PARAM_SAPRB, '(NULL)') || ' | ' ||
		'PARAM_NTXTEM: ' || IFNULL(CAST(PARAM_NTXTEM AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NCNTBN: ' || IFNULL(PARAM_NCNTBN, '(NULL)') || ' | ' ||
		'PARAM_TOBSUR: ' || IFNULL(PARAM_TOBSUR, '(NULL)') || ' | ' ||
		'PARAM_IMNCRG: ' || IFNULL(CAST(PARAM_IMNCRG AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SORLBC: ' || IFNULL(PARAM_SORLBC, '(NULL)') || ' | ' ||
		'PARAM_SPNDAN: ' || IFNULL(PARAM_SPNDAN, '(NULL)') || ' | ' ||
		'PARAM_SLBEMB: ' || IFNULL(PARAM_SLBEMB, '(NULL)') || ' | ' ||
		'PARAM_NDSAND: ' || IFNULL(CAST(PARAM_NDSAND AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_FLGCND: ' || IFNULL(PARAM_FLGCND, '(NULL)') || ' | ' ||
		'PARAM_CUSANL: ' || IFNULL(PARAM_CUSANL, '(NULL)') || ' | ' ||
		'PARAM_FCHANL: ' || IFNULL(CAST(PARAM_FCHANL AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_HRAANL: ' || IFNULL(CAST(PARAM_HRAANL AS VARCHAR(20)), '(NULL)') || ' | ' ||		
		'PARAM_NCTRID: ' || IFNULL(PARAM_NCTRID, '(NULL)') || ' | ' ||
		'PARAM_NROFNC: ' || IFNULL(PARAM_NROFNC, '(NULL)') || ' | ' ||
		'PARAM_NROFRM: ' || IFNULL(CAST(PARAM_NROFRM AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NROFCT: ' || IFNULL(PARAM_NROFCT, '(NULL)') || ' | ' ||
		'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
		'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
		'PARAM_CAGRCR: ' || IFNULL(CAST(PARAM_CAGRCR AS VARCHAR(20)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_CREACION_PRE_LIBERACION_CABECERA', PARAMETROS, RESPUESTA);
	
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.1   REQF001     Creación Pre Liberación (Detalle pre liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CREACION_PRE_LIBERACION_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CREACION_PRE_LIBERACION_DETALLE(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_CCLNT NUMERIC(6,0),
	IN PARAM_NPRLBR NUMERIC(10,0),
	IN PARAM_NOPRCN NUMERIC(10,0),
	IN PARAM_NITEM NUMERIC(5,0),
	IN PARAM_NLBRRL NUMERIC(10,0),
	IN PARAM_NORDS1 NUMERIC(10,0),
	IN PARAM_CDPRDC CHAR(10),
	IN PARAM_QLBRCN NUMERIC(15,5),
	IN PARAM_QLBRPS NUMERIC(15,5),
	IN PARAM_IVLRLB NUMERIC(15,5),
	IN PARAM_SSTLBD CHAR(1),
	IN PARAM_CDVSN CHAR(1),
	IN PARAM_CPLNDV NUMERIC(3,0),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CUSCRT CHAR(10),
	IN PARAM_NTRMCR CHAR(10),
	IN PARAM_CULUSA CHAR(10),
	IN PARAM_NTRMNL CHAR(10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

	-- VALIDACIONES
	IF
		TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
		IFNULL(PARAM_CCLNT, 0) = 0 OR
		IFNULL(PARAM_NPRLBR, 0) = 0 OR
		IFNULL(PARAM_NOPRCN, 0) = 0 OR
		IFNULL(PARAM_NITEM, 0) = 0 OR
		IFNULL(PARAM_NLBRRL, 0) = 0 OR
		IFNULL(PARAM_NORDS1, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_CDPRDC, '')) = '' OR
		IFNULL(PARAM_QLBRCN, 0) = 0 OR
		IFNULL(PARAM_QLBRPS, 0) = 0 OR
		IFNULL(PARAM_IVLRLB, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_SSTLBD, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_CDVSN, '')) = '' OR
		IFNULL(PARAM_CPLNDV, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_CUSCRT, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_NTRMCR, '')) = ''
	THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
	END IF;
	
	IF PARAM_SESTRG <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de estado de registro no válido,';
	END IF;
	
	IF PARAM_CUSCRT NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario de creación no válido,';
	END IF;
	
	IF PARAM_NTRMCR NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal usado no válido,';
	END IF;
	
	-- INSERCIÓN DE DATOS ZZWW14
	IF VAL = 0 THEN
		
		IF PARAM_CCMPN = 'AM' THEN
		
			IF EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWW14 WHERE CCLNT = PARAM_CCLNT AND NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
			ELSE
			
				INSERT INTO DC@ALMAPER.ZZWW14 (
					CCLNT, NPRLBR, NOPRCN, NITEM,  NLBRRL, NORDS1, CDPRDC, QLBRCN, QLBRPS, IVLRLB, SSTLBD, SESTRG,
					CCMPN, CDVSN, CPLNDV, FULTAC, HULTAC, CULUSA, NTRMNL, FCHCRT, HRACRT, CUSCRT, NTRMCR
				)
				VALUES (
					PARAM_CCLNT, PARAM_NPRLBR, PARAM_NOPRCN, PARAM_NITEM, PARAM_NLBRRL, PARAM_NORDS1, PARAM_CDPRDC, PARAM_QLBRCN,
					PARAM_QLBRPS, PARAM_IVLRLB, PARAM_SSTLBD, PARAM_SESTRG, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, DC@RNSLIB.FECHA(),
					DC@RNSLIB.HORA(), PARAM_CULUSA, PARAM_NTRMNL, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CUSCRT, PARAM_NTRMCR
				);
				
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			END IF;
			
		ELSEIF PARAM_CCMPN = 'LZ' THEN
		
			IF EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWW14 WHERE CCLNT = PARAM_CCLNT AND NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
			ELSE
			
				INSERT INTO DC@RNSLIB.ZZWW14 (
					CCLNT, NPRLBR, NOPRCN, NITEM,  NLBRRL, NORDS1, CDPRDC, QLBRCN, QLBRPS, IVLRLB, SSTLBD, SESTRG,
					CCMPN, CDVSN, CPLNDV, FULTAC, HULTAC, CULUSA, NTRMNL, FCHCRT, HRACRT, CUSCRT, NTRMCR
				)
				VALUES (
					PARAM_CCLNT, PARAM_NPRLBR, PARAM_NOPRCN, PARAM_NITEM, PARAM_NLBRRL, PARAM_NORDS1, PARAM_CDPRDC, PARAM_QLBRCN,
					PARAM_QLBRPS, PARAM_IVLRLB, PARAM_SSTLBD, PARAM_SESTRG, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, DC@RNSLIB.FECHA(),
					DC@RNSLIB.HORA(), PARAM_CULUSA, PARAM_NTRMNL, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CUSCRT, PARAM_NTRMCR
				);
				
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			END IF;
			
		ELSE
			SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
		END IF;
		
	ELSE
		SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
	END IF;
	
	SET PARAMETROS =
		'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
		'PARAM_CCLNT: ' || IFNULL(CAST(PARAM_CCLNT AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NPRLBR: ' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NLBRRL: ' || IFNULL(CAST(PARAM_NLBRRL AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NORDS1: ' || IFNULL(CAST(PARAM_NORDS1 AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_CDPRDC: ' || IFNULL(PARAM_CDPRDC, '(NULL)') || ' | ' ||
		'PARAM_QLBRCN: ' || IFNULL(CAST(PARAM_QLBRCN AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_QLBRPS: ' || IFNULL(CAST(PARAM_QLBRPS AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SSTLBD: ' || IFNULL(PARAM_SSTLBD, '(NULL)') || ' | ' ||
		'PARAM_CDVSN: ' || IFNULL(PARAM_CDVSN, '(NULL)') || ' | ' ||
		'PARAM_CPLNDV: ' || IFNULL(CAST(PARAM_CPLNDV AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
		'PARAM_CUSCRT: ' || IFNULL(PARAM_CUSCRT, '(NULL)') || ' | ' ||
		'PARAM_NTRMCR: ' || IFNULL(PARAM_NTRMCR, '(NULL)') || ' | ' ||
		'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
		'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_CREACION_PRE_LIBERACION_DETALLE', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.2   REQF002     Modificación Pre Liberación (Cabecera pre liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_MODIFICACION_PRE_LIBERACION_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_MODIFICACION_PRE_LIBERACION_CABECERA(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPRLBR NUMERIC(10,0),
	IN PARAM_NOPRCN NUMERIC(10,0),
	IN PARAM_NLBRRL NUMERIC(10,0),
	IN PARAM_CTPOLB CHAR(1) ,
	IN PARAM_CUSAPR CHAR(10),
	IN PARAM_FAPRB NUMERIC(8,0),
	IN PARAM_HAPRB NUMERIC(6,0),
	IN PARAM_IVLRLB NUMERIC(15,5),
	IN PARAM_SORGZN CHAR(1),
	IN PARAM_SIMPR CHAR(1),
	IN PARAM_SLBPDF CHAR(1),
	IN PARAM_SIMPDF CHAR(1),
	IN PARAM_SSTCLB CHAR(1),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CDVSN CHAR(1),
	IN PARAM_CPLNDV NUMERIC(3,0),
	IN PARAM_CALMCM NUMERIC(6,0),
	IN PARAM_CZNAAL NUMERIC(3,0),
	IN PARAM_CULUSA CHAR(10),
	IN PARAM_NTRMNL CHAR(10),
	IN PARAM_SPDFLB CHAR(1),
	IN PARAM_NSLCCL NUMERIC(12,0),
	IN PARAM_SLBEND CHAR(1),
	IN PARAM_NOPNWR NUMERIC(10,0),
	IN PARAM_NOPEMR NUMERIC(10,0),
	IN PARAM_NCRTIS CHAR(20),
	IN PARAM_NIMPLB NUMERIC(2,0),
	IN PARAM_SAPRB CHAR(1),
	IN PARAM_NTXTEM NUMERIC(10,0),
	IN PARAM_NCNTBN CHAR(25),
	IN PARAM_TOBSUR CHAR(30),
	IN PARAM_IMNCRG NUMERIC(15,5),
	IN PARAM_SORLBC CHAR(1),
	IN PARAM_SPNDAN CHAR(1),
	IN PARAM_SLBEMB CHAR(1),
	IN PARAM_NDSAND NUMERIC(4,0),
	IN PARAM_FLGCND CHAR(1),
	IN PARAM_CUSANL CHAR(10),
	IN PARAM_FCHANL NUMERIC(8,0),
	IN PARAM_HRAANL NUMERIC(6,0),
	IN PARAM_NCTRID CHAR(10),
	IN PARAM_NROFNC CHAR(20),
	IN PARAM_NROFRM NUMERIC(10,0),
	IN PARAM_NROFCT CHAR(20),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)
)
BEGIN
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

	IF
		TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
		IFNULL(PARAM_NPRLBR, 0) = 0 OR
		IFNULL(PARAM_NOPRCN, 0) = 0 OR
		IFNULL(PARAM_NLBRRL, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_CTPOLB, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_CUSAPR, '')) = '' OR
		IFNULL(PARAM_FAPRB, 0) = 0 OR
		IFNULL(PARAM_HAPRB, 0) = 0 OR
		IFNULL(PARAM_IVLRLB, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_SORGZN, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SIMPR, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SLBPDF, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SIMPDF, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SSTCLB, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_CDVSN, '')) = '' OR
		IFNULL(PARAM_CPLNDV, 0) = 0 OR
		IFNULL(PARAM_CALMCM, 0) = 0 OR
		IFNULL(PARAM_CZNAAL, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
	THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
	END IF;
	
	IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;
	
	IF PARAM_CTPOLB NOT IN ('A','F','W') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Codigo de tipo de liberación no válido,';
	END IF;
	
	IF PARAM_CUSAPR NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario de aprobación no válido,';
	END IF;
	
	IF PARAM_SORGZN NOT IN ('L','P') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de origen de zona no válido,';
	END IF;
	
	IF PARAM_SIMPR <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de activación no válido,';
	END IF;
	
	IF PARAM_SAPRB NOT IN ('X',' ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de aprobación no válido,';
	END IF;
	
	IF PARAM_SLBPDF NOT IN ('I','P') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de aprobación no válido,';
	END IF;
	
	IF PARAM_SIMPDF NOT IN ('I','A') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de impresión no válido,';
	END IF;
	
	IF PARAM_SSTCLB NOT IN ('R','E','A') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de situación de liberación no válido,';
	END IF;
	
	IF PARAM_SORLBC NOT IN (' ','C','T','E','P','M') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de origen de liberación contable no válido,';
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario de actualización no válido,';
	END IF;

	IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;
	
	IF PARAM_SESTRG NOT IN ('A','C') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de estado de registro no válido,';
	END IF;
	
	-- Actualización ZZWW13
	IF VAL = 0 THEN
		
		IF PARAM_CCMPN = 'AM' THEN -- DC@ALMAPER
		
			IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWW13 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
			ELSE

				UPDATE
					DC@ALMAPER.ZZWW13
				SET
					NSLCCL = PARAM_NSLCCL, SLBEND = PARAM_SLBEND, NOPNWR = PARAM_NOPNWR, NLBRRL = PARAM_NLBRRL,
					NOPEMR = PARAM_NOPEMR, NCRTIS = PARAM_NCRTIS, NIMPLB = PARAM_NIMPLB, NTXTEM = PARAM_NTXTEM,
					NCNTBN = PARAM_NCNTBN,  CTPOLB = PARAM_CTPOLB, TOBSUR = PARAM_TOBSUR, CUSAPR = PARAM_CUSAPR,
					FAPRB = PARAM_FAPRB, HAPRB = PARAM_HAPRB, IVLRLB = PARAM_IVLRLB, IMNCRG = PARAM_IMNCRG,
					SORLBC = PARAM_SORLBC, SORGZN = PARAM_SORGZN, SIMPR = PARAM_SIMPR, SAPRB = PARAM_SAPRB,
					SPNDAN = PARAM_SPNDAN, SLBPDF = PARAM_SLBPDF, SIMPDF = PARAM_SIMPDF, SLBEMB = PARAM_SLBEMB,
					SSTCLB = PARAM_SSTCLB, SPDFLB = PARAM_SPDFLB, SESTRG = PARAM_SESTRG, NDSAND = PARAM_NDSAND,
					FLGCND = PARAM_FLGCND, CUSANL = PARAM_CUSANL, FCHANL = PARAM_FCHANL, HRAANL = PARAM_HRAANL,
					CCMPN = PARAM_CCMPN, CDVSN = PARAM_CDVSN, CPLNDV = PARAM_CPLNDV, CALMCM = PARAM_CALMCM,
					CZNAAL = PARAM_CZNAAL, NCTRID = PARAM_NCTRID, NROFNC = PARAM_NROFNC, NROFRM = PARAM_NROFRM,
					NROFCT = PARAM_NROFCT, FULTAC = DC@RNSLIB.FECHA(), HULTAC = DC@RNSLIB.HORA(), CULUSA = PARAM_CULUSA,
					NTRMNL = PARAM_NTRMNL
				WHERE 
					NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;

				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';
				
			END IF;
		
		ELSEIF PARAM_CCMPN = 'LZ' THEN -- DC@RNSLIB
		
			IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWW13 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
			ELSE
				
				UPDATE
					DC@RNSLIB.ZZWW13
				SET
					NSLCCL = PARAM_NSLCCL, SLBEND = PARAM_SLBEND, NOPNWR = PARAM_NOPNWR, NLBRRL = PARAM_NLBRRL,
					NOPEMR = PARAM_NOPEMR, NCRTIS = PARAM_NCRTIS, NIMPLB = PARAM_NIMPLB, NTXTEM = PARAM_NTXTEM,
					NCNTBN = PARAM_NCNTBN,  CTPOLB = PARAM_CTPOLB, TOBSUR = PARAM_TOBSUR, CUSAPR = PARAM_CUSAPR,
					FAPRB = PARAM_FAPRB, HAPRB = PARAM_HAPRB, IVLRLB = PARAM_IVLRLB, IMNCRG = PARAM_IMNCRG,
					SORLBC = PARAM_SORLBC, SORGZN = PARAM_SORGZN, SIMPR = PARAM_SIMPR, SAPRB = PARAM_SAPRB,
					SPNDAN = PARAM_SPNDAN, SLBPDF = PARAM_SLBPDF, SIMPDF = PARAM_SIMPDF, SLBEMB = PARAM_SLBEMB,
					SSTCLB = PARAM_SSTCLB, SPDFLB = PARAM_SPDFLB, SESTRG = PARAM_SESTRG, NDSAND = PARAM_NDSAND,
					FLGCND = PARAM_FLGCND, CUSANL = PARAM_CUSANL, FCHANL = PARAM_FCHANL, HRAANL = PARAM_HRAANL,
					CCMPN = PARAM_CCMPN, CDVSN = PARAM_CDVSN, CPLNDV = PARAM_CPLNDV, CALMCM = PARAM_CALMCM,
					CZNAAL = PARAM_CZNAAL, NCTRID = PARAM_NCTRID, NROFNC = PARAM_NROFNC, NROFRM = PARAM_NROFRM,
					NROFCT = PARAM_NROFCT, FULTAC = DC@RNSLIB.FECHA(), HULTAC = DC@RNSLIB.HORA(), CULUSA = PARAM_CULUSA,
					NTRMNL = PARAM_NTRMNL
				WHERE
					NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;

				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';
				
			END IF;
		
		ELSE
			SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
		END IF;
		
	ELSE
		SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
	END IF;
	
	SET PARAMETROS =
		'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
		'PARAM_NPRLBR: ' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NLBRRL: ' || IFNULL(CAST(PARAM_NLBRRL AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_CTPOLB: ' || IFNULL(PARAM_CTPOLB, '(NULL)') || ' | ' ||
		'PARAM_CUSAPR: ' || IFNULL(PARAM_CUSAPR, '(NULL)') || ' | ' ||
		'PARAM_FAPRB: ' || IFNULL(CAST(PARAM_FAPRB AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_HAPRB: ' || IFNULL(CAST(PARAM_HAPRB AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SORGZN: ' || IFNULL(PARAM_SORGZN, '(NULL)') || ' | ' ||
		'PARAM_SIMPR: ' || IFNULL(PARAM_SIMPR, '(NULL)') || ' | ' ||
		'PARAM_SLBPDF: ' || IFNULL(PARAM_SLBPDF, '(NULL)') || ' | ' ||
		'PARAM_SIMPDF: ' || IFNULL(PARAM_SIMPDF, '(NULL)') || ' | ' ||
		'PARAM_SSTCLB: ' || IFNULL(PARAM_SSTCLB, '(NULL)') || ' | ' ||
		'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
		'PARAM_CDVSN: ' || IFNULL(PARAM_CDVSN, '(NULL)') || ' | ' ||
		'PARAM_CPLNDV: ' || IFNULL(CAST(PARAM_CPLNDV AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_CALMCM: ' || IFNULL(CAST(PARAM_CALMCM AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_CZNAAL: ' || IFNULL(CAST(PARAM_CZNAAL AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
		'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
		'PARAM_SPDFLB: ' || IFNULL(PARAM_SPDFLB, '(NULL)') || ' | ' ||
		'PARAM_NSLCCL: ' || IFNULL(CAST(PARAM_NSLCCL AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SLBEND: ' || IFNULL(PARAM_SLBEND, '(NULL)') || ' | ' ||
		'PARAM_NOPNWR: ' || IFNULL(CAST(PARAM_NOPNWR AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NOPEMR: ' || IFNULL(CAST(PARAM_NOPEMR AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NCRTIS: ' || IFNULL(PARAM_NCRTIS, '(NULL)') || ' | ' ||
		'PARAM_NIMPLB: ' || IFNULL(CAST(PARAM_NIMPLB AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SAPRB: ' || IFNULL(PARAM_SAPRB, '(NULL)') || ' | ' ||
		'PARAM_NTXTEM: ' || IFNULL(CAST(PARAM_NTXTEM AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NCNTBN: ' || IFNULL(PARAM_NCNTBN, '(NULL)') || ' | ' ||
		'PARAM_TOBSUR: ' || IFNULL(PARAM_TOBSUR, '(NULL)') || ' | ' ||
		'PARAM_IMNCRG: ' || IFNULL(CAST(PARAM_IMNCRG AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_SORLBC: ' || IFNULL(PARAM_SORLBC, '(NULL)') || ' | ' ||
		'PARAM_SPNDAN: ' || IFNULL(PARAM_SPNDAN, '(NULL)') || ' | ' ||
		'PARAM_SLBEMB: ' || IFNULL(PARAM_SLBEMB, '(NULL)') || ' | ' ||
		'PARAM_NDSAND: ' || IFNULL(CAST(PARAM_NDSAND AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_FLGCND: ' || IFNULL(PARAM_FLGCND, '(NULL)') || ' | ' ||
		'PARAM_NCTRID: ' || IFNULL(PARAM_NCTRID, '(NULL)') || ' | ' ||
		'PARAM_NROFNC: ' || IFNULL(PARAM_NROFNC, '(NULL)') || ' | ' ||
		'PARAM_NROFRM: ' || IFNULL(CAST(PARAM_NROFRM AS VARCHAR(20)), '(NULL)') || ' | ' ||
		'PARAM_NROFCT: ' || IFNULL(PARAM_NROFCT, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_MODIFICACION_PRE_LIBERACION_CABECERA', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.2   REQF002     Modificación Pre Liberación (Detalle pre liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_MODIFICACION_PRE_LIBERACION_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_MODIFICACION_PRE_LIBERACION_DETALLE(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPRLBR  NUMERIC(10,0),
	IN PARAM_NOPRCN NUMERIC(10,0),
	IN PARAM_NITEM NUMERIC(5,0),
	IN PARAM_NLBRRL NUMERIC(10,0),
	IN PARAM_NORDS1 NUMERIC(10,0),
	IN PARAM_CDPRDC CHAR(10),
	IN PARAM_QLBRCN NUMERIC(15,5),
	IN PARAM_QLBRPS NUMERIC(15,5),
	IN PARAM_IVLRLB NUMERIC(15,5),
	IN PARAM_SSTLBD CHAR(1),
	IN PARAM_CDVSN CHAR(1),
	IN PARAM_CPLNDV NUMERIC(3,0),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CULUSA CHAR(10),
	IN PARAM_NTRMNL CHAR(10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);
	
	-- Validaciones
	IF
		TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
		IFNULL(PARAM_NPRLBR, 0) = 0 OR
		IFNULL(PARAM_NOPRCN, 0) = 0 OR
		IFNULL(PARAM_NITEM, 0) = 0 OR
		IFNULL(PARAM_NLBRRL, 0) = 0 OR
		IFNULL(PARAM_NORDS1, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_CDPRDC, '')) = '' OR
		IFNULL(PARAM_QLBRCN, 0) = 0 OR
		IFNULL(PARAM_QLBRPS, 0) = 0 OR
		IFNULL(PARAM_IVLRLB, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_SSTLBD, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_CDVSN, '')) = '' OR
		IFNULL(PARAM_CPLNDV, 0) = 0 OR
		TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
		TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
	THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
	END IF;

	IF PARAM_SESTRG NOT IN ('A', 'C') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de estado de registro no válido,';
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario de actualización no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

	-- Actualización
	IF VAL = 0 THEN

		IF PARAM_CCMPN = 'AM' THEN
			
			IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWW14 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
			ELSE

				UPDATE
					DC@ALMAPER.ZZWW14
				SET
					NPRLBR = PARAM_NPRLBR, NOPRCN = PARAM_NOPRCN, NITEM = PARAM_NITEM, NLBRRL = PARAM_NLBRRL, NORDS1 = PARAM_NORDS1,
					CDPRDC = PARAM_CDPRDC, QLBRCN = PARAM_QLBRCN, QLBRPS = PARAM_QLBRPS, IVLRLB = PARAM_IVLRLB, SSTLBD = PARAM_SSTLBD,
					SESTRG = PARAM_SESTRG, CCMPN = PARAM_CCMPN, CDVSN = PARAM_CDVSN, CPLNDV = PARAM_CPLNDV, FULTAC = DC@RNSLIB.FECHA(),
					HULTAC = DC@RNSLIB.HORA(), CULUSA = PARAM_CULUSA, NTRMNL = PARAM_NTRMNL
				WHERE
					NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;

				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';

			END IF;
		
		ELSEIF PARAM_CCMPN = 'LZ' THEN

			IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWW14 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
			ELSE

				UPDATE
					DC@RNSLIB.ZZWW14
				SET
					NPRLBR = PARAM_NPRLBR, NOPRCN = PARAM_NOPRCN, NITEM = PARAM_NITEM, NLBRRL = PARAM_NLBRRL, NORDS1 = PARAM_NORDS1,
					CDPRDC = PARAM_CDPRDC, QLBRCN = PARAM_QLBRCN, QLBRPS = PARAM_QLBRPS, IVLRLB = PARAM_IVLRLB, SSTLBD = PARAM_SSTLBD,
					SESTRG = PARAM_SESTRG, CCMPN = PARAM_CCMPN, CDVSN = PARAM_CDVSN, CPLNDV = PARAM_CPLNDV, FULTAC = DC@RNSLIB.FECHA(),
					HULTAC = DC@RNSLIB.HORA(), CULUSA = PARAM_CULUSA, NTRMNL = PARAM_NTRMNL
				WHERE
					NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;

				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';

			END IF;

		ELSE
			SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
		END IF;

	ELSE
		SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
	END IF;

	SET PARAMETROS =
		'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
		'PARAM_NPRLBR: ' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(30)), '(NULL)') || ' | ' ||
		'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
		'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
		'PARAM_NLBRRL: ' || IFNULL(CAST(PARAM_NLBRRL AS VARCHAR(30)), '(NULL)') || ' | ' ||
		'PARAM_NORDS1: ' || IFNULL(CAST(PARAM_NORDS1 AS VARCHAR(30)), '(NULL)') || ' | ' ||
		'PARAM_CDPRDC: ' || IFNULL(PARAM_CDPRDC, '(NULL)') || ' | ' ||
		'PARAM_QLBRCN: ' || IFNULL(CAST(PARAM_QLBRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
		'PARAM_QLBRPS: ' || IFNULL(CAST(PARAM_QLBRPS AS VARCHAR(30)), '(NULL)') || ' | ' ||
		'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
		'PARAM_SSTLBD: ' || IFNULL(PARAM_SSTLBD, '(NULL)') || ' | ' ||
		'PARAM_CDVSN: ' || IFNULL(PARAM_CDVSN, '(NULL)') || ' | ' ||
		'PARAM_CPLNDV: ' || IFNULL(CAST(PARAM_CPLNDV AS VARCHAR(30)), '(NULL)') || ' | ' ||
		'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
		'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
		'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_MODIFICACION_PRE_LIBERACION_DETALLE', PARAMETROS, RESPUESTA);
	
END
GO

-- ----------------------------------------------------------------------------------------------------
--  4.1.3   REQF003     Anulación Pre Liberación (Cabecera pre liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ANULACION_PRE_LIBERACION_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ANULACION_PRE_LIBERACION_CABECERA(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NPRLBR NUMERIC(10,0),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NPRLBR, 0) = 0 OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM', 'LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Anulación ZZWW13
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWW13 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWW13
                SET
                    SESTRG = '*',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro anulado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN

            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWW13 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWW13
                SET
                    SESTRG = '*',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro anulado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
            'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
            'PARAM_NPRLBR: ' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
            'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ANULACION_PRE_LIBERACION_CABECERA', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.3   REQF003     Anulación Pre Liberación (Detalle pre liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ANULACION_PRE_LIBERACION_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ANULACION_PRE_LIBERACION_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NPRLBR NUMERIC(10,0),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NPRLBR, 0) = 0 OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM', 'LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Anulación ZZWW14
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN -- DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWW14 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWW14
                SET
                    SESTRG = '*',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro anulado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN -- DC@RNSLIB

            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWW14 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWW14
                SET
                    SESTRG = '*',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro anulado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
            'PARAM_CCMPN:' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
            'PARAM_NPRLBR:' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_NOPRCN:' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_CULUSA:' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
            'PARAM_NTRMNL:' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ANULACION_PRE_LIBERACION_DETALLE', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.4   REQF004     Creación de Liberación (Cabecera liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CREACION_LIBERACION_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CREACION_LIBERACION_CABECERA(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NLBRC NUMERIC(10,0),
    IN PARAM_CCLNT NUMERIC(6,0),
    IN PARAM_CTPOLB CHAR(1),
    IN PARAM_FEMSLB NUMERIC(8,0),
    IN PARAM_FFINLB NUMERIC(8,0),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_TOBSUR CHAR(30),
    IN PARAM_SORGZN CHAR(1),
    IN PARAM_SSTCLB CHAR(1),
    IN PARAM_SESTRG CHAR(1),
    IN PARAM_SAPRB CHAR(1),
    IN PARAM_SLBWEB CHAR(1),
    IN PARAM_CUSEML CHAR(10),
    IN PARAM_HEMSLB NUMERIC(6,0),
    IN PARAM_CUSAPR CHAR(10),
    IN PARAM_FAPRB NUMERIC(8,0),
    IN PARAM_HAPRB NUMERIC(6,0),
    IN PARAM_CDVSN CHAR(1),
    IN PARAM_CPLNDV NUMERIC(3,0),
    IN PARAM_CUSCRT CHAR(10),
    IN PARAM_NTRMCR CHAR(10),
    IN PARAM_FATNLB NUMERIC(8,0),
    IN PARAM_NOPREM NUMERIC(10,0),
    IN PARAM_FDSCLB NUMERIC(8,0),
    IN PARAM_ISLVLL NUMERIC(15,5),
    IN PARAM_SORLBC CHAR(1),
    IN PARAM_SPRLBC CHAR(1),
    IN PARAM_SSSPFC CHAR(1),
    IN PARAM_CUSATN CHAR(10),
    IN PARAM_HATNC NUMERIC(6,0),
    IN PARAM_CAGATN NUMERIC(2,0),
    IN PARAM_CUSEAP CHAR(10),
    IN PARAM_FENVAP NUMERIC(8,0), 
    IN PARAM_HENVAP NUMERIC(6,0),
    IN PARAM_CAGEAP NUMERIC(2,0),
    IN PARAM_CAGAPR NUMERIC(2,0),
    IN PARAM_NDSAND NUMERIC(4,0),
    IN PARAM_SCNPRC CHAR(1),
    IN PARAM_ITTLDS NUMERIC(15,5),
    IN PARAM_ITTLDD NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_CCLNT, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CTPOLB, '')) = '' OR
        IFNULL(PARAM_FEMSLB, 0) = 0 OR
        IFNULL(PARAM_FFINLB, 0) = 0 OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_TOBSUR, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_SORGZN, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_SSTCLB, '')) = '' OR 
        TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_SAPRB, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_SLBWEB, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_CUSEML, '')) = '' OR
        IFNULL(PARAM_HEMSLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CUSAPR, '')) = '' OR
        IFNULL(PARAM_FAPRB, 0) = 0 OR
        IFNULL(PARAM_HAPRB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CDVSN, '')) = '' OR
        IFNULL(PARAM_CPLNDV, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CUSCRT, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMCR, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;
	
	IF PARAM_CTPOLB NOT IN ('A','F','W') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de tipo de liberación no válido,';
	END IF;

    IF PARAM_CUSAPR NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario de aprobación no válido,';
	END IF;

    IF PARAM_SORGZN NOT IN ('L','P') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de origen de zona no válido,';
	END IF;

    IF PARAM_SSTCLB <> 'E' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de situación de liberación no válido,';
	END IF;

    IF PARAM_SESTRG <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de estado de registro no válido,';
	END IF;

    IF PARAM_SORLBC NOT IN (' ','C','T','E','P','M') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de origen de liberación contable no válido,';
	END IF;

    IF PARAM_SAPRB NOT IN ('X',' ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de aprobación no válido,';
	END IF;

    IF PARAM_SLBWEB NOT IN ('A', ' ') THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de liberación por web no válido,';
    END IF;

    IF PARAM_CUSCRT NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario de creación no válido,';
	END IF;
	
	IF PARAM_NTRMCR NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal usado no válido,';
	END IF;

    -- INSERCIÓN DE DATOS
	IF VAL = 0 THEN
		
		IF PARAM_CCMPN = 'AM' THEN
		
			IF EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT13 WHERE NOPRCN = PARAM_NOPRCN AND NLBRC = PARAM_NLBRC) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
			ELSE

				INSERT INTO DC@ALMAPER.ZZWT13 (
					NOPRCN, NLBRC, NOPREM, CCLNT, CTPOLB, FEMSLB, FFINLB, FATNLB, FDSCLB, IVLRLB, ISLVLL, TOBSUR,
                    SORGZN, SORLBC, SPRLBC, SSTCLB, SESTRG, SAPRB, SLBWEB, SSSPFC, CUSEML, HEMSLB, CUSATN, HATNC,
                    CAGATN, CUSEAP, FENVAP, HENVAP, CAGEAP, CUSAPR, FAPRB, HAPRB, CAGAPR, SCNPRC, CCMPN, CDVSN,
                    CPLNDV, FULTAC, HULTAC, CULUSA, NTRMNL, FCHCRT, HRACRT, CUSCRT, NTRMCR, NDSAND, ITTLDS, ITTLDD
				)
				VALUES (
					PARAM_NOPRCN, PARAM_NLBRC, PARAM_NOPREM, PARAM_CCLNT, PARAM_CTPOLB, PARAM_FEMSLB, PARAM_FFINLB,
                    PARAM_FATNLB, PARAM_FDSCLB, PARAM_IVLRLB, PARAM_ISLVLL, PARAM_TOBSUR, PARAM_SORGZN, PARAM_SORLBC,
                    PARAM_SPRLBC, PARAM_SSTCLB, PARAM_SESTRG, PARAM_SAPRB, PARAM_SLBWEB, PARAM_SSSPFC, PARAM_CUSEML,
                    PARAM_HEMSLB, PARAM_CUSATN, PARAM_HATNC, PARAM_CAGATN, PARAM_CUSEAP, PARAM_FENVAP, PARAM_HENVAP,
                    PARAM_CAGEAP, PARAM_CUSAPR, PARAM_FAPRB, PARAM_HAPRB, PARAM_CAGAPR, PARAM_SCNPRC, PARAM_CCMPN,
                    PARAM_CDVSN, PARAM_CPLNDV, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA, PARAM_NTRMNL, DC@RNSLIB.FECHA(),
                    DC@RNSLIB.HORA(), PARAM_CUSCRT, PARAM_NTRMCR, PARAM_NDSAND, PARAM_ITTLDS, PARAM_ITTLDD
				);
				
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			END IF;
		
		ELSEIF PARAM_CCMPN = 'LZ' THEN
		
			IF EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT13 WHERE NOPRCN = PARAM_NOPRCN AND NLBRC = PARAM_NLBRC) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
			ELSE
			
				INSERT INTO DC@RNSLIB.ZZWT13 (
					NOPRCN, NLBRC, NOPREM, CCLNT, CTPOLB, FEMSLB, FFINLB, FATNLB, FDSCLB, IVLRLB, ISLVLL, TOBSUR,
                    SORGZN, SORLBC, SPRLBC, SSTCLB, SESTRG, SAPRB, SLBWEB, SSSPFC, CUSEML, HEMSLB, CUSATN, HATNC,
                    CAGATN, CUSEAP, FENVAP, HENVAP, CAGEAP, CUSAPR, FAPRB, HAPRB, CAGAPR, SCNPRC, CCMPN, CDVSN,
                    CPLNDV, FULTAC, HULTAC, CULUSA, NTRMNL, FCHCRT, HRACRT, CUSCRT, NTRMCR, NDSAND, ITTLDS, ITTLDD
				)
				VALUES (
					PARAM_NOPRCN, PARAM_NLBRC, PARAM_NOPREM, PARAM_CCLNT, PARAM_CTPOLB, PARAM_FEMSLB, PARAM_FFINLB,
                    PARAM_FATNLB, PARAM_FDSCLB, PARAM_IVLRLB, PARAM_ISLVLL, PARAM_TOBSUR, PARAM_SORGZN, PARAM_SORLBC,
                    PARAM_SPRLBC, PARAM_SSTCLB, PARAM_SESTRG, PARAM_SAPRB, PARAM_SLBWEB, PARAM_SSSPFC, PARAM_CUSEML,
                    PARAM_HEMSLB, PARAM_CUSATN, PARAM_HATNC, PARAM_CAGATN, PARAM_CUSEAP, PARAM_FENVAP, PARAM_HENVAP,
                    PARAM_CAGEAP, PARAM_CUSAPR, PARAM_FAPRB, PARAM_HAPRB, PARAM_CAGAPR, PARAM_SCNPRC, PARAM_CCMPN,
                    PARAM_CDVSN, PARAM_CPLNDV, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA, PARAM_NTRMNL, DC@RNSLIB.FECHA(),
                    DC@RNSLIB.HORA(), PARAM_CUSCRT, PARAM_NTRMCR, PARAM_NDSAND, PARAM_ITTLDS, PARAM_ITTLDD
				);
				
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
		END IF;
		
	ELSE
		SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
	END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CCLNT: ' || IFNULL(CAST(PARAM_CCLNT AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CTPOLB: ' || IFNULL(PARAM_CTPOLB, '(NULL)') || ' | ' ||
        'PARAM_FEMSLB: ' || IFNULL(CAST(PARAM_FEMSLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_FFINLB: ' || IFNULL(CAST(PARAM_FFINLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_TOBSUR: ' || IFNULL(PARAM_TOBSUR, '(NULL)') || ' | ' ||
        'PARAM_SORGZN: ' || IFNULL(PARAM_SORGZN, '(NULL)') || ' | ' ||
        'PARAM_SSTCLB: ' || IFNULL(PARAM_SSTCLB, '(NULL)') || ' | ' || 
        'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
        'PARAM_SAPRB: ' || IFNULL(PARAM_SAPRB, '(NULL)') || ' | ' ||
        'PARAM_SLBWEB: ' || IFNULL(PARAM_SLBWEB, '(NULL)') || ' | ' ||
        'PARAM_CUSEML: ' || IFNULL(PARAM_CUSEML, '(NULL)') || ' | ' ||
        'PARAM_HEMSLB: ' || IFNULL(CAST(PARAM_HEMSLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CUSAPR: ' || IFNULL(PARAM_CUSAPR, '(NULL)') || ' | ' ||
        'PARAM_FAPRB: ' || IFNULL(CAST(PARAM_FAPRB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_HAPRB: ' || IFNULL(CAST(PARAM_HAPRB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CDVSN: ' || IFNULL(PARAM_CDVSN, '(NULL)') || ' | ' ||
        'PARAM_CPLNDV: ' || IFNULL(CAST(PARAM_CPLNDV AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CUSCRT: ' || IFNULL(PARAM_CUSCRT, '(NULL)') || ' | ' ||
        'PARAM_NTRMCR: ' || IFNULL(PARAM_NTRMCR, '(NULL)') || ' | ' ||
        'PARAM_FATNLB: ' || IFNULL(CAST(PARAM_FATNLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NOPREM: ' || IFNULL(CAST(PARAM_NOPREM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_FDSCLB: ' || IFNULL(CAST(PARAM_FDSCLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_ISLVLL: ' || IFNULL(CAST(PARAM_ISLVLL AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_SORLBC: ' || IFNULL(PARAM_SORLBC, '(NULL)') || ' | ' ||
        'PARAM_SPRLBC: ' || IFNULL(PARAM_SPRLBC, '(NULL)') || ' | ' ||
        'PARAM_SSSPFC: ' || IFNULL(PARAM_SSSPFC, '(NULL)') || ' | ' ||
        'PARAM_CUSATN: ' || IFNULL(PARAM_CUSATN, '(NULL)') || ' | ' ||
        'PARAM_HATNC: ' || IFNULL(CAST(PARAM_HATNC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CAGATN: ' || IFNULL(CAST(PARAM_CAGATN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CUSEAP: ' || IFNULL(PARAM_CUSEAP, '(NULL)') || ' | ' ||
        'PARAM_FENVAP: ' || IFNULL(CAST(PARAM_FENVAP AS VARCHAR(30)), '(NULL)') || ' | ' || 
        'PARAM_HENVAP: ' || IFNULL(CAST(PARAM_HENVAP AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CAGEAP: ' || IFNULL(CAST(PARAM_CAGEAP AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CAGAPR: ' || IFNULL(CAST(PARAM_CAGAPR AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NDSAND: ' || IFNULL(CAST(PARAM_NDSAND AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_SCNPRC: ' || IFNULL(PARAM_SCNPRC, '(NULL)') || ' | ' ||
        'PARAM_ITTLDS: ' || IFNULL(CAST(PARAM_ITTLDS AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_ITTLDD: ' || IFNULL(CAST(PARAM_ITTLDD AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_CREACION_LIBERACION_CABECERA', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.4   REQF004     Creación de Liberación (Detalle liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CREACION_LIBERACION_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CREACION_LIBERACION_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NLBRC NUMERIC(10,0),
    IN PARAM_NITEM NUMERIC(5,0),
    IN PARAM_NCRRLT NUMERIC(4,0),
    IN PARAM_NORDSR NUMERIC(10,0),
    IN PARAM_CDPRDC CHAR(10),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_NAUTR NUMERIC(10,0),
    IN PARAM_SSTLBD CHAR(1),
    IN PARAM_SESTRG CHAR(1),
    IN PARAM_CDVSN CHAR(1),
    IN PARAM_CPLNDV NUMERIC(3,0),
    IN PARAM_CUSCRT CHAR(10),
    IN PARAM_NTRMCR CHAR(10),
    IN PARAM_QLBRCN NUMERIC(15,5),
    IN PARAM_QLBRPS NUMERIC(15,5),
    IN PARAM_QCNLBA NUMERIC(15,5),
    IN PARAM_QPSLBA NUMERIC(15,5),
    IN PARAM_IVLRAT NUMERIC(15,5),
    IN PARAM_FATNLB NUMERIC(8,0),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_NITEM, 0) = 0 OR
        IFNULL(PARAM_NCRRLT, 0) = 0 OR
        IFNULL(PARAM_NORDSR, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CDPRDC, '')) = '' OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        IFNULL(PARAM_NAUTR, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_SSTLBD, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_CDVSN, '')) = '' OR
        IFNULL(PARAM_CPLNDV, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CUSCRT, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMCR, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;

    IF PARAM_SSTLBD <> 'E' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de situación de liberación - detalle no válido,';
	END IF;

    IF PARAM_SESTRG <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de estado de registro no válido,';
	END IF;

    IF PARAM_QLBRPS = 0 AND PARAM_QLBRCN = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad y el peso de liberación tienen valor cero,';
    END IF;

    IF PARAM_CUSCRT NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario de creación no válido,';
	END IF;

    IF PARAM_NTRMCR NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal usado no válido,';
	END IF;

    -- Inserción
    IF VAL = 0 THEN
		
		IF PARAM_CCMPN = 'AM' THEN
		
			IF EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT14 WHERE NOPRCN = PARAM_NOPRCN AND NLBRC = PARAM_NLBRC AND NITEM = PARAM_NITEM) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
			ELSE
			
				INSERT INTO DC@ALMAPER.ZZWT14 (
					NOPRCN, NLBRC, NITEM, NCRRLT, NORDSR, CDPRDC, QLBRCN, QLBRPS, QCNLBA, QPSLBA, IVLRLB, IVLRAT,
                    NAUTR, SSTLBD, SESTRG, CCMPN, CDVSN, CPLNDV, FATNLB, FCHCRT, HRACRT, CUSCRT
				)
				VALUES (
					PARAM_NOPRCN, PARAM_NLBRC, PARAM_NITEM, PARAM_NCRRLT, PARAM_NORDSR, PARAM_CDPRDC, PARAM_QLBRCN,
                    PARAM_QLBRPS, PARAM_QCNLBA, PARAM_QPSLBA, PARAM_IVLRLB, PARAM_IVLRAT, PARAM_NAUTR, PARAM_SSTLBD,
                    PARAM_SESTRG, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, PARAM_FATNLB, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(),
                    PARAM_CUSCRT
				);
				
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			END IF;
			
		ELSEIF PARAM_CCMPN = 'LZ' THEN
		
			IF EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT14 WHERE NOPRCN = PARAM_NOPRCN AND NLBRC = PARAM_NLBRC AND NITEM = PARAM_NITEM) THEN
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
			ELSE
			
				INSERT INTO DC@RNSLIB.ZZWT14 (
					NOPRCN, NLBRC, NITEM, NCRRLT, NORDSR, CDPRDC, QLBRCN, QLBRPS, QCNLBA, QPSLBA, IVLRLB, IVLRAT,
                    NAUTR, SSTLBD, SESTRG, CCMPN, CDVSN, CPLNDV, FATNLB, FCHCRT, HRACRT, CUSCRT
				)
				VALUES (
					PARAM_NOPRCN, PARAM_NLBRC, PARAM_NITEM, PARAM_NCRRLT, PARAM_NORDSR, PARAM_CDPRDC, PARAM_QLBRCN,
                    PARAM_QLBRPS, PARAM_QCNLBA, PARAM_QPSLBA, PARAM_IVLRLB, PARAM_IVLRAT, PARAM_NAUTR, PARAM_SSTLBD,
                    PARAM_SESTRG, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, PARAM_FATNLB, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(),
                    PARAM_CUSCRT
				);
				
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			END IF;
			
		ELSE
			SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
		END IF;
		
	ELSE
		SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
	END IF;

    SET PARAMETROS =
            'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
            'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_NCRRLT: ' || IFNULL(CAST(PARAM_NCRRLT AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_NORDSR: ' || IFNULL(CAST(PARAM_NORDSR AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_CDPRDC: ' || IFNULL(PARAM_CDPRDC, '(NULL)') || ' | ' ||
            'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_NAUTR: ' || IFNULL(CAST(PARAM_NAUTR AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_SSTLBD: ' || IFNULL(PARAM_SSTLBD, '(NULL)') || ' | ' ||
            'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
            'PARAM_CDVSN: ' || IFNULL(PARAM_CDVSN, '(NULL)') || ' | ' ||
            'PARAM_CPLNDV: ' || IFNULL(CAST(PARAM_CPLNDV AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_CUSCRT: ' || IFNULL(PARAM_CUSCRT, '(NULL)') || ' | ' ||
            'PARAM_NTRMCR: ' || IFNULL(PARAM_NTRMCR, '(NULL)') || ' | ' ||
            'PARAM_QLBRCN: ' || IFNULL(CAST(PARAM_QLBRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_QLBRPS: ' || IFNULL(CAST(PARAM_QLBRPS AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_QCNLBA: ' || IFNULL(CAST(PARAM_QCNLBA AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_QPSLBA: ' || IFNULL(CAST(PARAM_QPSLBA AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_IVLRAT: ' || IFNULL(CAST(PARAM_IVLRAT AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_FATNLB: ' || IFNULL(CAST(PARAM_FATNLB AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');

    CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_CREACION_LIBERACION_DETALLE', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.5   REQF005     Atención de Liberación (Cabecera liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ATENCION_LIBERACION_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ATENCION_LIBERACION_CABECERA(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NLBRC NUMERIC(10, 0),
    IN PARAM_NOPRCN NUMERIC(10, 0),
    IN PARAM_FATNLB NUMERIC(8,0),
    IN PARAM_SSTCLB CHAR(1),
    IN PARAM_SESTRG CHAR(1),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_CUSATN CHAR(10),
    IN PARAM_HATNC NUMERIC(6,0),
    IN PARAM_CAGATN NUMERIC(2,0),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_FATNLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_SSTCLB, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = '' OR
        PARAM_HATNC IS NOT NULL
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;

    IF PARAM_SSTCLB <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de situación de liberación no válido,';
	END IF;

    IF PARAM_SESTRG <> 'C' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de estado de registro no válido,';
	END IF;

    IF
        PARAM_HATNC NOT BETWEEN 0 AND 235959 OR
        SUBSTR(RIGHT(REPEAT(0,6) || CAST(PARAM_HATNC AS VARCHAR(6)),6),1,2) NOT BETWEEN '00' AND '23' OR
		SUBSTR(RIGHT(REPEAT(0,6) || CAST(PARAM_HATNC AS VARCHAR(6)),6),3,2) NOT BETWEEN '00' AND '59' OR
		SUBSTR(RIGHT(REPEAT(0,6) || CAST(PARAM_HATNC AS VARCHAR(6)),6),5,2) NOT BETWEEN '00' AND '59'
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora de atención no válido,';
	END IF;
    
    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT13 WHERE NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
			    SET PARAM_PROCDESC = 'No existe el registro';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWT13
                SET
                    FATNLB = PARAM_FATNLB, CUSATN = PARAM_CUSATN, HATNC = PARAM_HATNC,
                    CAGATN = PARAM_CAGATN, SSTCLB = PARAM_SSTCLB, SESTRG = PARAM_SESTRG,
                    FULTAC = DC@RNSLIB.FECHA(), HULTAC = DC@RNSLIB.HORA(), CULUSA = PARAM_CULUSA
                WHERE
                    NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN

            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT13 WHERE NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
			    SET PARAM_PROCDESC = 'No existe el registro';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWT13
                SET
                    FATNLB = PARAM_FATNLB, CUSATN = PARAM_CUSATN, HATNC = PARAM_HATNC,
                    CAGATN = PARAM_CAGATN, SSTCLB = PARAM_SSTCLB, SESTRG = PARAM_SESTRG,
                    FULTAC = DC@RNSLIB.FECHA(), HULTAC = DC@RNSLIB.HORA(), CULUSA = PARAM_CULUSA
                WHERE
                    NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_FATNLB: ' || IFNULL(CAST(PARAM_FATNLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_SSTCLB: ' || IFNULL(PARAM_SSTCLB, '(NULL)') || ' | ' ||
        'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_CUSATN: ' || IFNULL(PARAM_CUSATN, '(NULL)') || ' | ' ||
        'PARAM_HATNC: ' || IFNULL(CAST(PARAM_HATNC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CAGATN: ' || IFNULL(CAST(PARAM_CAGATN AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');

    CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ATENCION_LIBERACION_CABECERA', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.5   REQF005     Atención de Liberación (Detalle liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ATENCION_LIBERACION_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ATENCION_LIBERACION_DETALLE
(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NLBRC NUMERIC(10, 0),
    IN PARAM_NOPRCN NUMERIC(10, 0),
    IN PARAM_NITEM NUMERIC(5,0),
    IN PARAM_NCRRLT NUMERIC(4,0),
    IN PARAM_SSTLBD CHAR(1),
    IN PARAM_SESTRG CHAR(1),
    IN PARAM_IVLRAT NUMERIC(15,5),
    IN PARAM_FATNLB NUMERIC(8,0),
    IN PARAM_QCNLBA NUMERIC(15,5),
    IN PARAM_QPSLBA NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NITEM, 0) = 0 OR
        IFNULL(PARAM_NCRRLT, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_SSTLBD, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
        IFNULL(PARAM_IVLRAT, 0) = 0 OR
        IFNULL(PARAM_FATNLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;

    IF PARAM_QCNLBA = 0 AND PARAM_QPSLBA = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad o el peso de liberación debe ser mayor a cero,';
    END IF;

    IF PARAM_SSTLBD <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de situación de liberación - detalle  no válido,';
	END IF;

    IF PARAM_SESTRG <> 'C' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de estado de registro no válido,';
	END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización ZZWT14
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN -- DC@ALMAPER

            IF NOT EXISTS (
                SELECT 1 FROM DC@ALMAPER.ZZWT14
                WHERE NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND NCRRLT = PARAM_NCRRLT
            ) THEN
                SET PARAM_PROCSTATUS = 1;
			    SET PARAM_PROCDESC = 'No existe el registro';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWT14
                SET
                    IVLRAT = PARAM_IVLRAT, SSTLBD = PARAM_SSTLBD, SESTRG = PARAM_SESTRG, FATNLB = PARAM_FATNLB,
                    FULTAC = DC@RNSLIB.FECHA(), HULTAC = DC@RNSLIB.HORA(), CULUSA = PARAM_CULUSA
                WHERE
                    NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND NCRRLT = PARAM_NCRRLT;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN -- DC@RNSLIB

            IF NOT EXISTS (
                SELECT 1 FROM DC@RNSLIB.ZZWT14
                WHERE NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND NCRRLT = PARAM_NCRRLT
            ) THEN
                SET PARAM_PROCSTATUS = 1;
			    SET PARAM_PROCDESC = 'No existe el registro';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWT14
                SET
                    IVLRAT = PARAM_IVLRAT, SSTLBD = PARAM_SSTLBD, SESTRG = PARAM_SESTRG, FATNLB = PARAM_FATNLB,
                    FULTAC = DC@RNSLIB.FECHA(), HULTAC = DC@RNSLIB.HORA(), CULUSA = PARAM_CULUSA
                WHERE
                    NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND NCRRLT = PARAM_NCRRLT;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NCRRLT: ' || IFNULL(CAST(PARAM_NCRRLT AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_SSTLBD: ' || IFNULL(PARAM_SSTLBD, '(NULL)') || ' | ' ||
        'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
        'PARAM_IVLRAT: ' || IFNULL(CAST(PARAM_IVLRAT AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_FATNLB: ' || IFNULL(CAST(PARAM_FATNLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QCNLBA: ' || IFNULL(CAST(PARAM_QCNLBA AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSLBA: ' || IFNULL(CAST(PARAM_QPSLBA AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');

    CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ATENCION_LIBERACION_DETALLE', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.6   REQF006     Firma de Liberación (Representantes de liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_FIRMA_LIBERACION
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_FIRMA_LIBERACION(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NPRLBR NUMERIC(10,0),
    IN PARAM_STPENT CHAR(1),
    IN PARAM_CENTD NUMERIC(6,0),
    IN PARAM_CRPRS CHAR(5),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NLBRRL NUMERIC(10,0),
    IN PARAM_SFRMRP CHAR(1),
    IN PARAM_FFRMRP NUMERIC(8,0),
    IN PARAM_NFRMBN NUMERIC(2,0),
    IN PARAM_SESTRG CHAR(1),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    -- Validaciones
    IF
        IFNULL(PARAM_NPRLBR, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_STPENT, '')) = '' OR
        IFNULL(PARAM_CENTD, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CRPRS, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRRL, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_SFRMRP, '')) = '' OR
        IFNULL(PARAM_FFRMRP, 0) = 0 OR
        IFNULL(PARAM_NFRMBN, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_STPENT NOT IN ('A','B','C') THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de tipo de entidad no válido,';
    END IF;

    IF PARAM_SFRMRP <> 'A' THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de firma de representante no válido,';
    END IF;

    IF
		LENGTH(CAST(PARAM_FFRMRP AS VARCHAR(8))) <> 8 OR
		CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),1,4) AS INTEGER) <= 1900 OR
		CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),5,2) AS INTEGER) NOT BETWEEN 1 AND 12 OR
		CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER) NOT BETWEEN 1 AND 31
	THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'FORMATO DE FECHA DE CREACIÓN NO VÁLIDO,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Lógica de firma (ZZWT93)
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF EXISTS (
                SELECT 1 FROM DC@ALMAPER.ZZWT93
                WHERE NPRLBR = PARAM_NPRLBR AND STPENT = PARAM_STPENT AND CENTD = PARAM_CENTD AND CRPRS = PARAM_CRPRS
            ) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
            ELSE

                INSERT INTO DC@ALMAPER.ZZWT93 (
                    NPRLBR, STPENT, CENTD, CRPRS, NOPRCN, NLBRRL, SFRMRP,
                    FFRMRP, NFRMBN, SESTRG, FULTAC, HULTAC, CULUSA, NTRMNL
                )
                VALUES (
                    PARAM_NPRLBR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_NLBRRL, PARAM_SFRMRP,
                    PARAM_FFRMRP, PARAM_NFRMBN, PARAM_SESTRG, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA, PARAM_NTRMNL
                );

                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF EXISTS (
                SELECT 1 FROM DC@RNSLIB.ZZWT93
                WHERE NPRLBR = PARAM_NPRLBR AND STPENT = PARAM_STPENT AND CENTD = PARAM_CENTD AND CRPRS = PARAM_CRPRS
            ) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro ya existe';
            ELSE

                INSERT INTO DC@RNSLIB.ZZWT93 (
                    NPRLBR, STPENT, CENTD, CRPRS, NOPRCN, NLBRRL, SFRMRP,
                    FFRMRP, NFRMBN, SESTRG, FULTAC, HULTAC, CULUSA, NTRMNL
                )
                VALUES (
                    PARAM_NPRLBR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_NLBRRL, PARAM_SFRMRP,
                    PARAM_FFRMRP, PARAM_NFRMBN, PARAM_SESTRG, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA, PARAM_NTRMNL
                );

                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_NPRLBR: ' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_STPENT: ' || IFNULL(PARAM_STPENT, '(NULL)') || ' | ' ||
        'PARAM_CENTD: ' || IFNULL(CAST(PARAM_CENTD AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CRPRS: ' || IFNULL(PARAM_CRPRS, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NLBRRL: ' || IFNULL(CAST(PARAM_NLBRRL AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_SFRMRP: ' || IFNULL(PARAM_SFRMRP, '(NULL)') || ' | ' ||
        'PARAM_FFRMRP: ' || IFNULL(CAST(PARAM_FFRMRP AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NFRMBN: ' || IFNULL(CAST(PARAM_NFRMBN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_FIRMA_LIBERACION', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.7   REQF007     Registro de saldos comprometidos (Operación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_REGISTRO_SALDOS_COMP_OPERACION
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_REGISTRO_SALDOS_COMP_OPERACION(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_IVLMRC NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QTTMRC NUMERIC(15,5),
    IN PARAM_QPSMRC NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_IVLMRC, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QTTMRC = 0 AND PARAM_QPSMRC = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad  y el peso de mercadería comprometida tienen valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización (ZZWM06)
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWM06
                SET
                    QTTMRC = QTTMRC + PARAM_QTTMRC,
                    QPSMRC = QPSMRC + PARAM_QPSMRC,
                    IVLMRC = IVLMRC + PARAM_IVLMRC,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWM06
                SET
                    QTTMRC = QTTMRC + PARAM_QTTMRC,
                    QPSMRC = QPSMRC + PARAM_QPSMRC,
                    IVLMRC = IVLMRC + PARAM_IVLMRC,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLMRC: ' || IFNULL(CAST(PARAM_IVLMRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QTTMRC: ' || IFNULL(CAST(PARAM_QTTMRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSMRC: ' || IFNULL(CAST(PARAM_QPSMRC AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_REGISTRO_SALDOS_COMP_OPERACION', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.7   REQF007     Registro de saldos comprometidos (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_REGISTRO_SALDOS_COMP_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_REGISTRO_SALDOS_COMP_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NITEM NUMERIC(5,0),
    IN PARAM_IVLRCM NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRCCM NUMERIC(15,5),
    IN PARAM_QPSMRC NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    -- Validaciones
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NITEM, 0) = 0 OR
        IFNULL(PARAM_IVLRCM, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRCCM = 0 AND PARAM_QPSMRC = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad  y el peso de mercadería comprometida tienen valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal usado no válido,';
	END IF;

    -- Registro detalle ZZWT28
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE
                UPDATE
                    DC@ALMAPER.ZZWT28
                SET
                    QMRCCM = QMRCCM + PARAM_QMRCCM,
                    QPSMRC = QPSMRC + PARAM_QPSMRC,
                    IVLRCM = IVLRCM + PARAM_IVLRCM,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';
            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE
                UPDATE
                    DC@RNSLIB.ZZWT28
                SET
                    QMRCCM = QMRCCM + PARAM_QMRCCM,
                    QPSMRC = QPSMRC + PARAM_QPSMRC,
                    IVLRCM = IVLRCM + PARAM_IVLRCM,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRCM: ' || IFNULL(CAST(PARAM_IVLRCM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QMRCCM: ' || IFNULL(CAST(PARAM_QMRCCM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSMRC: ' || IFNULL(CAST(PARAM_QPSMRC AS VARCHAR(30)), '(NULL)');
    SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_REGISTRO_SALDOS_COMP_DETALLE', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.8   REQF008     Descarga de saldos financieros (Operación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_DESCARGA_SALDOS_FINANCIEROS_OPERACION
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_DESCARGA_SALDOS_FINANCIEROS_OPERACION(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10, 0),
    IN PARAM_NLBRC NUMERIC(5,0),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRTLB NUMERIC(15,5),
    IN PARAM_QPSTLB NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRTLB = 0 AND PARAM_QPSTLB = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada y el peso liberado tienen valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización ZZWM06
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWM06
                SET
                    QTTMRC = QTTMRC - PARAM_QMRTLB,
                    QPSMRC = QPSMRC - PARAM_QPSTLB,
                    IVLMRC = IVLMRC - PARAM_IVLRLB,
                    QSLIFN = QSLIFN - PARAM_QMRTLB,
                    QSLPSF = QSLPSF - PARAM_QPSTLB,
                    ISLVFN = ISLVFN - PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                IF EXISTS (
                    SELECT 1 FROM DC@ALMAPER.ZZWM06
                    WHERE NOPRCN = PARAM_NOPRCN AND CTOPRC = 'W' AND CTPOAL = 'C' AND ISLVFN < 0.5
                )
                THEN
                    UPDATE DC@ALMAPER.ZZWM06 SET SESTRG = 'C', FCNCOP = DC@RNSLIB.FECHA() WHERE NOPRCN = PARAM_NOPRCN;
                END IF;

                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWM06
                SET
                    QTTMRC = QTTMRC - PARAM_QMRTLB,
                    QPSMRC = QPSMRC - PARAM_QPSTLB,
                    IVLMRC = IVLMRC - PARAM_IVLRLB,
                    QSLIFN = QSLIFN - PARAM_QMRTLB,
                    QSLPSF = QSLPSF - PARAM_QPSTLB,
                    ISLVFN = ISLVFN - PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                IF EXISTS (
                    SELECT 1 FROM DC@RNSLIB.ZZWM06
                    WHERE NOPRCN = PARAM_NOPRCN AND CTOPRC = 'W' AND CTPOAL = 'C' AND ISLVFN < 0.5
                )
                THEN
                    UPDATE DC@RNSLIB.ZZWM06 SET SESTRG = 'C', FCNCOP = DC@RNSLIB.FECHA() WHERE NOPRCN = PARAM_NOPRCN;
                END IF;

                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QMRTLB: ' || IFNULL(CAST(PARAM_QMRTLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSTLB: ' || IFNULL(CAST(PARAM_QPSTLB AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_DESCARGA_SALDOS_FINANCIEROS_OPERACION', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.8   REQF008     Descarga de saldos financieros (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_DESCARGA_SALDOS_FINANCIEROS_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_DESCARGA_SALDOS_FINANCIEROS_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NITEM NUMERIC(5,0),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRTLB NUMERIC(15,5),
    IN PARAM_QPSTLB NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NITEM, 0) = 0 OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRTLB = 0 AND PARAM_QPSTLB = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada y el peso liberado por ítem tienen valor cero,';
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'El peso liberado por ítem no puede tener valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualizacíon ZZWT28
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWT28
                SET
                    QMRCCM = QMRCCM - PARAM_QMRTLB,
                    QPSMRC = QPSMRC - PARAM_QPSTLB,
                    IVLRCM = IVLRCM - PARAM_IVLRLB, 
                    QSLCNF = QSLCNF - PARAM_QMRTLB,
                    QSLPSF = QSLPSF - PARAM_QPSTLB,
                    ISLDFN = ISLDFN - PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                IF EXISTS (
                    SELECT 1 FROM DC@ALMAPER.ZZWT28
                    WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND CTPOAL = 'C' AND ISLDFN < 0.5
                )
                THEN
                    UPDATE DC@ALMAPER.ZZWT28 SET SESTRG = 'C' WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                END IF;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWT28
                SET
                    QMRCCM = QMRCCM - PARAM_QMRTLB,
                    QPSMRC = QPSMRC - PARAM_QPSTLB,
                    IVLRCM = IVLRCM - PARAM_IVLRLB, 
                    QSLCNF = QSLCNF - PARAM_QMRTLB,
                    QSLPSF = QSLPSF - PARAM_QPSTLB,
                    ISLDFN = ISLDFN - PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                IF EXISTS (
                    SELECT 1 FROM DC@RNSLIB.ZZWT28
                    WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND CTPOAL = 'C' AND ISLDFN < 0.5
                )
                THEN
                    UPDATE DC@RNSLIB.ZZWT28 SET SESTRG = 'C' WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                END IF;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QMRTLB: ' || IFNULL(CAST(PARAM_QMRTLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSTLB: ' || IFNULL(CAST(PARAM_QPSTLB AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_DESCARGA_SALDOS_FINANCIEROS_DETALLE', PARAMETROS, RESPUESTA);

END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.9   REQF009     Descarga de saldos aduaneros (Operación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_DESCARGA_SALDOS_ADUANEROS_OPERACION
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_DESCARGA_SALDOS_ADUANEROS_OPERACION(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NLBRC NUMERIC(5,0),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRTLB NUMERIC(15,5),
    IN PARAM_QPSTLB NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    -- Validación
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRTLB = 0 AND PARAM_QPSTLB = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada y el peso liberado tienen valor cero,';
    ELSEIF PARAM_QMRTLB = 0 AND PARAM_QPSTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada no puede tener valor cero,';
    ELSEIF PARAM_QPSTLB = 0 AND PARAM_QMRTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'El peso liberado no puede tener valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización ZZWM06
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWM06
                SET
                    QSLIAU = QSLIAU - PARAM_QMRTLB,
                    QSLPAU = QSLPAU - PARAM_QPSTLB,
                    ISLVLD = ISLVLD - PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro modificado';
            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWM06
                SET
                    QSLIAU = QSLIAU - PARAM_QMRTLB,
                    QSLPAU = QSLPAU - PARAM_QPSTLB,
                    ISLVLD = ISLVLD - PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro modificado';
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QMRTLB: ' || IFNULL(CAST(PARAM_QMRTLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSTLB: ' || IFNULL(CAST(PARAM_QPSTLB AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');

    CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_DESCARGA_SALDOS_ADUANEROS_OPERACION', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.9   REQF009     Descarga de saldos aduaneros (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_DESCARGA_SALDOS_ADUANEROS_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_DESCARGA_SALDOS_ADUANEROS_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NITEM NUMERIC(5,0),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRTLB NUMERIC(15,5),
    IN PARAM_QPSTLB NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NITEM, 0) = 0 OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRTLB = 0 AND PARAM_QPSTLB = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada y el peso liberado por ítem tienen valor cero,';
    ELSEIF PARAM_QMRTLB = 0 AND PARAM_QPSTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada por ítem no puede tener valor cero,';
    ELSEIF PARAM_QPSTLB = 0 AND PARAM_QMRTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'El peso liberado por ítem no puede tener valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización ZZWT28
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWT28
                SET
                    QSLCND = QSLCND - PARAM_QMRTLB,
                    QSLPSD = QSLPSD - PARAM_QPSTLB,
                    ISLDDC = ISLDDC - PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';
            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWT28
                SET
                    QSLCND = QSLCND - PARAM_QMRTLB,
                    QSLPSD = QSLPSD - PARAM_QPSTLB,
                    ISLDDC = ISLDDC - PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro modificado';
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QMRTLB: ' || IFNULL(CAST(PARAM_QMRTLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSTLB: ' || IFNULL(CAST(PARAM_QPSTLB AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_DESCARGA_SALDOS_ADUANEROS_DETALLE', PARAMETROS, RESPUESTA);
END
GO

-- ----------------------------------------------------------------------------------------------------
--  4.1.10  REQF010     Rollback anulación pre-liberación (Cabecera)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_ANULACION_PRE_LIBERACION_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_ANULACION_PRE_LIBERACION_CABECERA(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NPRLBR NUMERIC(10,0),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NPRLBR, 0) = 0 OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM', 'LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Rollback ZZWW13
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWW13 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWW13
                SET
                    SESTRG = 'A',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWW13 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWW13
                SET
                    SESTRG = 'A',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
            'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
            'PARAM_NPRLBR: ' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
            'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_ANULACION_PRE_LIBERACION_CABECERA', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.10  REQF010     Rollback anulación pre-liberación (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_ANULACION_PRE_LIBERACION_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_ANULACION_PRE_LIBERACION_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NPRLBR NUMERIC(10,0),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    -- Validación
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NPRLBR, 0) = 0 OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM', 'LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Rollback ZZWW14
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWW14 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWW14
                SET
                    SESTRG = 'A',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWW14 WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWW14
                SET
                    SESTRG = 'A',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
            'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
            'PARAM_NPRLBR: ' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
            'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
            'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_ANULACION_PRE_LIBERACION_DETALLE', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.11  REQF011     Rollback atención pre-liberación (Cabecera)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_ATENCION_LIBERACION_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_ATENCION_LIBERACION_CABECERA(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NLBRC NUMERIC(10,0),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    -- Validación
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Rollback ZZWT13
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT13 WHERE NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
			    SET PARAM_PROCDESC = 'No existe el registro';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWT13
                SET
                    FATNLB = 0,
                    CUSATN = ' ',
                    HATNC = 0,
                    CAGATN = 0,
                    SSTCLB = 'E',
                    SESTRG = 'A',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro recuperado';
            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT13 WHERE NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
			    SET PARAM_PROCDESC = 'No existe el registro';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWT13
                SET
                    FATNLB = 0,
                    CUSATN = ' ',
                    HATNC = 0,
                    CAGATN = 0,
                    SSTCLB = 'E',
                    SESTRG = 'A',
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro recuperado';
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');

    CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_ATENCION_LIBERACION_CABECERA', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.11  REQF011     Rollback atención pre-liberación (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_ATENCION_LIBERACION_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_ATENCION_LIBERACION_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NLBRC NUMERIC(10,0),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NITEM NUMERIC(5,0),
    IN PARAM_NCRRLT NUMERIC(4,0),
    IN PARAM_SSTLBD CHAR(1),
    IN PARAM_SESTRG CHAR(1),
    IN PARAM_IVLRAT NUMERIC(15,5),
    IN PARAM_FATNLB NUMERIC(8,0),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QCNLBA NUMERIC(15,5),
    IN PARAM_QPSLBA NUMERIC(15,5),
    INOUT PARAM_PROCDESC VARCHAR(250),
	INOUT PARAM_PROCSTATUS INT
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NITEM, 0) = 0 OR
        IFNULL(PARAM_NCRRLT, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_SSTLBD, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_SESTRG, '')) = '' OR
        IFNULL(PARAM_IVLRAT, 0) = 0 OR
        IFNULL(PARAM_FATNLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;

    IF PARAM_QCNLBA = 0 AND PARAM_QPSLBA = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad o el peso de liberación debe ser mayor a cero,';
    END IF;

    IF PARAM_SSTLBD <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de situación de detalle no válido,';
	END IF;

    IF PARAM_SESTRG <> 'C' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de estado de registro no válido,';
	END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización ZZWT14
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (
                SELECT 1 FROM DC@ALMAPER.ZZWT14
                WHERE NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND NCRRLT = PARAM_NCRRLT
            ) THEN
                SET PARAM_PROCSTATUS = 1;
			    SET PARAM_PROCDESC = 'No existe el registro';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWT14
                SET
                    IVLRAT = 0,
                    QCNLBA = 0,
                    QPSLBA = 0,
                    SSTLBD = 'E',
                    SESTRG = 'A',
                    FATNLB = 0,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND NCRRLT = PARAM_NCRRLT;

                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro recuperado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (
                SELECT 1 FROM DC@RNSLIB.ZZWT14
                WHERE NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND NCRRLT = PARAM_NCRRLT
            ) THEN
                SET PARAM_PROCSTATUS = 1;
			    SET PARAM_PROCDESC = 'No existe el registro';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWT14
                SET
                    IVLRAT = 0,
                    QCNLBA = 0,
                    QPSLBA = 0,
                    SSTLBD = 'E',
                    SESTRG = 'A',
                    FATNLB = 0,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NLBRC = PARAM_NLBRC AND NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND NCRRLT = PARAM_NCRRLT;

                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro recuperado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NCRRLT: ' || IFNULL(CAST(PARAM_NCRRLT AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_SSTLBD: ' || IFNULL(PARAM_SSTLBD, '(NULL)') || ' | ' ||
        'PARAM_SESTRG: ' || IFNULL(PARAM_SESTRG, '(NULL)') || ' | ' ||
        'PARAM_IVLRAT: ' || IFNULL(CAST(PARAM_IVLRAT AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_FATNLB: ' || IFNULL(CAST(PARAM_FATNLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');

    CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_ATENCION_LIBERACION_DETALLE', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.12  REQF012     Rollback firma de liberaciones (Representantes por liberación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_FIRMA_LIBERACION
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_FIRMA_LIBERACION(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NPRLBR NUMERIC(10,0),
    IN PARAM_STPENT CHAR(1),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NLBRRL NUMERIC(10,0),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    -- Validaciones
    IF
        IFNULL(PARAM_NPRLBR, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_STPENT, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRRL, 0) = 0
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_STPENT NOT IN ('A','B','C') THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de tipo de entidad no válido,';
    END IF;

    -- Eliminación ZZWT93
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (
                SELECT 1 FROM DC@ALMAPER.ZZWT93
                WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NLBRRL = PARAM_NLBRRL AND STPENT = PARAM_STPENT
            ) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                DELETE FROM
                    DC@ALMAPER.ZZWT93
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NLBRRL = PARAM_NLBRRL AND STPENT = PARAM_STPENT;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro eliminado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (
                SELECT 1 FROM DC@RNSLIB.ZZWT93
                WHERE NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NLBRRL = PARAM_NLBRRL AND STPENT = PARAM_STPENT
            ) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                DELETE FROM
                    DC@RNSLIB.ZZWT93
                WHERE
                    NPRLBR = PARAM_NPRLBR AND NOPRCN = PARAM_NOPRCN AND NLBRRL = PARAM_NLBRRL AND STPENT = PARAM_STPENT;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro eliminado';

            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NPRLBR: ' || IFNULL(CAST(PARAM_NPRLBR AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_STPENT: ' || IFNULL(PARAM_STPENT, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NLBRRL: ' || IFNULL(CAST(PARAM_NLBRRL AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_FIRMA_LIBERACION', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.13  REQF013     Rollback registro de saldos comprometidos (Operación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_REGISTRO_SALDOS_COMP_OPERACION
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_REGISTRO_SALDOS_COMP_OPERACION(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10, 0),
    IN PARAM_IVLMRC NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QTTMRC NUMERIC(15,5),
    IN PARAM_QPSMRC NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_IVLMRC, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QTTMRC = 0 AND PARAM_QPSMRC = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad  y el peso de mercadería comprometida tienen valor cero,';
    ELSEIF PARAM_QTTMRC = 0 AND PARAM_QPSMRC < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad de mercadería comprometida no puede tener valor cero,';
    ELSEIF PARAM_QPSMRC = 0 AND PARAM_QTTMRC < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'El peso de mercadería comprometida no puede tener valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización (ZZWM06)
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE
                UPDATE
                    DC@ALMAPER.ZZWM06
                SET
                    QTTMRC = QTTMRC - PARAM_QTTMRC,
                    QPSMRC = QPSMRC - PARAM_QPSMRC,
                    IVLMRC = IVLMRC - PARAM_IVLMRC,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA, 
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';
            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE
                UPDATE
                    DC@ALMAPER.ZZWM06
                SET
                    QTTMRC = QTTMRC - PARAM_QTTMRC,
                    QPSMRC = QPSMRC - PARAM_QPSMRC,
                    IVLMRC = IVLMRC - PARAM_IVLMRC,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA, 
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLMRC: ' || IFNULL(CAST(PARAM_IVLMRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QTTMRC: ' || IFNULL(CAST(PARAM_QTTMRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSMRC: ' || IFNULL(CAST(PARAM_QPSMRC AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_REGISTRO_SALDOS_COMP_OPERACION', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.13  REQF013     Rollback registro de saldos comprometidos (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_REGISTRO_SALDOS_COMP_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_REGISTRO_SALDOS_COMP_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10, 0),
    IN PARAM_NITEM NUMERIC(5,0),
    IN PARAM_IVLRCM NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRCCM NUMERIC(15,5),
    IN PARAM_QPSMRC NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    -- Validaciones
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NITEM, 0) = 0 OR
        IFNULL(PARAM_IVLRCM, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRCCM = 0 AND PARAM_QPSMRC = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad  y el peso de mercadería comprometida tienen valor cero,';
    ELSEIF PARAM_QMRCCM = 0 AND PARAM_QPSMRC < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad de mercadería comprometida no puede tener valor cero,';
    ELSEIF PARAM_QPSMRC = 0 AND PARAM_QMRCCM < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'El peso de mercadería comprometida no puede tener valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización ZZWT28
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWT28
                SET
                    QMRCCM = QMRCCM - PARAM_QMRCCM,
                    QPSMRC = QPSMRC - PARAM_QPSMRC,
                    IVLRCM = IVLRCM - PARAM_IVLRCM,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                SET PARAM_PROCSTATUS = 0;
                SET PARAM_PROCDESC = 'Registro recuperado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWT28
                SET
                    QMRCCM = QMRCCM - PARAM_QMRCCM,
                    QPSMRC = QPSMRC - PARAM_QPSMRC,
                    IVLRCM = IVLRCM - PARAM_IVLRCM,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                SET PARAM_PROCSTATUS = 0;
                SET PARAM_PROCDESC = 'Registro recuperado';
                
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRCM: ' || IFNULL(CAST(PARAM_IVLRCM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QMRCCM: ' || IFNULL(CAST(PARAM_QMRCCM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSMRC: ' || IFNULL(CAST(PARAM_QPSMRC AS VARCHAR(30)), '(NULL)');
    SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(20)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_REGISTRO_SALDOS_COMP_DETALLE', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.14  REQF014     Rollback descarga saldos financieros (Operación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_FINANCIEROS_OPERACION
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_FINANCIEROS_OPERACION(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRTLB NUMERIC(15,5),
    IN PARAM_QPSTLB NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRTLB = 0 AND PARAM_QPSTLB = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad total liberada y el peso total liberado tienen valor cero,';
    ELSEIF PARAM_QMRTLB = 0 AND PARAM_QPSTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad total liberada no puede tener valor cero,';
    ELSEIF PARAM_QPSTLB = 0 AND PARAM_QMRTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'El peso total liberado no puede tener valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;
	
	IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización ZZWM06
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWM06
                SET
                    QTTMRC = QTTMRC + PARAM_QMRTLB,
                    QPSMRC = QPSMRC + PARAM_QPSTLB,
                    IVLMRC = IVLMRC + PARAM_IVLRLB,
                    QSLIFN = QSLIFN + PARAM_QMRTLB,
                    QSLPSF = QSLPSF + PARAM_QPSTLB, 
                    ISLVFN = ISLVFN + PARAM_IVLRLB, 
                    FULTAC = DC@RNSLIB.FECHA(), 
                    HULTAC = DC@RNSLIB.HORA(), 
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                IF EXISTS (
                    SELECT 1 FROM DC@ALMAPER.ZZWM06
                    WHERE NOPRCN = PARAM_NOPRCN AND CTOPRC = 'W' AND CTPOAL = 'C' AND ISLVFN > 0.5
                ) THEN
                    UPDATE DC@ALMAPER.ZZWM06 SET SESTRG = 'A', FCNCOP = 0 WHERE NOPRCN = PARAM_NOPRCN;
                END IF;

                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';
                    
            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWM06
                SET
                    QTTMRC = QTTMRC + PARAM_QMRTLB,
                    QPSMRC = QPSMRC + PARAM_QPSTLB,
                    IVLMRC = IVLMRC + PARAM_IVLRLB,
                    QSLIFN = QSLIFN + PARAM_QMRTLB,
                    QSLPSF = QSLPSF + PARAM_QPSTLB, 
                    ISLVFN = ISLVFN + PARAM_IVLRLB, 
                    FULTAC = DC@RNSLIB.FECHA(), 
                    HULTAC = DC@RNSLIB.HORA(), 
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                IF EXISTS (
                    SELECT 1 FROM DC@RNSLIB.ZZWM06
                    WHERE NOPRCN = PARAM_NOPRCN AND CTOPRC = 'W' AND CTPOAL = 'C' AND ISLVFN > 0.5
                ) THEN
                    UPDATE DC@RNSLIB.ZZWM06 SET SESTRG = 'A', FCNCOP = 0 WHERE NOPRCN = PARAM_NOPRCN;
                END IF;

                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';
                    
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QMRTLB: ' || IFNULL(CAST(PARAM_QMRTLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSTLB: ' || IFNULL(CAST(PARAM_QPSTLB AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_FINANCIEROS_OPERACION', PARAMETROS, RESPUESTA);
END
GO

-- ----------------------------------------------------------------------------------------------------
--  4.1.14  REQF014     Rollback descarga saldos financieros (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_FINANCIEROS_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_FINANCIEROS_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10, 0),
    IN PARAM_NITEM NUMERIC(5,0),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRTLB NUMERIC(15,5),
    IN PARAM_QPSTLB NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NITEM, 0) = 0 OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRTLB = 0 AND PARAM_QPSTLB = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada y el peso liberado por ítem tienen valor cero,';
    ELSEIF PARAM_QMRTLB = 0 AND PARAM_QPSTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada por ítem no puede tener valor cero,';
    ELSEIF PARAM_QPSTLB = 0 AND PARAM_QMRTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'El peso liberado por ítem no puede tener valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualizacíon ZZWT28
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWT28
                SET
                    QMRCCM = QMRCCM + PARAM_QMRTLB,
                    QPSMRC = QPSMRC + PARAM_QPSTLB,
                    IVLRCM = IVLRCM + PARAM_IVLRLB,
                    QSLCNF = QSLCNF + PARAM_QMRTLB,
                    QSLPSF = QSLPSF + PARAM_QPSTLB,
                    ISLDFN = ISLDFN + PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                IF EXISTS (
                    SELECT 1 FROM DC@ALMAPER.ZZWT28
                    WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND CTPOAL = 'C' AND ISLDFN > 0.5
                ) THEN
                    UPDATE DC@ALMAPER.ZZWT28 SET SESTRG = 'A' WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                END IF;

                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWT28
                SET
                    QMRCCM = QMRCCM + PARAM_QMRTLB,
                    QPSMRC = QPSMRC + PARAM_QPSTLB,
                    IVLRCM = IVLRCM + PARAM_IVLRLB,
                    QSLCNF = QSLCNF + PARAM_QMRTLB,
                    QSLPSF = QSLPSF + PARAM_QPSTLB,
                    ISLDFN = ISLDFN + PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                IF EXISTS (
                    SELECT 1 FROM DC@RNSLIB.ZZWT28
                    WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM AND CTPOAL = 'C' AND ISLDFN > 0.5
                ) THEN
                    UPDATE DC@RNSLIB.ZZWT28 SET SESTRG = 'A' WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                END IF;

                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro recuperado';
                
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QMRTLB: ' || IFNULL(CAST(PARAM_QMRTLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSTLB: ' || IFNULL(CAST(PARAM_QPSTLB AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_FINANCIEROS_DETALLE', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.15  REQF015     Rollback descarga saldos aduaneros (Operación)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_ADUANEROS_OPERACION
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_ADUANEROS_OPERACION(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NLBRC NUMERIC(5,0),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRTLB NUMERIC(15,5),
    IN PARAM_QPSTLB NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRC, 0) = 0 OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = '' OR
        TRIM(B ' ' FROM IFNULL(PARAM_NTRMNL, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRTLB = 0 AND PARAM_QPSTLB = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada y el peso liberado tienen valor cero,';
    ELSEIF PARAM_QMRTLB = 0 AND PARAM_QPSTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada no puede tener valor cero,';
    ELSEIF PARAM_QPSTLB = 0 AND PARAM_QMRTLB < 0 THEN
        SET VAL = vAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'El peso liberado no puede tener valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización ZZWM06
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@ALMAPER.ZZWM06
                SET
                    QSLIAU = QSLIAU + PARAM_QMRTLB,
                    QSLPAU = QSLPAU + PARAM_QPSTLB,
                    ISLVLD = ISLVLD + PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(), 
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro actualizado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWM06 WHERE NOPRCN = PARAM_NOPRCN) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE

                UPDATE
                    DC@RNSLIB.ZZWM06
                SET
                    QSLIAU = QSLIAU + PARAM_QMRTLB,
                    QSLPAU = QSLPAU + PARAM_QPSTLB,
                    ISLVLD = ISLVLD + PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(), 
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN;
                
                SET PARAM_PROCSTATUS = 0;
			    SET PARAM_PROCDESC = 'Registro actualizado';
                
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_NTRMNL: ' || IFNULL(PARAM_NTRMNL, '(NULL)') || ' | ' ||
        'PARAM_QMRTLB: ' || IFNULL(CAST(PARAM_QMRTLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSTLB: ' || IFNULL(CAST(PARAM_QPSTLB AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');

    CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_ADUANEROS_OPERACION', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.1.15  REQF015     Rollback descarga saldos aduaneros (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_ADUANEROS_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_ADUANEROS_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NITEM NUMERIC(5,0),
    IN PARAM_IVLRLB NUMERIC(15,5),
    IN PARAM_CULUSA CHAR(10),
    IN PARAM_NTRMNL CHAR(10),
    IN PARAM_QMRTLB NUMERIC(15,5),
    IN PARAM_QPSTLB NUMERIC(15,5),
    INOUT PARAM_PROCSTATUS INT,
    INOUT PARAM_PROCDESC VARCHAR(250)
)
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NITEM, 0) = 0 OR
        IFNULL(PARAM_IVLRLB, 0) = 0 OR
        TRIM(B ' ' FROM IFNULL(PARAM_CULUSA, '')) = ''
    THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros de entrada deben tener valor,';
    END IF;

    IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
        SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
    END IF;

    IF PARAM_QMRTLB = 0 AND PARAM_QPSTLB = 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada y el peso liberado por ítem tienen valor cero,';
    ELSEIF PARAM_QMRTLB = 0 AND PARAM_QPSTLB < 0 THEN
        SET VAL = VAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'La cantidad liberada por ítem no puede tener valor cero,';
    ELSEIF PARAM_QPSTLB = 0 AND PARAM_QMRTLB < 0 THEN
        SET VAL = vAL + 1;
        SET PARAM_PROCDESC = PARAM_PROCDESC || 'El peso liberado por ítem no puede tener valor cero,';
    END IF;

    IF PARAM_CULUSA NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de usuario no válido,';
	END IF;

    IF PARAM_NTRMNL NOT IN ('WEBALMA', 'WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
	END IF;

    -- Actualización ZZWT28
    IF VAL = 0 THEN

        IF PARAM_CCMPN = 'AM' THEN --DC@ALMAPER

            IF NOT EXISTS (SELECT 1 FROM DC@ALMAPER.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE
                
                UPDATE
                    DC@ALMAPER.ZZWT28
                SET
                    QSLCND = QSLCND + PARAM_QMRTLB,
                    QSLPSD = QSLPSD + PARAM_QPSTLB,
                    ISLDDC = ISLDDC + PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro actualizado';

            END IF;

        ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
        
            IF NOT EXISTS (SELECT 1 FROM DC@RNSLIB.ZZWT28 WHERE NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM) THEN
                SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'El registro no existe';
            ELSE
                
                UPDATE
                    DC@RNSLIB.ZZWT28
                SET
                    QSLCND = QSLCND + PARAM_QMRTLB,
                    QSLPSD = QSLPSD + PARAM_QPSTLB,
                    ISLDDC = ISLDDC + PARAM_IVLRLB,
                    FULTAC = DC@RNSLIB.FECHA(),
                    HULTAC = DC@RNSLIB.HORA(),
                    CULUSA = PARAM_CULUSA,
                    NTRMNL = PARAM_NTRMNL
                WHERE
                    NOPRCN = PARAM_NOPRCN AND NITEM = PARAM_NITEM;
                
                SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro actualizado';
                
            END IF;

        ELSE
            SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Esquema no válido';
        END IF;

    ELSE
        SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en validaciones: ' || PARAM_PROCDESC;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NITEM: ' || IFNULL(CAST(PARAM_NITEM AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_IVLRLB: ' || IFNULL(CAST(PARAM_IVLRLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_CULUSA: ' || IFNULL(PARAM_CULUSA, '(NULL)') || ' | ' ||
        'PARAM_QMRTLB: ' || IFNULL(CAST(PARAM_QMRTLB AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_QPSTLB: ' || IFNULL(CAST(PARAM_QPSTLB AS VARCHAR(30)), '(NULL)');
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(250)) || ' | ' || IFNULL(PARAM_PROCDESC,'Sin mensaje'),'Error');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_ROLL_DESCARGA_SALDOS_ADUANEROS_DETALLE', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.2.1   REQFE001    Consulta de liberaciones (Cabecera)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_LIBERACIONES_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_LIBERACIONES_CABECERA(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_FECINI NUMERIC(8,0),
    IN PARAM_FECFIN NUMERIC(8,0)
)
LANGUAGE SQL 
DYNAMIC RESULT SETS 1
BEGIN
    DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    DECLARE C_NODATA CURSOR FOR
        SELECT 'Sin datos' AS RESULT FROM SYSIBM.SYSDUMMY1;

    DECLARE C_ALMAPER CURSOR FOR
		SELECT
			A.NOPRCN, A.NLBRC, A.NOPREM, A.FEMSLB, A.FATNLB, A.CTPOLB, A.IVLRLB, A.SSTCLB, A.SESTRG,
			B.NWRRNT, B.NCRTDP, B.NOPRCN, B.CTPOAL, B.CALMCM, B.CCLNT, B.CFNNC, B.FINGR, B.FPRMVN, B.FVNCMX, B.CMNDA, B.CRGMN, B.SCNINP, B.ISLVFS, B.ISLVFN, B.ISLVLD,
			C.CUBALC, C.TDRALC,
			D.NPRLBR1, D.NPRLBR2, D.CRPRS1, D.CRPRS2, D.FFRMRP1, D.FFRMRP2, D.HULTAC1, D.HULTAC2,
			E.NEXWRR,
			F.FAPOPE, F.FEMBRQ, F.FRCPBL, F.FENTBL, F.CVPRCN, F.NCNCEM
		FROM
		    DC@ALMAPER.ZZWT13 A
		    LEFT OUTER JOIN DC@ALMAPER.ZZWM06 B ON A.NOPRCN = B.NOPRCN
		    LEFT OUTER JOIN DC@ALMAPER.RZZM23 C ON B.CTPOAL = C.CTPOAL AND B.CALMCM = C.CALMCM            
		    LEFT OUTER JOIN
		    (
				SELECT
					D1.NLBRRL,	
					D1.CENTD,					
					MAX(CASE D1.FILA WHEN 1 THEN D1.NPRLBR ELSE NULL END) AS NPRLBR1,
					MAX(CASE D1.FILA WHEN 2 THEN D1.NPRLBR ELSE NULL END) AS NPRLBR2,
					MAX(CASE D1.FILA WHEN 1 THEN D1.CRPRS ELSE NULL END) AS CRPRS1,
					MAX(CASE D1.FILA WHEN 2 THEN D1.CRPRS ELSE NULL END) AS CRPRS2,
					MAX(CASE D1.FILA WHEN 1 THEN D1.FFRMRP ELSE NULL END) AS FFRMRP1,
					MAX(CASE D1.FILA WHEN 2 THEN D1.FFRMRP ELSE NULL END) AS FFRMRP2,
					MAX(CASE D1.FILA WHEN 1 THEN D1.HULTAC ELSE NULL END) AS HULTAC1,
					MAX(CASE D1.FILA WHEN 2 THEN D1.HULTAC ELSE NULL END) AS HULTAC2
				FROM
				(	
					SELECT ROW_NUMBER() OVER (PARTITION BY NLBRRL) as fila, NLBRRL, CENTD, NPRLBR, CRPRS, FFRMRP, HULTAC FROM DC@ALMAPER.ZZWT93  WHERE STPENT='B'
				) D1
				GROUP BY D1.NLBRRL, D1.CENTD            
		    ) D ON A.NLBRC = D.NLBRRL AND B.CFNNC = D.CENTD
			LEFT OUTER JOIN DC@ALMAPER.ZZWT23 E ON A.NOPRCN = E.NOPRCN
			LEFT OUTER JOIN DC@ALMAPER.ZZWM78 F ON A.NOPREM = F.NOPREM        
	        WHERE
	                A.CCMPN = PARAM_CCMPN AND
	                A.FEMSLB BETWEEN PARAM_FECINI AND PARAM_FECFIN;

    DECLARE C_RNSLIB CURSOR FOR
		SELECT
			A.NOPRCN, A.NLBRC, A.NOPREM, A.FEMSLB, A.FATNLB, A.CTPOLB, A.IVLRLB, A.SSTCLB, A.SESTRG,
			B.NWRRNT, B.NCRTDP, B.NOPRCN, B.CTPOAL, B.CALMCM, B.CCLNT, B.CFNNC, B.FINGR, B.FPRMVN, B.FVNCMX, B.CMNDA, B.CRGMN, B.SCNINP, B.ISLVFS, B.ISLVFN, B.ISLVLD,
			C.CUBALC, C.TDRALC,
			D.NPRLBR1, D.NPRLBR2, D.CRPRS1, D.CRPRS2, D.FFRMRP1, D.FFRMRP2, D.HULTAC1, D.HULTAC2,
			E.NEXWRR,
			F.FAPOPE, F.FEMBRQ, F.FRCPBL, F.FENTBL, F.CVPRCN, F.NCNCEM
		FROM
		    DC@RNSLIB.ZZWT13 A
		    LEFT OUTER JOIN DC@RNSLIB.ZZWM06 B ON A.NOPRCN = B.NOPRCN
		    LEFT OUTER JOIN DC@RNSLIB.RZZM23 C ON B.CTPOAL = C.CTPOAL AND B.CALMCM = C.CALMCM            
		    LEFT OUTER JOIN
		    (
				SELECT
					D1.NLBRRL,	
					D1.CENTD,					
					MAX(CASE D1.FILA WHEN 1 THEN D1.NPRLBR ELSE NULL END) AS NPRLBR1,
					MAX(CASE D1.FILA WHEN 2 THEN D1.NPRLBR ELSE NULL END) AS NPRLBR2,
					MAX(CASE D1.FILA WHEN 1 THEN D1.CRPRS ELSE NULL END) AS CRPRS1,
					MAX(CASE D1.FILA WHEN 2 THEN D1.CRPRS ELSE NULL END) AS CRPRS2,
					MAX(CASE D1.FILA WHEN 1 THEN D1.FFRMRP ELSE NULL END) AS FFRMRP1,
					MAX(CASE D1.FILA WHEN 2 THEN D1.FFRMRP ELSE NULL END) AS FFRMRP2,
					MAX(CASE D1.FILA WHEN 1 THEN D1.HULTAC ELSE NULL END) AS HULTAC1,
					MAX(CASE D1.FILA WHEN 2 THEN D1.HULTAC ELSE NULL END) AS HULTAC2
				FROM
				(	
					SELECT ROW_NUMBER() OVER (PARTITION BY NLBRRL) as fila, NLBRRL, CENTD, NPRLBR, CRPRS, FFRMRP, HULTAC FROM DC@RNSLIB.ZZWT93  WHERE STPENT='B'
				) D1
				GROUP BY D1.NLBRRL, D1.CENTD            
		    ) D ON A.NLBRC = D.NLBRRL AND B.CFNNC = D.CENTD
			LEFT OUTER JOIN DC@RNSLIB.ZZWT23 E ON A.NOPRCN = E.NOPRCN
			LEFT OUTER JOIN DC@RNSLIB.ZZWM78 F ON A.NOPREM = F.NOPREM        
         WHERE
            A.CCMPN = PARAM_CCMPN AND
         	A.FEMSLB BETWEEN PARAM_FECINI AND PARAM_FECFIN;
    
    SET RESPUESTA = '';
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_FECINI, 0) = 0 OR
        IFNULL(PARAM_FECFIN, 0) = 0
    THEN
        SET RESPUESTA = 'Sin datos';
        OPEN C_NODATA;
    ELSE
        IF PARAM_CCMPN = 'AM' THEN
            OPEN C_ALMAPER;
        ELSEIF PARAM_CCMPN = 'LZ' THEN
            OPEN C_RNSLIB;
        ELSE
            SET RESPUESTA = 'Sin datos';
            OPEN C_NODATA;
        END IF;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_FECINI: ' || IFNULL(CAST(PARAM_FECINI AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_FECFIN: ' || IFNULL(CAST(PARAM_FECFIN AS VARCHAR(30)), '(NULL)');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_CONSULTA_LIBERACIONES_CABECERA', PARAMETROS, RESPUESTA);
END
GO

-- ----------------------------------------------------------------------------------------------------
--  4.2.1   REQFE001    Consulta de liberaciones (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_LIBERACIONES_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_LIBERACIONES_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NLBRC NUMERIC(10,0)
)
LANGUAGE SQL 
DYNAMIC RESULT SETS 1
BEGIN
    DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    DECLARE C_NODATA CURSOR FOR
        SELECT 'Sin datos' AS RESULT FROM SYSIBM.SYSDUMMY1;

    -- DC@ALMAPER
    DECLARE C_ALMAPER CURSOR FOR
        SELECT
            -- ZZWT14
            A.NOPRCN, A.NLBRC, A.NITEM, A.NCRRLT, A.NORDSR, A.CDPRDC, A.QLBRCN, A.QLBRPS, A.QCNLBA, A.QPSLBA, A.IVLRLB, A.IVLRAT,
            A.FATNLB, A.SSTLBD, A.SESTRG,
            -- ZZWT28
            B.CFMLPR, B.QCNTIT, B.CUNDCN, B.QPSOIT, B.CUNDPS, B.IVUNIT, B.IVTOIT, B.STPCNS, B.QMRCCM, B.QSLCNF, B.QSLCFS, B.QSLCND,
            B.QPSMRC, B.QSLPSF, B.QSLPFS, B.QSLPSD, B.IVLRCM, B.ISLDFN, B.ISLDFS, B.ISLDDC, B.SINSPR
        FROM
            DC@ALMAPER.ZZWT14 A
            LEFT OUTER JOIN DC@ALMAPER.ZZWT28 B ON A.NOPRCN = B.NOPRCN
        WHERE A.NOPRCN = PARAM_NOPRCN AND A.NLBRC = PARAM_NLBRC;
    
    -- DC@RNSLIB
    DECLARE C_RNSLIB CURSOR FOR
        SELECT
            -- ZZWT14
            A.NOPRCN, A.NLBRC, A.NITEM, A.NCRRLT, A.NORDSR, A.CDPRDC, A.QLBRCN, A.QLBRPS, A.QCNLBA, A.QPSLBA, A.IVLRLB, A.IVLRAT,
            A.FATNLB, A.SSTLBD, A.SESTRG,
            -- ZZWT28
            B.CFMLPR, B.QCNTIT, B.CUNDCN, B.QPSOIT, B.CUNDPS, B.IVUNIT, B.IVTOIT, B.STPCNS, B.QMRCCM, B.QSLCNF, B.QSLCFS, B.QSLCND,
            B.QPSMRC, B.QSLPSF, B.QSLPFS, B.QSLPSD, B.IVLRCM, B.ISLDFN, B.ISLDFS, B.ISLDDC, B.SINSPR
        FROM
            DC@RNSLIB.ZZWT14 A
            LEFT OUTER JOIN DC@RNSLIB.ZZWT28 B ON A.NOPRCN = B.NOPRCN
        WHERE A.NOPRCN = PARAM_NOPRCN AND A.NLBRC = PARAM_NLBRC;

    SET RESPUESTA = '';
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRC, 0) = 0
    THEN
        SET RESPUESTA = 'Sin datos';
        OPEN C_NODATA;
    ELSEIF PARAM_CCMPN = 'AM' THEN
        OPEN C_ALMAPER;
    ELSEIF PARAM_CCMPN = 'LZ' THEN --DC@RNSLIB
            OPEN C_RNSLIB;
    ELSE
        SET RESPUESTA = 'Sin datos';
        OPEN C_NODATA;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_CONSULTA_LIBERACIONES_DETALLE', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.2.2   REQFE002    Relación datos de liberación (Cabecera)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_RELACION_DATOS_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_RELACION_DATOS_CABECERA(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_STPQRY CHAR(1),
    IN PARAM_CODQRY NUMERIC(10,0)
    --IN PARAM_NLBRC NUMERIC(10,0)
)
LANGUAGE SQL 
DYNAMIC RESULT SETS 1
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
    DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    DECLARE C_NODATA CURSOR FOR
        SELECT 'Sin datos' AS RESULT FROM SYSIBM.SYSDUMMY1;

    -- DC@ALMAPER
    DECLARE C_ALMAPER CURSOR FOR
        SELECT
            -- ZZWT13
            A.CCMPN, A.NOPRCN, A.NLBRC, A.NOPREM, A.FEMSLB, A.FATNLB, A.CTPOLB, A.IVLRLB, A.SSTCLB, A.SESTRG,
            -- ZZWM06
            B.NWRRNT, B.NCRTDP, B.NOPRCN, B.CTPOAL, B.CALMCM, B.CTOPRC, B.CCLNT, B.CFNNC, B.FEMSWR, B.FPRMVN,
            B.FVNCMX, B.CMNDA, B.CRGMN, B.SCNINP, B.SIMPR, B.ISLVFN,
            -- ZZWW13
            C.NPRLBR
        FROM
            DC@ALMAPER.ZZWT13 A
            LEFT OUTER JOIN DC@ALMAPER.ZZWM06 B ON A.NOPRCN = B.NOPRCN
            LEFT OUTER JOIN DC@ALMAPER.ZZWW13 C ON A.NLBRC = C.NLBRRL
        WHERE
        	(PARAM_STPQRY='C' AND A.CCMPN=PARAM_CCMPN AND A.CCLNT=PARAM_CODQRY AND B.CFNNC=PARAM_CODQRY AND A.SLBWEB='A' AND A.SSTCLB='E' AND A.SESTRG='A') OR
        	(PARAM_STPQRY='B' AND A.CCMPN=PARAM_CCMPN AND B.CFNNC=PARAM_CODQRY AND A.SLBWEB='A' AND A.SSTCLB='E' AND A.SESTRG='A') OR 
        	(PARAM_STPQRY='L' AND A.NLBRC=PARAM_CODQRY);

    -- DC@RNSLIB
    DECLARE C_RNSLIB CURSOR FOR
        SELECT
            -- ZZWT13
            A.CCMPN, A.NOPRCN, A.NLBRC, A.NOPREM, A.FEMSLB, A.FATNLB, A.CTPOLB, A.IVLRLB, A.SSTCLB, A.SESTRG,
            -- ZZWM06
            B.NWRRNT, B.NCRTDP, B.NOPRCN, B.CTPOAL, B.CALMCM, B.CTOPRC, B.CCLNT, B.CFNNC, B.FEMSWR, B.FPRMVN,
            B.FVNCMX, B.CMNDA, B.CRGMN, B.SCNINP, B.SIMPR, B.ISLVFN,
            -- ZZWW13
            C.NPRLBR
        FROM
            DC@ALMAPER.ZZWT13 A
            LEFT OUTER JOIN DC@RNSLIB.ZZWM06 B ON A.NOPRCN = B.NOPRCN
            LEFT OUTER JOIN DC@RNSLIB.ZZWW13 C ON A.NLBRC = C.NLBRRL
        WHERE
        	(PARAM_STPQRY='C' AND A.CCMPN=PARAM_CCMPN AND A.CCLNT=PARAM_CODQRY AND B.CFNNC=PARAM_CODQRY AND A.SLBWEB='A' AND A.SSTCLB='E' AND A.SESTRG='A') OR
        	(PARAM_STPQRY='B' AND A.CCMPN=PARAM_CCMPN AND B.CFNNC=PARAM_CODQRY AND A.SLBWEB='A' AND A.SSTCLB='E' AND A.SESTRG='A') OR 
        	(PARAM_STPQRY='L' AND A.NLBRC=PARAM_CODQRY);

    SET RESPUESTA = '';
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        --TRIM(B ' ' FROM IFNULL(PARAM_STPQRY, '')) = '' OR
        IFNULL(PARAM_CODQRY, 0) = 0 OR
        PARAM_STPQRY NOT IN ('C','B','L')
    THEN
        SET RESPUESTA = 'Sin datos';
        OPEN C_NODATA;
    ELSEIF PARAM_CCMPN = 'AM' THEN
        OPEN C_ALMAPER;
    ELSEIF PARAM_CCMPN = 'LZ' THEN
        OPEN C_RNSLIB;
    ELSE
        SET RESPUESTA = 'Sin datos';
        OPEN C_NODATA;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_STPQRY: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_CODQRY: ' || IFNULL(CAST(PARAM_CODQRY AS VARCHAR(30)), '(NULL)');
        --'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_CONSULTA_RELACION_DATOS_CABECERA', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.2.2   REQFE002    Relación datos de liberación (Detalle)
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_RELACION_DATOS_DETALLE
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_RELACION_DATOS_DETALLE(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_NOPRCN NUMERIC(10,0),
    IN PARAM_NLBRC NUMERIC(10,0)
)
LANGUAGE SQL 
DYNAMIC RESULT SETS 1
BEGIN
    DECLARE VAL INTEGER DEFAULT 0;
    DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    DECLARE C_NODATA CURSOR FOR
        SELECT 'Sin datos' AS RESULT FROM SYSIBM.SYSDUMMY1;

    -- DC@ALMAPER
    DECLARE C_ALMAPER CURSOR FOR
        SELECT
            CCMPN, NOPRCN, NLBRC, NITEM, NCRRLT, NORDSR, CDPRDC, QLBRCN, QLBRPS, IVLRLB, SSTLBD, SESTRG
        FROM
            DC@ALMAPER.ZZWT14
        WHERE
            NOPRCN = PARAM_NOPRCN AND NLBRC = PARAM_NLBRC;

    -- DC@RNSLIB
    DECLARE C_RNSLIB CURSOR FOR
        SELECT
            CCMPN, NOPRCN, NLBRC, NITEM, NCRRLT, NORDSR, CDPRDC, QLBRCN, QLBRPS, IVLRLB, SSTLBD, SESTRG
        FROM
            DC@RNSLIB.ZZWT14
        WHERE
            NOPRCN = PARAM_NOPRCN AND NLBRC = PARAM_NLBRC;

    SET RESPUESTA = '';
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_NOPRCN, 0) = 0 OR
        IFNULL(PARAM_NLBRC, 0) = 0
    THEN
        SET RESPUESTA = 'Sin datos';
        OPEN C_NODATA;
    ELSEIF PARAM_CCMPN = 'AM' THEN
        OPEN C_ALMAPER;
    ELSEIF PARAM_CCMPN = 'LZ' THEN
        OPEN C_RNSLIB;
    ELSE
        SET RESPUESTA = 'Sin datos';
        OPEN C_NODATA;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_NOPRCN: ' || IFNULL(CAST(PARAM_NOPRCN AS VARCHAR(30)), '(NULL)') || ' | ' ||
        'PARAM_NLBRC: ' || IFNULL(CAST(PARAM_NLBRC AS VARCHAR(30)), '(NULL)');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_CONSULTA_RELACION_DATOS_DETALLE', PARAMETROS, RESPUESTA);
END
GO


-- ----------------------------------------------------------------------------------------------------
--  4.2.3   REQFE003    Liberaciones generadas SGO
-- ----------------------------------------------------------------------------------------------------
DROP PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_LIBERACIONES_GENERADAS_SGO_CABECERA
GO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_LIB_CONSULTA_LIBERACIONES_GENERADAS_SGO_CABECERA(
    IN PARAM_CCMPN CHAR(2),
    IN PARAM_CCLNT NUMERIC(6,0)
)
LANGUAGE SQL 
DYNAMIC RESULT SETS 1
BEGIN
    DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);

    DECLARE C_NODATA CURSOR FOR
        SELECT 'Sin datos' AS RESULT FROM SYSIBM.SYSDUMMY1;

    -- DC@ALMAPER
    DECLARE C_ALMAPER CURSOR FOR
        SELECT
            -- ZZWT13
            A.CCMPN, A.NLBRC, A.NOPREM, A.FEMSLB, A.FATNLB, A.CTPOLB, A.IVLRLB, A.SSTCLB, A.SESTRG,
            -- ZZWM06
            B.NWRRNT, B.NCRTDP, B.CTPOAL, B.CALMCM, B.CTOPRC, B.CCLNT, B.CFNNC, B.FEMSWR, B.FPRMVN,
            B.FVNCMX, B.CMNDA, B.CRGMN, B.SCNINP, B.SIMPR, B.ISLVFN,
            -- ZZWW13
            C.NPRLBR
        FROM
            DC@ALMAPER.ZZWT13 A
            LEFT OUTER JOIN DC@ALMAPER.ZZWM06 B ON A.NOPRCN = B.NOPRCN
            LEFT OUTER JOIN DC@ALMAPER.ZZWW13 C ON A.NLBRC = C.NLBRRL
        WHERE
            A.CCLNT = PARAM_CCLNT AND
            A.SESTRG = 'A' AND
            A.SLBWEB='A' AND A.SSTCLB='E' AND A.SESTRG='A' AND
            A.CUSCRT NOT IN ('WEBALMA','WEBCASA');

    -- DC@RNSLIB
    DECLARE C_RNSLIB CURSOR FOR
        SELECT
            -- ZZWT13
            A.CCMPN, A.NLBRC, A.NOPREM, A.FEMSLB, A.FATNLB, A.CTPOLB, A.IVLRLB, A.SSTCLB, A.SESTRG,
            -- ZZWM06
            B.NWRRNT, B.NCRTDP, B.CTPOAL, B.CALMCM, B.CTOPRC, B.CCLNT, B.CFNNC, B.FEMSWR, B.FPRMVN,
            B.FVNCMX, B.CMNDA, B.CRGMN, B.SCNINP, B.SIMPR, B.ISLVFN,
            -- ZZWW13
            C.NPRLBR
        FROM
            DC@RNSLIB.ZZWT13 A
            LEFT OUTER JOIN DC@RNSLIB.ZZWM06 B ON A.NOPRCN = B.NOPRCN
            LEFT OUTER JOIN DC@RNSLIB.ZZWW13 C ON A.NLBRC = C.NLBRRL
        WHERE
            A.CCLNT = PARAM_CCLNT AND
            A.SESTRG = 'A' AND
            A.SLBWEB='A' AND A.SSTCLB='E' AND A.SESTRG='A' AND
            A.CUSCRT NOT IN ('WEBALMA','WEBCASA');

    SET RESPUESTA = '';
    IF
        TRIM(B ' ' FROM IFNULL(PARAM_CCMPN, '')) = '' OR
        IFNULL(PARAM_CCLNT, 0) = 0
    THEN
        SET RESPUESTA = 'Sin datos';
        OPEN C_NODATA;
    ELSEIF PARAM_CCMPN = 'AM' THEN
        OPEN C_ALMAPER;
    ELSEIF PARAM_CCMPN = 'LZ' THEN
        OPEN C_RNSLIB;
    ELSE
        SET RESPUESTA = 'Sin datos';
        OPEN C_NODATA;
    END IF;

    SET PARAMETROS =
        'PARAM_CCMPN: ' || IFNULL(PARAM_CCMPN, '(NULL)') || ' | ' ||
        'PARAM_CODQRY: ' || IFNULL(CAST(PARAM_CCLNT AS VARCHAR(30)), '(NULL)');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_LIB_CONSULTA_LIBERACIONES_GENERADAS_SGO_CABECERA', PARAMETROS, RESPUESTA);
END
GO
