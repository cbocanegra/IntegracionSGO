--	4.1.1	REQF001 - Creación Solicitud Warrant (CABECERA PRE-OPERACIÓN)
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CREACION_SOLICITUD_CABPREOP
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_CDVSN	CHAR (1),
	IN PARAM_CPLNDV	NUMERIC (3,0),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_CTOPRC	CHAR (1),
	IN PARAM_CTPOAL	CHAR (1),
	IN PARAM_CCLNT	NUMERIC (6, 0),
	IN PARAM_CFNNC	NUMERIC (4,0),
	IN PARAM_CSCRS	NUMERIC (4,0),
	IN PARAM_CALMCM	NUMERIC (6,0),
	IN PARAM_CMNDA	NUMERIC (3,0),
	IN PARAM_CRGMN	CHAR (1) ,
	IN PARAM_SCNINP	CHAR (1),
	IN PARAM_SIMPR	CHAR (1),
	IN PARAM_FCHCRT	NUMERIC(8,0),
	IN PARAM_HRACRT	NUMERIC (6,0),
	IN PARAM_USRCRT	CHAR (10),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CADNA	NUMERIC (6,0)  ,
	IN PARAM_NANDCL	NUMERIC (4,0)  ,
	IN PARAM_NPDDUA	NUMERIC (10,0)  ,
	IN PARAM_SSTCOP	CHAR (1),
	IN PARAM_SDBEND	CHAR (1),
	IN PARAM_CCLNT1	NUMERIC (6,0),	
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)
)
BEGIN
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000) DEFAULT '';
	DECLARE RESPUESTA VARCHAR(100) DEFAULT '';
	
	-- VALIDACIONES
	IF
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_CDVSN	,'')='' OR
		IFNULL(PARAM_CPLNDV,0)=0 OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_CTOPRC,'')='' OR
		IFNULL(PARAM_CTPOAL,'')='' OR
		IFNULL(PARAM_CCLNT	,0)=0 OR
		IFNULL(PARAM_CFNNC	,0)=0 OR
		IFNULL(PARAM_CSCRS	,0)=0 OR
		IFNULL(PARAM_CALMCM,0)=0 OR
		IFNULL(PARAM_CMNDA	,0)=0 OR
		IFNULL(PARAM_CRGMN	,'')='' OR
		IFNULL(PARAM_SCNINP,'')='' OR
		IFNULL(PARAM_SIMPR	,'')='' OR
		IFNULL(PARAM_FCHCRT,-1)=-1 OR
		IFNULL(PARAM_HRACRT,0)=0 OR
		IFNULL(PARAM_USRCRT,'')='' OR
		IFNULL(PARAM_SESTRG,'')=''
	THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;
	
	IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;
	
	IF PARAM_CDVSN NOT IN ('Q','L') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de división no válido,';
	END IF;
	
	IF PARAM_CTOPRC NOT IN ('W','F') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Tipo de operación no válido,';
	END IF;
	
	IF PARAM_CTPOAL NOT IN ('C','P') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Tipo de almacén no válido, ';
	END IF;
	
	IF PARAM_SCNINP NOT IN ('I','A') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag tipo de control insumo no válido, ';
	END IF;
	
	IF PARAM_SIMPR NOT IN ('A','W','C') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de impresión no válido,';
	END IF;
	
	IF LENGTH(CAST(PARAM_FCHCRT AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HRACRT<0 OR 
	   PARAM_HRACRT>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HRACRT AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HRACRT AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HRACRT AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;			
	
	
	IF PARAM_USRCRT NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario creador no válido,';
	END IF;
	
	IF (PARAM_USRCRT='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_USRCRT='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF PARAM_CRGMN NOT IN ('A','S') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Tipo de régimen no válido,';
	END IF;
	
	IF PARAM_CRGMN = 'A' AND IFNULL(PARAM_NANDCL,0) = 0 THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Año de aduana no válido, ';
	END IF;
	
	IF PARAM_CRGMN = 'S' AND IFNULL(PARAM_NANDCL,0) <> 0 THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Régimen simple no  debe tener año de DUA, ';
	END IF;
	
	IF PARAM_CRGMN='A' AND PARAM_CADNA=0 THEN
	 	SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de aduana no válido,';		 
	 END IF;
	 
	 IF PARAM_CRGMN='S' AND PARAM_CADNA<>0 THEN
	 	SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Régimen simple no  debe tener código de aduana,';	
	 END IF;
	
	IF PARAM_CRGMN='A' AND PARAM_NPDDUA=0  THEN
	 	SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de pedido de depósito no válido, ';		 
	END IF;
	 
	IF PARAM_CRGMN='S' AND PARAM_NPDDUA<>0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Régimen simple no  debe tener número de pedido de depósito, ';	
	END IF;
	
	IF PARAM_SDBEND NOT IN (' ','D') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag doble endoso no válido,';
	END IF;
	
	IF (PARAM_SDBEND = 'D' AND IFNULL(PARAM_CCLNT1,0) = 0) THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Cliente doble endoso no válido, ';
	END IF;
	
	IF PARAM_SDBEND <> 'D' AND IFNULL(PARAM_CCLNT1,0) <> 0 THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Cliente doble endoso errado , operación no es doble endoso, ';
	END IF;
	
--	IF PARAM_NTRMCR NOT IN ('WEBALMA', 'WEBCASA') THEN
--		SET VAL = VAL + 1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
--	END IF;
--	
--	IF (PARAM_NTRMCR='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_NTRMCR='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
--		SET VAL = VAL + 1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
--	END IF;
	
	IF PARAM_SSTCOP <>' ' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de situación de operación no válida,';
	END IF;
	
	IF PARAM_SESTRG<>'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';	
	END IF;
	
	IF VAL = 0 THEN
		IF PARAM_CCMPN = 'AM' THEN
		
			IF NOT EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR = PARAM_NPROPR) THEN
			
				INSERT INTO DC@ALMAPER.ZZWW10 (
					NPROPR, CCMPN, CDVSN, CPLNDV, CCLNT, CTOPRC,
					CTPOAL, CALMCM, CFNNC, CSCRS, CRGMN, CADNA,
					NANDCL, NPDDUA, CMNDA, SCNINP, SIMPR, SSTCOP,
					SESTRG, SDBEND, CCLNT1, FCHCRT, HRACRT, USRCRT,
					NTRMCR, FULTAC, HULTAC, CULUSA, NTRMNL
				)
				VALUES (
					PARAM_NPROPR, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, PARAM_CCLNT, PARAM_CTOPRC,
					PARAM_CTPOAL, PARAM_CALMCM, PARAM_CFNNC, PARAM_CSCRS, PARAM_CRGMN, PARAM_CADNA,
					PARAM_NANDCL, PARAM_NPDDUA, PARAM_CMNDA, PARAM_SCNINP, PARAM_SIMPR, PARAM_SSTCOP,
					PARAM_SESTRG, PARAM_SDBEND, PARAM_CCLNT1, PARAM_FCHCRT, PARAM_HRACRT, PARAM_USRCRT,
					PARAM_USRCRT, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_USRCRT, PARAM_USRCRT
				);
				
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			
			ELSE
			
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro ya existe';
			
			END IF;
		
			
		
		ELSEIF PARAM_CCMPN = 'LZ' THEN
		
			IF NOT EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR = PARAM_NPROPR) THEN
			
				INSERT INTO DC@RNSLIB.ZZWW10 (
					NPROPR, CCMPN, CDVSN, CPLNDV, CCLNT, CTOPRC,
					CTPOAL, CALMCM, CFNNC, CSCRS, CRGMN, CADNA,
					NANDCL, NPDDUA, CMNDA, SCNINP, SIMPR, SSTCOP,
					SESTRG, SDBEND, CCLNT1, FCHCRT, HRACRT, USRCRT,
					NTRMCR, FULTAC, HULTAC, CULUSA, NTRMNL
				)
				VALUES (
					PARAM_NPROPR, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, PARAM_CCLNT, PARAM_CTOPRC,
					PARAM_CTPOAL, PARAM_CALMCM, PARAM_CFNNC, PARAM_CSCRS, PARAM_CRGMN, PARAM_CADNA,
					PARAM_NANDCL, PARAM_NPDDUA, PARAM_CMNDA, PARAM_SCNINP, PARAM_SIMPR, PARAM_SSTCOP,
					PARAM_SESTRG, PARAM_SDBEND, PARAM_CCLNT1, PARAM_FCHCRT, PARAM_HRACRT, PARAM_USRCRT,
					PARAM_USRCRT, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_USRCRT, PARAM_USRCRT
				);
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';
			
			
			ELSE
			
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro ya existe';
			
			END IF;
		
		ELSE
		
			SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'NO_SCHEMA';
		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'ERROR EN VALIDACIONES,' || PARAM_PROCDESC;
	END IF;
	
	SET PARAMETROS =
		'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
		'PARAM_CDVSN : ' CONCAT PARAM_CDVSN  CONCAT ' | ' CONCAT
		'PARAM_CPLNDV : ' CONCAT CAST(PARAM_CPLNDV  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_CTOPRC : ' CONCAT PARAM_CTOPRC  CONCAT ' | ' CONCAT
		'PARAM_CTPOAL : ' CONCAT PARAM_CTPOAL  CONCAT ' | ' CONCAT
		'PARAM_CCLNT : ' CONCAT CAST(PARAM_CCLNT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_CFNNC : ' CONCAT CAST(PARAM_CFNNC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_CSCRS : ' CONCAT CAST(PARAM_CSCRS  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_CALMCM : ' CONCAT CAST(PARAM_CALMCM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_CMNDA : ' CONCAT CAST(PARAM_CMNDA  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_CRGMN : ' CONCAT PARAM_CRGMN  CONCAT ' | ' CONCAT
		'PARAM_SCNINP : ' CONCAT PARAM_SCNINP  CONCAT ' | ' CONCAT
		'PARAM_SIMPR : ' CONCAT PARAM_SIMPR  CONCAT ' | ' CONCAT
		'PARAM_FCHCRT : ' CONCAT CAST(PARAM_FCHCRT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_HRACRT : ' CONCAT CAST(PARAM_HRACRT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_USRCRT : ' CONCAT PARAM_USRCRT  CONCAT ' | ' CONCAT
		'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
		'PARAM_CADNA : ' CONCAT CAST(PARAM_CADNA  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_NANDCL : ' CONCAT CAST(PARAM_NANDCL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_NPDDUA : ' CONCAT CAST(PARAM_NPDDUA  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
		'PARAM_SSTCOP : ' CONCAT PARAM_SSTCOP  CONCAT ' | ' CONCAT
		'PARAM_SDBEND : ' CONCAT PARAM_SDBEND  CONCAT ' | ' CONCAT
		'PARAM_CCLNT1 : ' CONCAT CAST(PARAM_CCLNT1  AS VARCHAR(2000))
		;

	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(100)),'ERROR');
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('SP_INTSGO_WAR_CREACION_SOLICITUD_CABPREOP', PARAMETROS, RESPUESTA);
END
GO
--DETALLE PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CREACION_SOLICITUD_DETPREOP
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_CDVSN	CHAR (1),
	IN PARAM_CPLNDV	NUMERIC (3,0),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_NITEM	NUMERIC (5,0),	
	IN PARAM_CRGMN CHAR(1),		
	IN PARAM_CDPRDC	CHAR (10),
	IN PARAM_SINSPR	CHAR (1),
	IN PARAM_SCNINP	CHAR (1),
	IN PARAM_STPCNS	CHAR (1), 
	IN PARAM_CFMLPR	CHAR (2) ,
	IN PARAM_FCHCRT	NUMERIC(8,0),
	IN PARAM_HRACRT	NUMERIC (6,0),
	IN PARAM_CUSCRT	CHAR (10),
	IN PARAM_NTRMCR	CHAR  (10),
	IN PARAM_SESTRG	CHAR (1),
	-------------------------------------	
	IN PARAM_NSRIE1	NUMERIC (6,0) ,
	IN PARAM_NDCMSS	NUMERIC (10,0) ,
	IN PARAM_IVUNIT NUMERIC ( 15, 5 ),
	IN PARAM_IVTOIT NUMERIC ( 15,5 ),	
	IN PARAM_CANTIDAD NUMERIC (15,5) ,
	IN PARAM_UNIDAD	CHAR (3), 	
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN

	DECLARE	VAL INTEGER DEFAULT 0;
	DECLARE PARAMETROS VARCHAR(2000);
	DECLARE RESPUESTA VARCHAR(100);
	
	-- VALIDACIONES
	IF
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_CDVSN,'')='' OR
		IFNULL(PARAM_CPLNDV,0)=0 OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_NITEM,0)=0 OR
		IFNULL(PARAM_CRGMN,'')='' OR
		IFNULL(PARAM_CDPRDC,'')='' OR
		IFNULL(PARAM_SINSPR,'')='' OR
		IFNULL(PARAM_SCNINP,'')='' OR
		IFNULL(PARAM_CFMLPR,'')='' OR
		IFNULL(PARAM_FCHCRT,0)=0 OR
		IFNULL(PARAM_HRACRT,-1)=-1 OR
		IFNULL(PARAM_CUSCRT,'')='' OR
		IFNULL(PARAM_NTRMCR,'')='' OR
		IFNULL(PARAM_SESTRG,'')=''
	THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;
	
	IF PARAM_CCMPN NOT IN ('AM','LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';
	END IF;
	
	IF PARAM_CDVSN NOT IN ('Q','L') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de división no válido,';
	END IF;
	
	IF PARAM_SCNINP NOT IN ('I','A') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag tipo de control insumo no válido, ';
	END IF;
	
	IF PARAM_SCNINP = 'I' AND PARAM_SINSPR <> 'P' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag insumo/producto debe ser producto,';
	ELSEIF PARAM_SCNINP = 'A' AND PARAM_SINSPR NOT IN ('I','P') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag debe de ser insumo o producto,';
	END IF;
	
	IF PARAM_CFMLPR NOT BETWEEN '00' AND '99' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de familia no válido';
	END IF;
	
	IF PARAM_CRGMN NOT IN ('A','S') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Tipo de régimen no válido';
	END IF;
	
	IF LENGTH(CAST(PARAM_FCHCRT AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HRACRT<0 OR 
	   PARAM_HRACRT>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HRACRT AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HRACRT AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HRACRT AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;			
	
	IF PARAM_CUSCRT NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no válido,';
	END IF;
	
	IF (PARAM_CUSCRT='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CUSCRT='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF PARAM_SESTRG <> 'A' THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado de operación no válido,';
	END IF;
	
	IF PARAM_STPCNS NOT IN ('P','C') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag tipo control serie no válido,';		
	END IF;
	
--	IF (PARAM_CRGMN='A' AND PARAM_STPCNS <>' ') OR
--	   (PARAM_CRGMN='S' AND PARAM_STPCNS NOT IN ('P','C'))
--	THEN
--		SET VAL = VAL + 1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag tipo control serie no válido,';	
--	END IF;
	
	IF (PARAM_CRGMN ='A' AND PARAM_NDCMSS=0) OR (PARAM_CRGMN ='S' AND PARAM_NDCMSS<>0) THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número documento sustento no válido,';		
	END IF;
	
	IF (PARAM_CRGMN ='A' AND PARAM_NSRIE1=0) OR (PARAM_CRGMN ='S' AND PARAM_NSRIE1<>0) THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de serie no válido,';		
	END IF;

	IF (PARAM_CRGMN ='A' AND PARAM_IVUNIT<>0) OR (PARAM_CRGMN ='S' AND PARAM_IVUNIT=0) THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Importe unitario no válido,';		
	END IF;
	
	IF (PARAM_CRGMN ='A' AND PARAM_IVTOIT<>0) OR (PARAM_CRGMN ='S' AND PARAM_IVTOIT=0) THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Importe valor total no válido,';		
	END IF;
	
--	IF PARAM_USRCRT NOT IN ('WEBALMA','WEBCASA') THEN
--		SET VAL = VAL + 1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de creación no válido,';
--	END IF;
--	
--	IF PARAM_NTRMCR NOT IN ('WEBALMA', 'WEBCASA') THEN
--		SET VAL = VAL + 1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de terminal no válido,';
--	END IF;
	
	IF VAL = 0 THEN
		
		IF PARAM_CCMPN = 'AM' THEN
		
			IF NOT EXISTS (SELECT * FROM DC@ALMAPER.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM ) THEN			
				INSERT INTO DC@ALMAPER.ZZWW28 (
					NPROPR, CCMPN, CDVSN, CPLNDV, SINSPR, 
					NITEM, CDPRDC, CFMLPR, NDCMSS, NSRIE1, IVUNIT, 
					IVTOIT, STPCNS, 
					CUNDCN, 
					QCNTIT, 
					CUNDPS,
					QPSOIT, 
					SESTRG, FCHCRT, HRACRT, CUSCRT,NTRMCR, 
					FULTAC, HULTAC, CULUSA, NTRMNL
				)
				VALUES (
					PARAM_NPROPR, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, PARAM_SINSPR,
					PARAM_NITEM, PARAM_CDPRDC, PARAM_CFMLPR, PARAM_NDCMSS, PARAM_NSRIE1, PARAM_IVUNIT,
					PARAM_IVTOIT, PARAM_STPCNS, 
					CASE PARAM_STPCNS WHEN 'C' THEN PARAM_UNIDAD WHEN 'P' THEN ' ' ELSE ' ' END,
					CASE PARAM_STPCNS WHEN 'C' THEN PARAM_CANTIDAD WHEN 'P' THEN 0 ELSE 0 END,
					CASE PARAM_STPCNS WHEN 'C' THEN ' ' WHEN 'P' THEN PARAM_UNIDAD ELSE ' ' END,
					CASE PARAM_STPCNS WHEN 'C' THEN 0 WHEN 'P' THEN PARAM_CANTIDAD ELSE 0 END,
					PARAM_SESTRG, PARAM_FCHCRT, PARAM_HRACRT, PARAM_CUSCRT, PARAM_NTRMCR,
					DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CUSCRT, PARAM_NTRMCR
				);
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';			
			
			ELSE
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'Registro ya existe';			
			END IF;
		

			
		ELSEIF PARAM_CCMPN = 'LZ' THEN
		
			IF NOT EXISTS (SELECT * FROM DC@RNSLIB.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM ) THEN			
				INSERT INTO DC@RNSLIB.ZZWW28 (
					NPROPR, CCMPN, CDVSN, CPLNDV, SINSPR, 
					NITEM, CDPRDC, CFMLPR, NDCMSS, NSRIE1, IVUNIT, 
					IVTOIT, STPCNS, 
					CUNDCN, 
					QCNTIT, 
					CUNDPS,
					QPSOIT, 
					SESTRG, FCHCRT, HRACRT, CUSCRT,NTRMCR, 
					FULTAC, HULTAC, CULUSA, NTRMNL
				)
				VALUES (
					PARAM_NPROPR, PARAM_CCMPN, PARAM_CDVSN, PARAM_CPLNDV, PARAM_SINSPR,
					PARAM_NITEM, PARAM_CDPRDC, PARAM_CFMLPR, PARAM_NDCMSS, PARAM_NSRIE1, PARAM_IVUNIT,
					PARAM_IVTOIT, PARAM_STPCNS, 
					CASE PARAM_STPCNS WHEN 'C' THEN PARAM_UNIDAD WHEN 'P' THEN ' ' END,
					CASE PARAM_STPCNS WHEN 'C' THEN PARAM_CANTIDAD WHEN 'P' THEN 0 END,
					CASE PARAM_STPCNS WHEN 'C' THEN ' ' WHEN 'P' THEN PARAM_UNIDAD END,
					CASE PARAM_STPCNS WHEN 'C' THEN 0 WHEN 'P' THEN PARAM_CANTIDAD END,
					PARAM_SESTRG, PARAM_FCHCRT, PARAM_HRACRT, PARAM_CUSCRT, PARAM_NTRMCR,
					DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CUSCRT, PARAM_NTRMCR
				);
				SET PARAM_PROCSTATUS = 0;
				SET PARAM_PROCDESC = 'Registro insertado';			
			
			ELSE
				SET PARAM_PROCSTATUS = 1;
				SET PARAM_PROCDESC = 'Registro ya existe';			
			END IF;
		
		ELSE
		
			SET PARAM_PROCSTATUS = 1;
			SET PARAM_PROCDESC = 'Error en el esquema';
			
		END IF;
		
	ELSE
		SET PARAM_PROCSTATUS = 1;
		SET PARAM_PROCDESC = 'Error en las validaciones,' || PARAM_PROCDESC;
	END IF;
	
	SET PARAMETROS =
			'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
			'PARAM_CDVSN : ' CONCAT PARAM_CDVSN  CONCAT ' | ' CONCAT
			'PARAM_CPLNDV : ' CONCAT CAST(PARAM_CPLNDV  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_CDPRDC : ' CONCAT PARAM_CDPRDC  CONCAT ' | ' CONCAT
			'PARAM_SINSPR : ' CONCAT PARAM_SINSPR  CONCAT ' | ' CONCAT
			'PARAM_SCNINP : ' CONCAT PARAM_SCNINP  CONCAT ' | ' CONCAT
			'PARAM_CFMLPR : ' CONCAT PARAM_CFMLPR  CONCAT ' | ' CONCAT
			'PARAM_FCHCRT : ' CONCAT CAST(PARAM_FCHCRT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_HRACRT : ' CONCAT CAST(PARAM_HRACRT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_CUSCRT : ' CONCAT PARAM_CUSCRT  CONCAT ' | ' CONCAT
			'PARAM_NTRMCR : ' CONCAT PARAM_NTRMCR  CONCAT ' | ' CONCAT
			'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT			
			'PARAM_NSRIE1 : ' CONCAT CAST(PARAM_NSRIE1  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_NDCMSS : ' CONCAT CAST(PARAM_NDCMSS  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_IVUNIT : ' CONCAT CAST(PARAM_IVUNIT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_IVTOIT : ' CONCAT CAST(PARAM_IVTOIT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_STPCNS : ' CONCAT PARAM_STPCNS  CONCAT ' | ' CONCAT
			'PARAM_CANTIDAD : ' CONCAT CAST(PARAM_CANTIDAD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
			'PARAM_UNIDAD : ' CONCAT PARAM_UNIDAD
		;
	SET RESPUESTA = IFNULL(CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT ' | ' CONCAT IFNULL(PARAM_PROCDESC,'SIN MENSAJE'),'ERROR');

	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_CREACION_SOLICITUD_DETPREOP', PARAMETROS, RESPUESTA);

END
GO
--DESCRIPCION DETALLE PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CREACION_SOLICITUD_DESC_DETOPE
(
	IN PARAM_CCMPN CHAR (2),
	IN PARAM_NPROPR NUMERIC (10, 0),
	IN PARAM_NITEM NUMERIC (5,0),
	IN PARAM_NCRRDT NUMERIC (4,0),
	IN PARAM_TDSCI2 CHAR (240),
	IN PARAM_FCHCRT NUMERIC(8,0),
	IN PARAM_HRACRT NUMERIC (6,0),
	IN PARAM_USRCRT CHAR (10),
	IN PARAM_SESTRG CHAR (1),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF
		IFNULL(PARAM_CCMPN ,'')='' OR
		IFNULL(PARAM_NPROPR ,0)=0 OR
		IFNULL(PARAM_NITEM ,0)=0 OR
		IFNULL(PARAM_NCRRDT ,0)=0 OR
		IFNULL(PARAM_TDSCI2 ,'')='' OR
		IFNULL(PARAM_FCHCRT ,0)=0 OR
		IFNULL(PARAM_HRACRT ,-1)=-1 OR
		IFNULL(PARAM_USRCRT ,'')='' OR
		IFNULL(PARAM_SESTRG ,'')=''
	THEN

		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado de operación no válido, ';	
	END IF;
	
	IF LENGTH(CAST(PARAM_FCHCRT AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FCHCRT AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HRACRT<0 OR 
	   PARAM_HRACRT>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HRACRT AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HRACRT AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HRACRT AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;	
	
	IF PARAM_USRCRT NOT IN ('WEBALMA','WEBCASA') THEN
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de creación no válido,';	
	END IF;

	IF (PARAM_USRCRT='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_USRCRT='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF NOT EXISTS (SELECT * FROM DC@ALMAPER.ZZWW24 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCRRDT=PARAM_NCRRDT) THEN
				INSERT INTO DC@ALMAPER.ZZWW24(
					NPROPR, NITEM, NCRRDT, TDSCI2, SESTRG, FCHCRT, HRACRT, USRCRT,
					FULTAC, HULTAC, CULUSA, NTRMNL	
				)
				VALUES (
					PARAM_NPROPR, PARAM_NITEM, PARAM_NCRRDT, PARAM_TDSCI2, PARAM_SESTRG, PARAM_FCHCRT, PARAM_HRACRT, PARAM_USRCRT,
					DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_USRCRT, PARAM_USRCRT
				);
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF NOT EXISTS (SELECT * FROM DC@RNSLIB.ZZWW24 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCRRDT=PARAM_NCRRDT) THEN
				INSERT INTO DC@RNSLIB.ZZWW24(
					NPROPR, NITEM, NCRRDT, TDSCI2, SESTRG, FCHCRT, HRACRT, USRCRT,
					FULTAC, HULTAC, CULUSA, NTRMNL	
				)
				VALUES (
					PARAM_NPROPR, PARAM_NITEM, PARAM_NCRRDT, PARAM_TDSCI2, PARAM_SESTRG, PARAM_FCHCRT, PARAM_HRACRT, PARAM_USRCRT,
					DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_USRCRT, PARAM_USRCRT
				);
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			END IF;
		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;


	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NCRRDT : ' CONCAT CAST(PARAM_NCRRDT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_TDSCI2 : ' CONCAT PARAM_TDSCI2  CONCAT ' | ' CONCAT
					'PARAM_FCHCRT : ' CONCAT CAST(PARAM_FCHCRT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_HRACRT : ' CONCAT CAST(PARAM_HRACRT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_USRCRT : ' CONCAT PARAM_USRCRT  CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_CREACION_SOLICITUD_DESC_DETOPE',
	pParametros,
	pRespuesta
	);	
	

END
GO
--4.1.2	REQF002 – Modificación de Solicitud Warrant 
--CABECERA PRE-OPERACIÓN  
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_MODIFICACION_SOLICITUD_CABPREOP
(
	IN PARAM_CCMPN	CHAR (2) ,
	IN PARAM_NPROPR	NUMERIC (10, 0) ,
	IN PARAM_CTPOAL	CHAR (1) ,
	IN PARAM_CALMCM	NUMERIC (6,0) ,
	IN PARAM_CMNDA	NUMERIC (3,0) ,
	IN PARAM_CFNNC	NUMERIC (4,0) ,
	IN PARAM_CSCRS	NUMERIC (4,0) ,
	IN PARAM_CRGMN	CHAR (1) ,
	IN PARAM_SIMPR	CHAR (1) ,
	IN PARAM_CULUSA	CHAR (10) ,
	----------------------------------
	IN PARAM_CADNA	NUMERIC (6,0)   ,
	IN PARAM_NANDCL	NUMERIC (4,0)   ,
	IN PARAM_NPDDUA	NUMERIC (10,0)   ,	
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF 
		IFNULL(PARAM_CCMPN	, '')='' OR 
		IFNULL(PARAM_NPROPR, 0)=0 OR 
		IFNULL(PARAM_CTPOAL, '')='' OR 
		IFNULL(PARAM_CALMCM, 0)=0 OR 
		IFNULL(PARAM_CMNDA	, 0)=0 OR 
		IFNULL(PARAM_CFNNC	, 0)=0 OR 
		IFNULL(PARAM_CSCRS	, 0)=0 OR 
		IFNULL(PARAM_CRGMN	, '')='' OR 
		IFNULL(PARAM_SIMPR	, '')='' OR 
		IFNULL(PARAM_CULUSA, '')=''	
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';		
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_CTPOAL NOT IN ('C','P') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Tipo de almacén no válido,';	
	END IF;

	IF PARAM_SIMPR NOT IN ('A','W','C') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de impresión no válido,';	
	END IF;

	IF PARAM_CRGMN NOT IN ('A','S') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Tipo de régimen no válido,';	
	END IF;

	IF PARAM_CRGMN = 'A' AND IFNULL(PARAM_NANDCL,0) = 0 THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Año de aduana no válido, ';
	END IF;
	
	IF PARAM_CRGMN = 'S' AND IFNULL(PARAM_NANDCL,0) <> 0 THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Régimen simple no  debe tener año de DUA, ';
	END IF;

	IF PARAM_CRGMN='A' AND PARAM_CADNA=0 THEN
	 	SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de aduana no válido,';		 
	 END IF;
	 
	 IF PARAM_CRGMN='S' AND PARAM_CADNA<>0 THEN
	 	SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Régimen simple no  debe tener código de aduana,';	
	 END IF;

	IF PARAM_CRGMN='A' AND PARAM_NPDDUA=0  THEN
	 	SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de pedido de depósito no válido, ';		 
	END IF;
	 
	IF PARAM_CRGMN='S' AND PARAM_NPDDUA<>0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Régimen simple no  debe tener número de pedido de depósito, ';	
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;

	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@ALMAPER.ZZWW10
				SET CALMCM = PARAM_CALMCM ,
					CFNNC = PARAM_CFNNC ,
					CSCRS = PARAM_CSCRS ,
					CRGMN = PARAM_CRGMN ,
					CADNA = PARAM_CADNA ,
					NANDCL = PARAM_NANDCL ,
					NPDDUA = PARAM_NPDDUA ,
					CMNDA = PARAM_CMNDA ,
					SIMPR = PARAM_SIMPR ,
					FULTAC = DC@RNSLIB.FECHA() ,
					HULTAC = DC@RNSLIB.HORA() ,
					CULUSA = PARAM_CULUSA ,
					NTRMNL = PARAM_CULUSA
				WHERE NPROPR =PARAM_NPROPR;		
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@RNSLIB.ZZWW10
				SET CALMCM = PARAM_CALMCM ,
					CFNNC = PARAM_CFNNC ,
					CSCRS = PARAM_CSCRS ,
					CRGMN = PARAM_CRGMN ,
					CADNA = PARAM_CADNA ,
					NANDCL = PARAM_NANDCL ,
					NPDDUA = PARAM_NPDDUA ,
					CMNDA = PARAM_CMNDA ,
					SIMPR = PARAM_SIMPR ,
					FULTAC = DC@RNSLIB.FECHA() ,
					HULTAC = DC@RNSLIB.HORA() ,
					CULUSA = PARAM_CULUSA ,
					NTRMNL = PARAM_CULUSA
				WHERE NPROPR =PARAM_NPROPR;			
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CTPOAL : ' CONCAT PARAM_CTPOAL  CONCAT ' | ' CONCAT
					'PARAM_CALMCM : ' CONCAT CAST(PARAM_CALMCM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CMNDA : ' CONCAT CAST(PARAM_CMNDA  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CFNNC : ' CONCAT CAST(PARAM_CFNNC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CSCRS : ' CONCAT CAST(PARAM_CSCRS  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CRGMN : ' CONCAT PARAM_CRGMN  CONCAT ' | ' CONCAT
					'PARAM_SIMPR : ' CONCAT PARAM_SIMPR  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA  CONCAT ' | ' CONCAT
					'PARAM_CADNA : ' CONCAT CAST(PARAM_CADNA  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NANDCL : ' CONCAT CAST(PARAM_NANDCL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NPDDUA : ' CONCAT CAST(PARAM_NPDDUA  AS VARCHAR(2000))
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_MODIFICACION_SOLICITUD_CABPREOP',
	pParametros,
	pRespuesta
	);	


END
GO
--DETALLE PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_MODIFICACION_SOLICITUD_DETPREOP
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_CDVSN	CHAR (1),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_NITEM	NUMERIC (5,0),
	IN PARAM_CDPRDC	CHAR (10),
	IN PARAM_CRGMN	CHAR (1) ,
	IN PARAM_SINSPR	CHAR (1),
	IN PARAM_STPCNS	CHAR (1) ,
	IN PARAM_SCNINP CHAR(1),
	IN PARAM_CFMLPR	CHAR (2) ,
	IN PARAM_CULUSA	CHAR (10),
	----------------------------------
	IN PARAM_NSRIE1	NUMERIC (6,0)  ,
	IN PARAM_NDCMSS	NUMERIC (10,0) ,
	IN PARAM_IVUNIT	NUMERIC ( 15, 5 ),
	IN PARAM_IVTOIT	NUMERIC ( 15,5 ),	
	IN PARAM_CANTIDAD	NUMERIC (15,5) ,
	IN PARAM_UNIDAD	CHAR (3) ,	
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF 
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_CDVSN	,'')='' OR
		IFNULL(PARAM_NPROPR	,0)=0 OR
		IFNULL(PARAM_NITEM	,0)=0 OR
		IFNULL(PARAM_CDPRDC	,'')='' OR
		IFNULL(PARAM_CRGMN	,'')='' OR
		IFNULL(PARAM_SINSPR	,'')='' OR
		IFNULL(PARAM_CFMLPR	,'')='' OR
		IFNULL(PARAM_CULUSA	,'')=''		
	THEN	
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_CDVSN NOT IN ('Q','L') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de división no válido,';	
	END IF;

	IF PARAM_SCNINP NOT IN ('I','A') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag de control insumo no válido,';
	END IF;

	IF (PARAM_SCNINP='I' AND PARAM_SINSPR<>'P') OR (PARAM_SCNINP='A' AND PARAM_SINSPR NOT IN ('I','P')) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag insumo-producto no válido,';	
	END IF;

	IF PARAM_CFMLPR NOT BETWEEN '00' AND '99' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Codigo familia-producto no válido,';	
	END IF;

	IF PARAM_CRGMN NOT IN ('A','S') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Tipo de régimen no válido,';	
	END IF;
	
	IF PARAM_STPCNS NOT IN ('P','C') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag tipo control - serie no válido,';	
	END IF;
	
--	IF (PARAM_CRGMN='A' AND PARAM_STPCNS<>'') OR (PARAM_CRGMN='S' AND PARAM_STPCNS NOT IN ('P','C')) THEN
--		SET VAL=VAL+1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag tipo control - serie no válido,';		
--	END IF;
	

	IF (PARAM_CRGMN='A' AND PARAM_NDCMSS=0) OR (PARAM_CRGMN='S' AND PARAM_NDCMSS<>0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número documento sustento no válido,';		
	END IF;
	
	IF (PARAM_CRGMN='A' AND PARAM_NSRIE1=0) OR (PARAM_CRGMN='S' AND PARAM_NSRIE1<>0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de serie no válido,';		
	END IF;

	IF (PARAM_CRGMN='A' AND PARAM_IVUNIT<>0) OR (PARAM_CRGMN='S' AND 3798=0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Importe unitario del ítem no válido,';		
	END IF;
	
	IF (PARAM_CRGMN='A' AND PARAM_IVTOIT<>0) OR (PARAM_CRGMN='S' AND PARAM_IVTOIT=0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Importe valor total del ítem no válido,';		
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;


	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM =PARAM_NITEM  ) THEN
			
				UPDATE DC@ALMAPER.ZZWW28
				SET
					SINSPR=PARAM_SINSPR,
					CDPRDC=PARAM_CDPRDC,
					CFMLPR=PARAM_CFMLPR,
					NDCMSS=PARAM_NDCMSS,
					NSRIE1=PARAM_NSRIE1,
					IVUNIT=PARAM_IVUNIT,
					IVTOIT=PARAM_IVTOIT,
					STPCNS=PARAM_STPCNS,
					CUNDCN=CASE PARAM_STPCNS WHEN 'C' THEN PARAM_UNIDAD WHEN 'P' THEN ' ' ELSE ' ' END,
					QCNTIT=CASE PARAM_STPCNS WHEN 'C' THEN PARAM_CANTIDAD  WHEN 'P' THEN 0 ELSE 0 END,
					CUNDPS=CASE PARAM_STPCNS WHEN 'C' THEN ' ' WHEN 'P' THEN PARAM_UNIDAD ELSE ' ' END,
					QPSOIT=CASE PARAM_STPCNS WHEN 'C' THEN 0  WHEN 'P' THEN PARAM_CANTIDAD ELSE 0 END,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA		
				WHERE NPROPR=PARAM_NPROPR AND NITEM =PARAM_NITEM;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM =PARAM_NITEM  ) THEN
			
				UPDATE DC@RNSLIB.ZZWW28
				SET
					SINSPR=PARAM_SINSPR,
					CDPRDC=PARAM_CDPRDC,
					CFMLPR=PARAM_CFMLPR,
					NDCMSS=PARAM_NDCMSS,
					NSRIE1=PARAM_NSRIE1,
					IVUNIT=PARAM_IVUNIT,
					IVTOIT=PARAM_IVTOIT,
					STPCNS=PARAM_STPCNS,
					CUNDCN=CASE PARAM_STPCNS WHEN 'C' THEN PARAM_UNIDAD WHEN 'P' THEN ' ' ELSE ' ' END,
					QCNTIT=CASE PARAM_STPCNS WHEN 'C' THEN PARAM_CANTIDAD  WHEN 'P' THEN 0 ELSE 0 END,
					CUNDPS=CASE PARAM_STPCNS WHEN 'C' THEN ' ' WHEN 'P' THEN PARAM_UNIDAD ELSE ' ' END,
					QPSOIT=CASE PARAM_STPCNS WHEN 'C' THEN 0  WHEN 'P' THEN PARAM_CANTIDAD ELSE 0 END,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA		
				WHERE NPROPR=PARAM_NPROPR AND NITEM =PARAM_NITEM;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_CDVSN : ' CONCAT PARAM_CDVSN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CDPRDC : ' CONCAT PARAM_CDPRDC  CONCAT ' | ' CONCAT
					'PARAM_CRGMN : ' CONCAT PARAM_CRGMN  CONCAT ' | ' CONCAT
					'PARAM_SINSPR : ' CONCAT PARAM_SINSPR  CONCAT ' | ' CONCAT
					'PARAM_CFMLPR : ' CONCAT PARAM_CFMLPR  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA  CONCAT ' | ' CONCAT					
					'PARAM_NSRIE1 : ' CONCAT CAST(PARAM_NSRIE1  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NDCMSS : ' CONCAT CAST(PARAM_NDCMSS  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_IVUNIT : ' CONCAT CAST(PARAM_IVUNIT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_IVTOIT : ' CONCAT CAST(PARAM_IVTOIT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_STPCNS : ' CONCAT PARAM_STPCNS  CONCAT ' | ' CONCAT
					'PARAM_CANTIDAD : ' CONCAT CAST(PARAM_CANTIDAD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_UNIDAD : ' CONCAT PARAM_UNIDAD
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_MODIFICACION_SOLICITUD_DETPREOP',
	pParametros,
	pRespuesta
	);	
	

END
GO
--DESCRIPCION DETALLE PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_MODIFICACION_SOLICITUD_DESC_DETOPE
(
	IN PARAM_CCMPN CHAR (2),
	IN PARAM_NPROPR NUMERIC (10, 0),
	IN PARAM_NITEM NUMERIC (5,0),
	IN PARAM_NCRRDT NUMERIC (4,0),
	IN PARAM_TDSCI2 CHAR (240),	
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF
		IFNULL(PARAM_CCMPN ,'')='' OR
		IFNULL(PARAM_NPROPR ,0)=0 OR
		IFNULL(PARAM_NITEM ,0)=0 OR
		IFNULL(PARAM_NCRRDT ,0)=0 OR
		IFNULL(PARAM_TDSCI2 ,'')='' OR
		IFNULL(PARAM_CULUSA ,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;

	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW24 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCRRDT =PARAM_NCRRDT) THEN
			
				UPDATE DC@ALMAPER.ZZWW24
				SET 
					TDSCI2=PARAM_TDSCI2,
					FULTAC=DC@RNSLIB.FECHA(),  
					HULTAC=DC@RNSLIB.HORA(),  
					CULUSA=PARAM_CULUSA, 
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCRRDT=PARAM_NCRRDT;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW24 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCRRDT =PARAM_NCRRDT) THEN
			
				UPDATE DC@RNSLIB.ZZWW24
				SET 
					TDSCI2=PARAM_TDSCI2,
					FULTAC=DC@RNSLIB.FECHA(),  
					HULTAC=DC@RNSLIB.HORA(),  
					CULUSA=PARAM_CULUSA, 
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCRRDT =PARAM_NCRRDT;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NCRRDT : ' CONCAT CAST(PARAM_NCRRDT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_TDSCI2 : ' CONCAT PARAM_TDSCI2  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_MODIFICACION_SOLICITUD_DESC_DETOPE',
	pParametros,
	pRespuesta
	);	

END
GO

--4.1.3	REQF003 – Anulación de Solicitud Warrant
--CABECERA PRE-OPERACIÓN 
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ANULACION_SOLICITUD_WARRANTCAB
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_SSTCOP CHAR(1),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_SSTCOP,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';	
	END IF;
	
	IF PARAM_SSTCOP<>'M' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag situación de operación no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@ALMAPER.ZZWW10
				SET
					SESTRG =PARAM_SESTRG ,
					SSTCOP=PARAM_SSTCOP,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR =PARAM_NPROPR;	
					
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@RNSLIB.ZZWW10
				SET
					SESTRG =PARAM_SESTRG ,
					SSTCOP=PARAM_SSTCOP,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR =PARAM_NPROPR;	
					
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;
	
	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_SSTCOP : ' CONCAT PARAM_SSTCOP  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA					
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ANULACION_SOLICITUD_WARRANTCAB',
	pParametros,
	pRespuesta
	);		
	
END
GO
--DETALLE PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ANULACION_SOLICITUD_WARRANTDETPREOP
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_NITEM NUMERIC(5,0),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF 
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_NITEM,0)=0 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;


	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM) THEN
			
				UPDATE DC@ALMAPER.ZZWW28
				SET 
					SESTRG=PARAM_SESTRG,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM) THEN
			
				UPDATE DC@RNSLIB.ZZWW28
				SET 
					SESTRG=PARAM_SESTRG,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;

	SET pParametros=				
						'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
						'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
						'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
						'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
						'PARAM_CULUSA : ' CONCAT PARAM_CULUSA		
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ANULACION_SOLICITUD_WARRANTDETPREOP',
	pParametros,
	pRespuesta
	);	


END
GO
--DESCRIPCION DETALLE PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ANULACION_SOLICITUD_WARRANTDESCDETOPE
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_NITEM	NUMERIC (5,0),
	IN PARAM_NCRRDT	NUMERIC (4,0),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_NITEM,0)=0 OR
		IFNULL(PARAM_NCRRDT,0)=0 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;

	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW24 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCDRRDT=PARAM_NCDRRDT) THEN
			
				UPDATE DC@ALMAPER.ZZWW24
				SET 
					SESTRG=PARAM_SESTRG,   
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA, 
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCDRRDT=PARAM_NCDRRDT;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW24 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCDRRDT=PARAM_NCDRRDT) THEN
			
				UPDATE DC@RNSLIB.ZZWW24
				SET 
					SESTRG=PARAM_SESTRG,   
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA, 
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM AND NCDRRDT=PARAM_NCDRRDT;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;

	SET pParametros=				
						'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
						'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
						'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
						'PARAM_NCRRDT : ' CONCAT CAST(PARAM_NCRRDT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
						'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
						'PARAM_CULUSA : ' CONCAT PARAM_CULUSA		
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ANULACION_SOLICITUD_WARRANTDESCDETOPE',
	pParametros,
	pRespuesta
	);	


END
GO

--4.1.4	REQF004 – Eliminación del ítem 
--DETALLE PRE-OPERACIÓN 
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ELIMINA_ITEM_DETPREOP
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_NITEM NUMERIC(5,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_NITEM,0)=0 OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;

	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			DELETE FROM DC@ALMAPER.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM =PARAM_NITEM ;
			SET PARAM_PROCSTATUS=0;
			SET PARAM_PROCDESC='Registro eliminado';	
		ELSEIF PARAM_CCMPN='LZ' THEN
			DELETE FROM DC@RNSLIB.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM =PARAM_NITEM ;
			SET PARAM_PROCSTATUS=0;
			SET PARAM_PROCDESC='Registro eliminado';		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;

	SET pParametros=				
						'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
						'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
						'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
						'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ELIMINA_ITEM_DETPREOP',
	pParametros,
	pRespuesta
	);	

END 
GO
--DESCRIPCION DETALLE PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ELIMINA_ITEM_DESCDETOPE
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_NITEM NUMERIC(5,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			DELETE FROM DC@ALMAPER.ZZWW24 WHERE NPROPR=PARAM_NPROPR AND NITEM =PARAM_NITEM ;
			SET PARAM_PROCSTATUS=0;
			SET PARAM_PROCDESC='Registro eliminado';	
		ELSEIF PARAM_CCMPN='LZ' THEN
			DELETE FROM DC@RNSLIB.ZZWW24 WHERE NPROPR=PARAM_NPROPR AND NITEM =PARAM_NITEM ;
			SET PARAM_PROCSTATUS=0;
			SET PARAM_PROCDESC='Registro eliminado';		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;

	SET pParametros=				
						'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
						'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
						'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
						'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ELIMINA_ITEM_DESCDETOPE',
	pParametros,
	pRespuesta
	);	


END
GO

--4.1.5	REQF005 – Enviar la solicitud de warrant
--CABECERA PRE-OPERACIÓN  
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ENVIAR_WARCAB
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_CRGMN	CHAR (1) ,
	IN PARAM_SSTCOP	CHAR (1),
	IN PARAM_STPCNS	CHAR (1) ,
	IN PARAM_QSLIFN	NUMERIC (15,5),
	IN PARAM_QSLIAU	NUMERIC (15,5),
	IN PARAM_QSLPSF	NUMERIC (15,5),
	IN PARAM_QSLPAU	NUMERIC (15,5),
	IN PARAM_IVLPIS	NUMERIC (15,5),
	IN PARAM_IVLPIA	NUMERIC (15,5),
	IN PARAM_ISLVFN	NUMERIC (15,5),
	IN PARAM_ISLVLD	NUMERIC (15,5),
	IN PARAM_FENV NUMERIC(8,0),
	IN PARAM_HENV NUMERIC(6,0),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_CRGMN	,'')='' OR
		IFNULL(PARAM_SSTCOP,'')='' OR
		IFNULL(PARAM_STPCNS,'')='' OR
		IFNULL(PARAM_QSLIFN,0)=0 OR
		IFNULL(PARAM_QSLIAU,0)=0 OR
		IFNULL(PARAM_QSLPSF,0)=0 OR
		IFNULL(PARAM_QSLPAU,0)=0 OR
		IFNULL(PARAM_IVLPIS,0)=0 OR
		IFNULL(PARAM_IVLPIA,0)=0 OR
		IFNULL(PARAM_ISLVFN,0)=0 OR
		IFNULL(PARAM_ISLVLD,0)=0 OR
		IFNULL(PARAM_FENV,0)=0 OR
		IFNULL(PARAM_HENV,-1)=-1 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''	
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_SSTCOP<>'S' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag situación de operación no válido,';	
	END IF;

	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';	
	END IF;

	IF PARAM_STPCNS NOT IN ('P','C') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag tipo de Control Serie no válido,';	
	END IF;

	IF PARAM_CRGMN NOT IN ('A','S') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Tipo de régimen no válido,';	
	END IF;

	IF ((PARAM_CRGMN='A' OR PARAM_STPCNS='P') AND PARAM_QSLIFN<>0) OR ((PARAM_CRGMN='S' AND PARAM_STPCNS='C') AND PARAM_QSLIFN=0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Saldo inventario financiero no válido,';
	END IF;

	IF ((PARAM_CRGMN='S' OR PARAM_STPCNS='P') AND PARAM_QSLIAU<>0) OR ((PARAM_CRGMN='A' AND PARAM_STPCNS='C') AND PARAM_QSLIAU=0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Saldo inventario autorizado no válido,';
	END IF;

	IF ((PARAM_CRGMN='A' OR PARAM_STPCNS='C') AND PARAM_QSLPSF<>0) OR ((PARAM_CRGMN='S' AND PARAM_STPCNS='P') AND PARAM_QSLPSF=0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Saldo peso financiero no válido,';
	END IF;
	
	IF ((PARAM_CRGMN='S' OR PARAM_STPCNS='C') AND PARAM_QSLPAU<>0) OR ((PARAM_CRGMN='A' AND PARAM_STPCNS='P') AND PARAM_QSLPAU=0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Saldo peso aduanero no válido,';
	END IF;

	IF (PARAM_CRGMN='A' AND PARAM_IVLPIA=0) OR (PARAM_CRGMN='S' AND PARAM_IVLPIA<>0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Importe valor primer ingreso autorizado no válido,';
	END IF;

	IF (PARAM_CRGMN='A' AND PARAM_ISLVLD=0) OR (PARAM_CRGMN='S' AND PARAM_ISLVLD<>0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Importe saldo valor autorizado no válido,';
	END IF;

	IF LENGTH(CAST(PARAM_FENV AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FENV AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FENV AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FENV AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FENV AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HENV<0 OR 
	   PARAM_HENV>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HENV AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HENV AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HENV AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;
	
	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@ALMAPER.ZZWW10
				SET 
					SESTRG =PARAM_SESTRG ,
					SSTCOP=PARAM_SSTCOP,
					QSLIFN =PARAM_QSLIFN ,
					QSLIAU=PARAM_QSLIAU,
					QSLPSF =PARAM_QSLPSF ,
					QSLPAU =PARAM_QSLPAU ,
					IVLPIS =PARAM_IVLPIS ,
					IVLPIA =PARAM_IVLPIA ,
					ISLVFN=PARAM_ISLVFN,
					ISLVLD =PARAM_ISLVLD ,
					FENV=PARAM_FENV,
					HENV=PARAM_HENV,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR =PARAM_NPROPR;				
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@RNSLIB.ZZWW10
				SET 
					SESTRG =PARAM_SESTRG ,
					SSTCOP=PARAM_SSTCOP,
					QSLIFN =PARAM_QSLIFN ,
					QSLIAU=PARAM_QSLIAU,
					QSLPSF =PARAM_QSLPSF ,
					QSLPAU =PARAM_QSLPAU ,
					IVLPIS =PARAM_IVLPIS ,
					IVLPIA =PARAM_IVLPIA ,
					ISLVFN=PARAM_ISLVFN,
					ISLVLD =PARAM_ISLVLD ,
					FENV=PARAM_FENV,
					HENV=PARAM_HENV,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR =PARAM_NPROPR;				
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
					
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CRGMN : ' CONCAT PARAM_CRGMN  CONCAT ' | ' CONCAT
					'PARAM_SSTCOP : ' CONCAT PARAM_SSTCOP  CONCAT ' | ' CONCAT
					'PARAM_STPCNS : ' CONCAT PARAM_STPCNS  CONCAT ' | ' CONCAT
					'PARAM_QSLIFN : ' CONCAT CAST(PARAM_QSLIFN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_QSLIAU : ' CONCAT CAST(PARAM_QSLIAU  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_QSLPSF : ' CONCAT CAST(PARAM_QSLPSF  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_QSLPAU : ' CONCAT CAST(PARAM_QSLPAU  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_IVLPIS : ' CONCAT CAST(PARAM_IVLPIS  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_IVLPIA : ' CONCAT CAST(PARAM_IVLPIA  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_ISLVFN : ' CONCAT CAST(PARAM_ISLVFN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_ISLVLD : ' CONCAT CAST(PARAM_ISLVLD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_FENV : ' CONCAT CAST(PARAM_FENV  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_HENV : ' CONCAT CAST(PARAM_HENV  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ENVIAR_WARCAB',
	pParametros,
	pRespuesta
	);		
	

END
GO
--DETALLE PRE-OPERACIÓN 
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ENVIAR_WARDETPREOP
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_NITEM	NUMERIC (5,0),
	IN PARAM_CRGMN	CHAR (1) ,
	IN PARAM_STPCNS	CHAR (1) ,
	IN PARAM_QSLCNF	NUMERIC (15,5),
	IN PARAM_QSLCND	NUMERIC (15,5),
	IN PARAM_QSLPSF	NUMERIC (15, 5),
	IN PARAM_QSLPSD	NUMERIC (15,5),
	IN PARAM_ISLDFN	NUMERIC (15,5),
	IN PARAM_ISLDDC	NUMERIC (15,5),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_NITEM	,0)=0 OR
		IFNULL(PARAM_CRGMN	,'')='' OR
		IFNULL(PARAM_STPCNS,'')='' OR
		IFNULL(PARAM_QSLCNF,0)=0 OR
		IFNULL(PARAM_QSLCND,0)=0 OR
		IFNULL(PARAM_QSLPSF,0)=0 OR
		IFNULL(PARAM_QSLPSD,0)=0 OR
		IFNULL(PARAM_ISLDFN,0)=0 OR
		IFNULL(PARAM_ISLDDC,0)=0 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';		
	END IF;

	IF PARAM_STPCNS NOT IN ('P','C') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag tipo de Control Serie no válido,';		
	END IF;
	
	IF PARAM_CRGMN NOT IN ('A','S') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Tipo de régimen no válido,';	
	END IF;

	IF (PARAM_STPCNS='C' AND PARAM_QSLCNF=0) OR (PARAM_STPCNS='P' AND PARAM_QSLCNF<>0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Saldo cantidad financiera no válido,';	
	END IF;

	IF ((PARAM_STPCNS='C' OR PARAM_CRGMN='S') AND PARAM_QSLCND<>0 ) OR ((PARAM_STPCNS='P' AND PARAM_CRGMN='A') AND PARAM_QSLCND=0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Saldo cantidad declarada no válido,';		
	END IF;
	
	IF (PARAM_STPCNS='C' AND PARAM_QSLPSF<>0) OR (PARAM_STPCNS='P' AND PARAM_QSLPSF=0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Saldo peso financiero no válido,';	
	END IF;

	IF ((PARAM_STPCNS='C' OR PARAM_CRGMN='S') AND PARAM_QSLPSD<>0 ) OR ((PARAM_STPCNS='P' AND PARAM_CRGMN='A') AND PARAM_QSLPSD=0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Saldo peso declarado no válido,';		
	END IF;
	
	IF (PARAM_CRGMN='S' AND PARAM_ISLDDC<> 0) OR (PARAM_CRGMN='A' AND PARAM_ISLDDC= 0) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Importe saldo declarado no válido,';	
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM) THEN
			
				UPDATE DC@ALMAPER.ZZWW28
				SET
					QSLCNF=PARAM_QSLCNF,
					QSLCND=PARAM_QSLCND,
					QSLPSF=PARAM_QSLPSF,
					QSLPSD=PARAM_QSLPSD,
					ISLDFN=PARAM_ISLDFN,
					ISLDDC=PARAM_ISLDDC,
					SESTRG=PARAM_SESTRG,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM) THEN
			
				UPDATE DC@RNSLIB.ZZWW28
				SET
					QSLCNF=PARAM_QSLCNF,
					QSLCND=PARAM_QSLCND,
					QSLPSF=PARAM_QSLPSF,
					QSLPSD=PARAM_QSLPSD,
					ISLDFN=PARAM_ISLDFN,
					ISLDDC=PARAM_ISLDDC,
					SESTRG=PARAM_SESTRG,
					FULTAC=DC@RNSLIB.FECHA(),
					HULTAC=DC@RNSLIB.HORA(),
					CULUSA=PARAM_CULUSA,
					NTRMNL=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NITEM=PARAM_NITEM;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';			
			END IF;
					
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CRGMN : ' CONCAT PARAM_CRGMN  CONCAT ' | ' CONCAT
					'PARAM_STPCNS : ' CONCAT PARAM_STPCNS  CONCAT ' | ' CONCAT
					'PARAM_QSLCNF : ' CONCAT CAST(PARAM_QSLCNF  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_QSLCND : ' CONCAT CAST(PARAM_QSLCND  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_QSLPSF : ' CONCAT CAST(PARAM_QSLPSF  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_QSLPSD : ' CONCAT CAST(PARAM_QSLPSD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_ISLDFN : ' CONCAT CAST(PARAM_ISLDFN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_ISLDDC : ' CONCAT CAST(PARAM_ISLDDC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ENVIAR_WARDETPREOP',
	pParametros,
	pRespuesta
	);	

END
GO

--4.1.6	REQF006 –  Endoso de Warrant
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ENDOSO_WAR
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NOPRRL	NUMERIC (10,0),
	IN PARAM_TGRCMP	CHAR (250),
	IN PARAM_IMNTPR	NUMERIC (15,5),
	IN PARAM_FVNCWR	NUMERIC (8,0),
	IN PARAM_SSTCOP	CHAR (1),
	IN PARAM_FENDOS	NUMERIC (8,0),
	IN PARAM_HENDS	NUMERIC (6,0),
	IN PARAM_FACONF	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	IN PARAM_TTSINT CHAR(150),
	IN PARAM_TOFCN CHAR(30),
	IN PARAM_NCNTBN CHAR(25),
	IN PARAM_NDCEND CHAR(50),
	IN PARAM_NGARAN CHAR(15),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_NOPRRL,0)=0 OR
		IFNULL(PARAM_TGRCMP,'')='' OR
		IFNULL(PARAM_IMNTPR,0)=0 OR
		IFNULL(PARAM_FVNCWR,0)=0 OR
		IFNULL(PARAM_SSTCOP,'')='' OR
		IFNULL(PARAM_FENDOS,0)=0 OR
		IFNULL(PARAM_HENDS	,0)=0 OR
		IFNULL(PARAM_FACONF,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_SSTCOP<>'E' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag situación operación no válido,';	
	END IF;

	IF PARAM_FACONF <>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Facultades conformes no válido,';	
	END IF;

	IF LENGTH(CAST(PARAM_FVNCWR AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FVNCWR AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FVNCWR AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FVNCWR AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FVNCWR AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF LENGTH(CAST(PARAM_FENDOS AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FENDOS AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FENDOS AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FENDOS AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FENDOS AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HENDS<0 OR 
	   PARAM_HENDS>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HENDS AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HENDS AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HENDS AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;	

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NOPRRL =PARAM_NOPRRL ) THEN
			
				UPDATE DC@ALMAPER.ZZWW10
				SET 
					TGRCMP=PARAM_TGRCMP,
					IMNTPR=PARAM_IMNTPR,
					FVNCWR=PARAM_FVNCWR,
					TTSINT=PARAM_TTSINT,
					TOFCN=PARAM_TOFCN,
					NCNTBN=PARAM_NCNTBN,
					NDCEND=PARAM_NDCEND,
					NGARAN=PARAM_NGARAN,
					SSTCOP=PARAM_SSTCOP,
					FENDOS=PARAM_FENDOS,
					HENDS=PARAM_HENDS,
					FACONF=PARAM_FACONF,
					NTRMNL=PARAM_CULUSA
				WHERE NOPRRL =PARAM_NOPRRL;
			
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NOPRRL =PARAM_NOPRRL ) THEN
			
				UPDATE DC@RNSLIB.ZZWW10
				SET 
					TGRCMP=PARAM_TGRCMP,
					IMNTPR=PARAM_IMNTPR,
					FVNCWR=PARAM_FVNCWR,
					TTSINT=PARAM_TTSINT,
					TOFCN=PARAM_TOFCN,
					NCNTBN=PARAM_NCNTBN,
					NDCEND=PARAM_NDCEND,
					NGARAN=PARAM_NGARAN,
					SSTCOP=PARAM_SSTCOP,
					FENDOS=PARAM_FENDOS,
					HENDS=PARAM_HENDS,
					FACONF=PARAM_FACONF,
					NTRMNL=PARAM_CULUSA
				WHERE NOPRRL =PARAM_NOPRRL;
			
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
					
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NOPRRL : ' CONCAT CAST(PARAM_NOPRRL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_TGRCMP : ' CONCAT PARAM_TGRCMP  CONCAT ' | ' CONCAT
					'PARAM_IMNTPR : ' CONCAT CAST(PARAM_IMNTPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_FVNCWR : ' CONCAT CAST(PARAM_FVNCWR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SSTCOP : ' CONCAT PARAM_SSTCOP  CONCAT ' | ' CONCAT
					'PARAM_FENDOS : ' CONCAT CAST(PARAM_FENDOS  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_HENDS : ' CONCAT CAST(PARAM_HENDS  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_FACONF : ' CONCAT PARAM_FACONF  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA  CONCAT ' | ' CONCAT
					'PARAM_TTSINT : ' CONCAT PARAM_TTSINT  CONCAT ' | ' CONCAT
					'PARAM_TOFCN : ' CONCAT PARAM_TOFCN  CONCAT ' | ' CONCAT
					'PARAM_NCNTBN : ' CONCAT PARAM_NCNTBN  CONCAT ' | ' CONCAT
					'PARAM_NDCEND : ' CONCAT PARAM_NDCEND  CONCAT ' | ' CONCAT
					'PARAM_NGARAN : ' CONCAT PARAM_NGARAN
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ENDOSO_WAR',
	pParametros,
	pRespuesta
	);	

END
GO

--4.1.7	REQF007 –  Registro firma depositante
--REPRESENTANTES  POR  OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_DEPOS_REPOPE
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_STPENT	NUMERIC (5,0),
	IN PARAM_CENTD	NUMERIC (6,0),
	IN PARAM_CRPRS	CHAR (5),
	IN PARAM_NOPRCN	NUMERIC (10, 0),
	IN PARAM_SFRMRP	CHAR (1),
	IN PARAM_FFRMRP	NUMERIC (8,0),
	IN PARAM_HFRMRP	NUMERIC (6,0),
	IN PARAM_SESTRG	CHAR (1) ,
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	
	IF
		IFNULL(PARAM_CCMPN	,0)=0 OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_STPENT,0)=0 OR
		IFNULL(PARAM_CENTD	,0)=0 OR
		IFNULL(PARAM_CRPRS	,0)=0 OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_SFRMRP,0)=0 OR
		IFNULL(PARAM_FFRMRP,0)=0 OR
		IFNULL(PARAM_HFRMRP,0)=0 OR
		IFNULL(PARAM_SESTRG,0)=0 OR
		IFNULL(PARAM_CULUSA,0)=0
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_STPENT<>'C' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Numero de Item no válido,';	
	END IF;
	
	IF PARAM_CRPRS BETWEEN '00' AND '99999' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código representante no válido,';	
	END IF;
	
	IF PARAM_SFRMRP<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;
	
	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';
	END IF;
	
	IF LENGTH(CAST(PARAM_FFRMRP AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HFRMRP<0 OR 
	   PARAM_HFRMRP>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;	
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF NOT EXISTS (SELECT * FROM DC@ALMAPER.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS =PARAM_CRPRS ) THEN
			
				INSERT INTO DC@ALMAPER.ZZWT89 (
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF NOT EXISTS (SELECT * FROM DC@RNSLIB.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS =PARAM_CRPRS ) THEN
			
				INSERT INTO DC@RNSLIB.ZZWT89 (
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	
	
	
	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_STPENT : ' CONCAT CAST(PARAM_STPENT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CENTD : ' CONCAT CAST(PARAM_CENTD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CRPRS : ' CONCAT PARAM_CRPRS  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SFRMRP : ' CONCAT PARAM_SFRMRP  CONCAT ' | ' CONCAT
					'PARAM_FFRMRP : ' CONCAT CAST(PARAM_FFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_HFRMRP : ' CONCAT CAST(PARAM_HFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_DEPOS_REPOPE',
	pParametros,
	pRespuesta
	);	
	
END
GO

--FIRMAS  POR WARRANT
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_DEPOS_FRMWAR
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NOPRCN	NUMERIC (10, 0),
	IN PARAM_NFRRCL	NUMERIC (2,0),
	IN PARAM_SESTRG	CHAR (1) ,
	IN PARAM_CULUSA	CHAR (10),
	IN PARAM_SFRMCL	CHAR (1),
	IN PARAM_NFRMCL	NUMERIC (2,0),	
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF 
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_NFRRCL,0)=0 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_NFRRCL NOT IN (1,2) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de firmas registradas del cliente no válido,';	
	END IF;
	
	IF PARAM_SFRMCL NOT IN ('','S') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag Firma del Cliente no válido,';	
	END IF;

	IF PARAM_NFRMCL NOT BETWEEN 0 AND 2 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de firmas del cliente no válido,';	
	END IF;

	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';	
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT90 WHERE NOPRCN =PARAM_NOPRCN ) THEN
--				INSERT INTO DC@ALMAPER.ZZWT90(
--					SFRMCL, NFRRCL, NFRMCL, SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
--				) VALUES (
--					PARAM_SFRMCL, PARAM_NFRRCL, PARAM_NFRMCL, PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
--				);

				UPDATE DC@ALMAPER.ZZWT90
				SET
					SFRMCL =PARAM_SFRMCL ,
					NFRRCL =PARAM_NFRRCL ,
					NFRMCL =PARAM_NFRMCL ,
					SESTRG =PARAM_SESTRG ,
					NTRMNL =PARAM_CULUSA ,
					FULTAC =DC@RNSLIB.FECHA() ,
					HULTAC =DC@RNSLIB.HORA() ,
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT90 WHERE NOPRCN =PARAM_NOPRCN ) THEN
--				INSERT INTO DC@RNSLIB.ZZWT90(
--					SFRMCL, NFRRCL, NFRMCL, SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
--				) VALUES (
--					PARAM_SFRMCL, PARAM_NFRRCL, PARAM_NFRMCL, PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
--				);

				UPDATE DC@RNSLIB.ZZWT90
				SET
					SFRMCL =PARAM_SFRMCL ,
					NFRRCL =PARAM_NFRRCL ,
					NFRMCL =PARAM_NFRMCL ,
					SESTRG =PARAM_SESTRG ,
					NTRMNL =PARAM_CULUSA ,
					FULTAC =DC@RNSLIB.FECHA() ,
					HULTAC =DC@RNSLIB.HORA() ,
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	


	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NFRRCL : ' CONCAT CAST(PARAM_NFRRCL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA  CONCAT ' | ' CONCAT
					'PARAM_SFRMCL : ' CONCAT PARAM_SFRMCL  CONCAT ' | ' CONCAT
					'PARAM_NFRMCL : ' CONCAT CAST(PARAM_NFRMCL  AS VARCHAR(2000))
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_DEPOS_FRMWAR',
	pParametros,
	pRespuesta
	);	

END
GO


--REQF008 –  Registro firma primer endosatario 
--REPRESENTANTES  POR  OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_PRIMENDO_REPOPE
(
	IN PARAM_CCMPN CHAR(2) , 
	IN PARAM_NPROPR NUMERIC(10, 0) , 
	IN PARAM_STPENT NUMERIC(5, 0) , 
	IN PARAM_CENTD NUMERIC(6, 0) , 
	IN PARAM_CRPRS CHAR(5) , 
	IN PARAM_NOPRCN NUMERIC(10, 0) , 
	IN PARAM_SFRMRP CHAR(1) , 
	IN PARAM_FFRMRP NUMERIC(8, 0) , 
	IN PARAM_HFRMRP NUMERIC(6, 0) , 
	IN PARAM_SESTRG CHAR(1) , 
	IN PARAM_CULUSA CHAR(10) , 
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_STPENT,0)=0 OR
		IFNULL(PARAM_CENTD	,0)=0 OR
		IFNULL(PARAM_CRPRS	,'')='' OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_SFRMRP,'')='' OR
		IFNULL(PARAM_FFRMRP,0)=0 OR
		IFNULL(PARAM_HFRMRP,0)=0 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN 
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_STPENT<>'E' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Numero de Item no válido,';		
	END IF;
	
	IF PARAM_CRPRS NOT BETWEEN '00' AND '99999' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código representante no válido,';	
	END IF;
	
	IF PARAM_SFRMRP<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;

	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';
	END IF;

	IF LENGTH(CAST(PARAM_FFRMRP AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HFRMRP<0 OR 
	   PARAM_HFRMRP>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;	

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF NOT EXISTS (SELECT * FROM DC@ALMAPER.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS =PARAM_CRPRS ) THEN
			
				INSERT INTO DC@ALMAPER.ZZWT89(
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
 			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF NOT EXISTS (SELECT * FROM DC@RNSLIB.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS =PARAM_CRPRS ) THEN
			
				INSERT INTO DC@RNSLIB.ZZWT89(
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_STPENT : ' CONCAT CAST(PARAM_STPENT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CENTD : ' CONCAT CAST(PARAM_CENTD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CRPRS : ' CONCAT PARAM_CRPRS  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SFRMRP : ' CONCAT PARAM_SFRMRP  CONCAT ' | ' CONCAT
					'PARAM_FFRMRP : ' CONCAT CAST(PARAM_FFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_HFRMRP : ' CONCAT CAST(PARAM_HFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA  
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_PRIMENDO_REPOPE',
	pParametros,
	pRespuesta
	);	

END
GO
--FIRMAS  POR WARRANT
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_PRIMENDO_FIRWAR
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NOPRCN NUMERIC(10,0),
	IN PARAM_NFRREN NUMERIC(2,0),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CULUSA CHar(10),
	IN PARAM_SFRMEN CHAR(1),
	IN PARAM_NFRMEN NUMERIC(2,0),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF 
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_NFRREN,0)=0 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_NFRREN NOT IN (1,2) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de firmas registradas de endoso no válido,';	
	END IF;
	
	IF PARAM_SFRMEN NOT IN ('','S') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag Firma endoso no válido,';	
	END IF;
	
	IF PARAM_NFRMEN NOT BETWEEN 0 AND 2 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de firmas de endoso no válido,';	
	END IF;

	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT90 WHERE NOPRCN=PARAM_NOPRCN ) THEN
			
--				INSERT INTO DC@ALMAPER.ZZWT90(
--					SFRMEN, NFRREN,  NFRMEN,  SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
--					) VALUES (
--					PARAM_SFRMEN, PARAM_NFRREN, PARAM_NFRMEN, PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
--					);

				UPDATE DC@ALMAPER.ZZWT90
				SET
					SFRMEN =PARAM_SFRMEN ,
					NFRREN =PARAM_NFRREN ,
					NFRMEN =PARAM_NFRMEN ,
					SESTRG =PARAM_SESTRG ,
					NTRMNL =PARAM_CULUSA ,
					FULTAC =DC@RNSLIB.FECHA() ,
					HULTAC =DC@RNSLIB.HORA() ,
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT90 WHERE NOPRCN=PARAM_NOPRCN ) THEN
			
--				INSERT INTO DC@RNSLIB.ZZWT90(
--					SFRMEN, NFRREN,  NFRMEN,  SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
--					) VALUES (
--					PARAM_SFRMEN, PARAM_NFRREN, PARAM_NFRMEN, PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
--					);

				UPDATE DC@RNSLIB.ZZWT90
				SET
					SFRMEN =PARAM_SFRMEN ,
					NFRREN =PARAM_NFRREN ,
					NFRMEN =PARAM_NFRMEN ,
					SESTRG =PARAM_SESTRG ,
					NTRMNL =PARAM_CULUSA ,
					FULTAC =DC@RNSLIB.FECHA() ,
					HULTAC =DC@RNSLIB.HORA() ,
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	


	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NFRREN : ' CONCAT CAST(PARAM_NFRREN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA  CONCAT ' | ' CONCAT
					'PARAM_SFRMEN : ' CONCAT PARAM_SFRMEN  CONCAT ' | ' CONCAT
					'PARAM_NFRMEN : ' CONCAT CAST(PARAM_NFRMEN  AS VARCHAR(2000))
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_PRIMENDO_FIRWAR',
	pParametros,
	pRespuesta
	);	

END 
GO
--REQF009 –  Registro firma rechazo depositante
--CABECERA PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_CAB
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_NOPRRL	NUMERIC (10,0),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	IN PARAM_SSTCOP CHAR(1),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN 
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_SSTCOP<>'C' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag situación operación  no válido,';	
	END IF;
	
	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL) THEN
			
				UPDATE DC@ALMAPER.ZZWW10
				SET 
					SSTCOP=PARAM_SSTCOP,  
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL) THEN
			
				UPDATE DC@RNSLIB.ZZWW10
				SET 
					SSTCOP=PARAM_SSTCOP,  
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	
	
	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NOPRRL : ' CONCAT CAST(PARAM_NOPRRL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA  CONCAT ' | ' CONCAT
					'PARAM_SSTCOP : ' CONCAT PARAM_SSTCOP
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_CAB',
	pParametros,
	pRespuesta
	);	
	
END
GO

--DETALLE PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_DETOPE
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_NOPRRL	NUMERIC (10,0),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL ) THEN
			
				UPDATE DC@ALMAPER.ZZWW28
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL ) THEN
			
				UPDATE DC@RNSLIB.ZZWW28
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NOPRRL : ' CONCAT CAST(PARAM_NOPRRL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_DETOPE',
	pParametros,
	pRespuesta
	);	

END
GO

--DESCRIPCION DETALLE PRE-OPERACIÓN  
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_DESCDETOPE
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;

	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW24 WHERE NPROPR=PARAM_NPROPR) THEN
			
				UPDATE DC@ALMAPER.ZZWW24
				SET
					SESTRG=PARAM_SESTRG,
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW24 WHERE NPROPR=PARAM_NPROPR) THEN
			
				UPDATE DC@RNSLIB.ZZWW24
				SET
					SESTRG=PARAM_SESTRG,
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_DESCDETOPE',
	pParametros,
	pRespuesta
	);	
	

END
GO
DROP PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_OPE
--OPERACION
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_OPE
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROCN NUMERIC(10,0),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;

	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWM06 WHERE NOPRCN =PARAM_NOPRCN) THEN
			
				UPDATE DC@ALMAPER.ZZWM06
				SET 
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWM06 WHERE NOPRCN =PARAM_NOPRCN) THEN
			
				UPDATE DC@RNSLIB.ZZWM06
				SET 
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	
	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROCN : ' CONCAT CAST(PARAM_NPROCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_OPE',
	pParametros,
	pRespuesta
	);	

END
GO

--DETALLE DE OPERACION
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_DETOPERA
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROCN NUMERIC(10,0),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;

	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT28 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@ALMAPER.ZZWT28
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.FECHA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT28 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@RNSLIB.ZZWT28
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.FECHA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	
	
	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROCN : ' CONCAT CAST(PARAM_NPROCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_DETOPERA',
	pParametros,
	pRespuesta
	);	
	
END
GO

--DESCRIPCION DE ITEMS
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_DESCITEMS
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROCN NUMERIC(10,0),
	IN PARAM_SESTRG CHAR(1),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;

	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT24 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@ALMAPER.ZZWT24
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.FECHA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT24 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@RNSLIB.ZZWT24
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.FECHA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROCN : ' CONCAT CAST(PARAM_NPROCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHDEPO_DESCITEMS',
	pParametros,
	pRespuesta
	);	

END
GO

--REQF010 –  Registro firma endosatario 
--REPRESENTANTES  POR  OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_ENDO_REPXOPE
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_STPENT	NUMERIC (5,0),
	IN PARAM_CENTD	NUMERIC (6,0),
	IN PARAM_CRPRS	CHAR (5),
	IN PARAM_NOPRCN	NUMERIC (10, 0),
	IN PARAM_SFRMRP	CHAR (1),
	IN PARAM_FFRMRP	NUMERIC (8,0),
	IN PARAM_HFRMRP	NUMERIC (6,0),
	IN PARAM_SESTRG	CHAR (1) ,
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000)		
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF 
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_STPENT,0)=0 OR
		IFNULL(PARAM_CENTD	,0)=0 OR
		IFNULL(PARAM_CRPRS	,'')='' OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_SFRMRP,'')='' OR
		IFNULL(PARAM_FFRMRP,0)=0 OR
		IFNULL(PARAM_HFRMRP,-1)=-1 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor, ';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF PARAM_STPENT<>'B' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Numero de Item no válido, ';	
	END IF;

	IF PARAM_CRPRS BETWEEN '00' AND '99999' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código representante no válido, ';	
	END IF;

	IF PARAM_SFRMRP<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido, ';	
	END IF;
	
	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido, ';	
	END IF;
	
	IF LENGTH(CAST(PARAM_FFRMRP AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HFRMRP<0 OR 
	   PARAM_HFRMRP>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;	

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF NOT EXISTS (SELECT * FROM DC@ALMAPER.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS=PARAM_CRPRS) THEN
			
				INSERT INTO DC@ALMAPER.ZZWT89(
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF NOT EXISTS (SELECT * FROM DC@RNSLIB.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS=PARAM_CRPRS) THEN
			
				INSERT INTO DC@RNSLIB.ZZWT89(
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_STPENT : ' CONCAT CAST(PARAM_STPENT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CENTD : ' CONCAT CAST(PARAM_CENTD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CRPRS : ' CONCAT PARAM_CRPRS  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SFRMRP : ' CONCAT PARAM_SFRMRP  CONCAT ' | ' CONCAT
					'PARAM_FFRMRP : ' CONCAT CAST(PARAM_FFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_HFRMRP : ' CONCAT CAST(PARAM_HFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_ENDO_REPXOPE',
	pParametros,
	pRespuesta
	);	

END
GO

--FIRMAS  POR WARRANT
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_ENDO_FRMWAR
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NOPRCN	NUMERIC (10, 0),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_NFRRBN	NUMERIC (2,0),
	IN PARAM_SESTRG	CHAR (1) ,
	IN PARAM_CULUSA	CHAR (10),
	IN PARAM_SFRMBN	CHAR (1),
	IN PARAM_NFRMBN	NUMERIC (2,0),
	INOUT PARAM_PROCSTATUS INTEGER	,
	INOUT PARAM_PROCDESC VARCHAR(2000) 	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_NFRRBN,0)=0 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor, ';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF PARAM_NFRRBN NOT IN (1,2) THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de firmas registradas del banco no válido, ';
	END IF;
		
	IF PARAM_SFRMBN NOT IN ('','S') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag Firma del Cliente no válido, ';		
	END IF;
	
	IF PARAM_NFRMBN NOT BETWEEN 0 AND 2 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de firmas del banco no válido, ';	
	END IF;
	
	IF PARAM_SESTRG <>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Número de firmas del banco no válido, ';
	END IF;


	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT90 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@ALMAPER.ZZWT90
				SET
					SFRMBN=PARAM_SFRMBN, 
					NFRRBN=PARAM_NFRRBN,  
					NFRMBN=PARAM_NFRMBN,  
					SESTRG=PARAM_SESTRG, 
					NTRMNL=PARAM_CULUSA, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
				
				IF PARAM_SFRMBN='S' THEN
					UPDATE DC@ALMAPER.ZZWW10
					SET 
						SSTCOP ='J', 
						FULTAC=DC@RNSLIB.FECHA() , 
						HULTAC=DC@RNSLIB.HORA() , 
						CULUSA=PARAM_CULUSA
					WHERE NPROPR =PARAM_NPROPR ;
					
				END IF;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT90 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@RNSLIB.ZZWT90
				SET
					SFRMBN=PARAM_SFRMBN, 
					NFRRBN=PARAM_NFRRBN,  
					NFRMBN=PARAM_NFRMBN,  
					SESTRG=PARAM_SESTRG, 
					NTRMNL=PARAM_CULUSA, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
				
				IF PARAM_SFRMBN='S' THEN
					UPDATE DC@RNSLIB.ZZWW10
					SET 
						SSTCOP ='J', 
						FULTAC=DC@RNSLIB.FECHA() , 
						HULTAC=DC@RNSLIB.HORA() , 
						CULUSA=PARAM_CULUSA
					WHERE NPROPR =PARAM_NPROPR;
					
				END IF;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	
	
	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NFRRBN : ' CONCAT CAST(PARAM_NFRRBN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA  CONCAT ' | ' CONCAT
					'PARAM_SFRMBN : ' CONCAT PARAM_SFRMBN  CONCAT ' | ' CONCAT
					'PARAM_NFRMBN : ' CONCAT CAST(PARAM_NFRMBN  AS VARCHAR(2000))
										;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_ENDO_FRMWAR',
	pParametros,
	pRespuesta
	);	
	
END
GO

--REQF011 – Registro firma rechazo endosatario
--CABECERA PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_CAB
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_NOPRRL	NUMERIC (10,0),
	IN PARAM_SSTCOP	CHAR (1),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 			
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	
	IF PARAM_SSTCOP<>'F' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag situación operación no válido, ';
	END IF;

	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido, ';
	END IF;
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL ) THEN
			
				UPDATE DC@ALMAPER.ZZWW10
				SET
					SSTCOP=PARAM_SSTCOP,  
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL ) THEN
			
				UPDATE DC@RNSLIB.ZZWW10
				SET
					SSTCOP=PARAM_SSTCOP,  
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	


	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NOPRRL : ' CONCAT CAST(PARAM_NOPRRL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SSTCOP : ' CONCAT PARAM_SSTCOP  CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
										;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_CAB',
	pParametros,
	pRespuesta
	);	

END
GO
--DETALLE PRE-OPERACIÓN
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_DETPOPE
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_NOPRRL	NUMERIC (10,0),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;

	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido, ';
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL ) THEN
				
				UPDATE DC@ALMAPER.ZZWW28
				SET 
				SESTRG=PARAM_SESTRG,
				FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), 
				CULUSA=PARA_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW28 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL ) THEN
				
				UPDATE DC@RNSLIB.ZZWW28
				SET 
				SESTRG=PARAM_SESTRG,
				FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), 
				CULUSA=PARA_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	
	
	
	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NOPRRL : ' CONCAT CAST(PARAM_NOPRRL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
										;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_DETPOPE',
	pParametros,
	pRespuesta
	);	

END
GO

--DESCRIPCION DETALLE PRE-OPERACIÓN  
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_DESCDETPOPE
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido, ';
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW24 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@ALMAPER.ZZWW24
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA() ,
					CULUSA=PARAM_CULUSA
				WHERE NPROPR =PARAM_NPROPR;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW24 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@RNSLIB.ZZWW24
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA() ,
					CULUSA=PARAM_CULUSA
				WHERE NPROPR =PARAM_NPROPR;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
										;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_DESCDETPOPE',
	pParametros,
	pRespuesta
	);	

END
GO

--OPERACION
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_OPE
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NOPRCN	NUMERIC (10, 0),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido, ';
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWM06 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@ALMAPER.ZZWM06
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWM06 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@RNSLIB.ZZWM06
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	
	
	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
										;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_OPE',
	pParametros,
	pRespuesta
	);	

END
GO
--DETALLE DE OPERACION
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_DETOPERACION
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NOPRCN	NUMERIC (10, 0),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido, ';
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT28 WHERE NOPRCN =PARAM_NOPRCN ) THEN
				
				UPDATE DC@ALMAPER.ZZWT28
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT28 WHERE NOPRCN =PARAM_NOPRCN ) THEN
				
				UPDATE DC@RNSLIB.ZZWT28
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	


	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
										;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_DETOPERACION',
	pParametros,
	pRespuesta
	);	

END
GO
--DESCRIPCION DE ITEMS
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_DESCITEM
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NOPRCN	NUMERIC (10, 0),
	IN PARAM_SESTRG	CHAR (1),
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN 
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF PARAM_SESTRG<>'*' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido, ';
	END IF;

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT24 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@ALMAPER.ZZWT24
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
			
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT24 WHERE NOPRCN =PARAM_NOPRCN ) THEN
			
				UPDATE DC@RNSLIB.ZZWT24
				SET
					SESTRG=PARAM_SESTRG, 
					FULTAC=DC@RNSLIB.FECHA(), 
					HULTAC=DC@RNSLIB.HORA(), 
					CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro no existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	
	
	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
										;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_RECHENDO_DESCITEM',
	pParametros,
	pRespuesta
	);	
	
END
GO
---------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------

--4.1.12	REQF012 – Rollback Anulación Solicitud de warrant
DROP PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_SOL_WAR
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_SOL_WAR
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROPR NUMERIC(10,0),
	--IN PARAM_FULTAC NUMERIC(8,0),
	--IN PARAM_HULTAC NUMERIC(8,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF IFNULL(PARAM_CCMPN,'')='' OR 
	   IFNULL(PARAM_NPROPR,0)=0 OR 
	   --IFNULL(PARAM_FULTAC,0)=0 OR 
	   --IFNULL(PARAM_HULTAC,0)=0 OR 
	   IFNULL(PARAM_CULUSA,'')='' 
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
--	IF LENGTH(CAST(PARAM_FULTAC AS VARCHAR(8)))<>8  OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),5,2) AS INTEGER)>12 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)>31 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN	
--		SET VAL=VAL+1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
--	END IF;

--	IF PARAM_HULTAC<0 OR 
--	   PARAM_HULTAC>235959 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
--	   
--	   SET VAL=VAL+1;
--	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
--	END IF;	

	IF PARAM_CULUSA<>'WEBALMA' AND PARAM_CULUSA<>'WEBCASA' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido';		
	END IF;


	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR=PARAM_NPROPR) AND 
			   EXISTS (SELECT * FROM DC@ALMAPER.ZZWW28 WHERE NPROPR=PARAM_NPROPR) AND 
			   EXISTS (SELECT * FROM DC@ALMAPER.ZZWW24 WHERE NPROPR=PARAM_NPROPR) THEN
			--GUARDA
				UPDATE DC@ALMAPER.ZZWW10
				SET SESTRG='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@ALMAPER.ZZWW28
				SET SESTRG='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@ALMAPER.ZZWW24
				SET SESTRG='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;				
				
				SET PARAM_PROCSTATUS=0;
                SET PARAM_PROCDESC='Registro modificado';			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC = PARAM_PROCDESC || 'Registro no existe';				
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR=PARAM_NPROPR) AND 
			   EXISTS (SELECT * FROM DC@RNSLIB.ZZWW28 WHERE NPROPR=PARAM_NPROPR) AND 
			   EXISTS (SELECT * FROM DC@RNSLIB.ZZWW24 WHERE NPROPR=PARAM_NPROPR) THEN
			--GUARDA
				UPDATE DC@RNSLIB.ZZWW10
				SET SESTRG='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@RNSLIB.ZZWW28
				SET SESTRG='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@RNSLIB.ZZWW24
				SET SESTRG='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;				
				
				SET PARAM_PROCSTATUS=0;
                SET PARAM_PROCDESC='Registro modificado';			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC = PARAM_PROCDESC || 'Registro no existe';				
			END IF;
		
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';		
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;


	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_FULTAC : ' CONCAT CAST(PARAM_FULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_HULTAC : ' CONCAT CAST(PARAM_HULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ROLL_SOL_WAR',
	pParametros,
	pRespuesta
	);


END
GO

--4.1.13	REQF013 – Rollback Enviar solicitud de warrant
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_ENVIO_WAR
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_SSTCOP CHAR(1),
	--IN PARAM_FULTAC NUMERIC(8,0),
	--IN PARAM_HULTAC NUMERIC(8,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF IFNULL(PARAM_CCMPN,'')='' OR 
	   IFNULL(PARAM_NPROPR,0)=0 OR 
	   --IFNULL(PARAM_FULTAC,0)=0 OR 
	   --IFNULL(PARAM_HULTAC,0)=0 OR 
	   IFNULL(PARAM_CULUSA,'')='' OR 
	   IFNULL(PARAM_SSTCOP,'')='' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;

--	IF LENGTH(CAST(PARAM_FULTAC AS VARCHAR(8)))<>8  OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),5,2) AS INTEGER)>12 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)>31 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN	
--		SET VAL=VAL+1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
--	END IF;
--	

--	IF PARAM_HULTAC<0 OR 
--	   PARAM_HULTAC>235959 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
--	   
--	   SET VAL=VAL+1;
--	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
--	END IF;	
	
	IF PARAM_CULUSA<>'WEBALMA' AND PARAM_CULUSA<>'WEBCASA' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido';		
	END IF;
	
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL=0) THEN
				UPDATE DC@ALMAPER.ZZWW10
				SET SSTCOP='',FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL=0;
				
				SET PARAM_PROCSTATUS=0;
                SET PARAM_PROCDESC='Registro modificado';	
            ELSE
            	SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC = PARAM_PROCDESC || 'Registro no existe';	
			END IF;
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL=0) THEN
				UPDATE DC@RNSLIB.ZZWW10
				SET SSTCOP='',FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL=0;
				
				SET PARAM_PROCSTATUS=0;
                SET PARAM_PROCDESC='Registro modificado';	
            ELSE
            	SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC = PARAM_PROCDESC || 'Registro no existe';	
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;			
	END IF;

	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SSTCOP : ' CONCAT PARAM_SSTCOP  CONCAT ' | ' CONCAT
					--'PARAM_FULTAC : ' CONCAT CAST(PARAM_FULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_HULTAC : ' CONCAT CAST(PARAM_HULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ROLL_ENVIO_WAR',
	pParametros,
	pRespuesta
	);


END
GO
--4.1.14	REQF014 –  Rollback Endoso de Warrant
--DROP PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_END_WAR
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_END_WAR
(
	IN PARAM_CCMPN CHAR(2),		
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_NOPRRL NUMERIC(10,0),
	--IN PARAM_FULTAC NUMERIC(8,0),
	--IN PARAM_HULTAC NUMERIC(8,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG	
	
	IF IFNULL(PARAM_CCMPN,'')='' OR 	   
	   --IFNULL(PARAM_FULTAC,0)=0 OR 
	   --IFNULL(PARAM_HULTAC,0)=0 OR 
	   IFNULL(PARAM_CULUSA,'')='' OR 
	   IFNULL(PARAM_NPROPR,0)=0 OR
	   IFNULL(PARAM_NOPRRL,0)=0
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;

--	IF LENGTH(CAST(PARAM_FULTAC AS VARCHAR(8)))<>8  OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),5,2) AS INTEGER)>12 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)>31 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN	
--		SET VAL=VAL+1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
--	END IF;


--	IF PARAM_HULTAC<0 OR 
--	   PARAM_HULTAC>235959 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
--	   
--	   SET VAL=VAL+1;
--	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
--	END IF;	   
	   
	IF PARAM_CULUSA<>'WEBALMA' AND PARAM_CULUSA<>'WEBCASA' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido';		
	END IF;
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN
		
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL) THEN
				UPDATE DC@ALMAPER.ZZWW10
				SET TGRCMP='', IMNTPR=0, FVNCWR=0, SSTCOP='R', FENDOS =0, HENDS =0, FACONF ='', TTSINT ='', TOFCN ='', NCNTBN ='', NDCEND ='', NGARAN ='',
					FULTAC =DC@RNSLIB.FECHA() , HULTAC =DC@RNSLIB.HORA() , CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				SET PARAM_PROCSTATUS=0;
                SET PARAM_PROCDESC='Registro modificado';	
				
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC = PARAM_PROCDESC || 'Registro no existe';
			END IF;
		
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL) THEN
				UPDATE DC@RNSLIB.ZZWW10
				SET TGRCMP='', IMNTPR=0, FVNCWR=0, SSTCOP='R', FENDOS =0, HENDS =0, FACONF ='', TTSINT ='', TOFCN ='', NCNTBN ='', NDCEND ='', NGARAN ='',
					FULTAC =DC@RNSLIB.FECHA() , HULTAC =DC@RNSLIB.HORA() , CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				SET PARAM_PROCSTATUS=0;
                SET PARAM_PROCDESC='Registro modificado';	
				
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC = PARAM_PROCDESC || 'Registro no existe';
			END IF;	
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;		
	END IF;

	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NOPRRL : ' CONCAT CAST(PARAM_NOPRRL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_FULTAC : ' CONCAT CAST(PARAM_FULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_HULTAC : ' CONCAT CAST(PARAM_HULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ROLL_END_WAR',
	pParametros,
	pRespuesta
	);

END 
GO
--4.1.15	REQF015 –  Rollback Registro firma depositante
--DROP PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_FIRMDEPO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_FIRMDEPO
(
	IN PARAM_CCMPN CHAR(2),	
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_NOPRCN NUMERIC(10,0),
	--IN PARAM_FULTAC NUMERIC(8,0),
	--IN PARAM_HULTAC NUMERIC(8,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG		
	IF IFNULL(PARAM_CCMPN,'')='' OR 	   
	   --IFNULL(PARAM_FULTAC,0)=0 OR 
	   --IFNULL(PARAM_HULTAC,0)=0 OR 
	   IFNULL(PARAM_CULUSA,'')='' OR 
	   IFNULL(PARAM_NOPRCN,0)=0 OR 
	   IFNULL(PARAM_NPROPR,0)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;	
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
--	IF LENGTH(CAST(PARAM_FULTAC AS VARCHAR(8)))<>8  OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),5,2) AS INTEGER)>12 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)>31 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN	
--		SET VAL=VAL+1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
--	END IF;
--	
--	IF PARAM_HULTAC<0 OR 
--	   PARAM_HULTAC>235959 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
--	   
--	   SET VAL=VAL+1;
--	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
--	END IF;		
	
	IF PARAM_CULUSA<>'WEBALMA' AND PARAM_CULUSA<>'WEBCASA' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido';		
	END IF;
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT90 WHERE NOPRCN =PARAM_NOPRCN) THEN
			
				UPDATE DC@ALMAPER.ZZWT90
				SET
					SFRMCL = ' ',  
					NFRMCL = 0, 
					NFRRCL = 0 ,  
					FULTAC = DC@RNSLIB.FECHA(),  
					HULTAC = DC@RNSLIB.HORA(),  
					CULUSA = PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
				
				IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND NOPRCN=PARAM_NOPRCN AND STPENT='C' ) THEN
					DELETE FROM DC@ALMAPER.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND NOPRCN=PARAM_NOPRCN AND STPENT='C';
				END IF;				
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
		
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT90 WHERE NOPRCN =PARAM_NOPRCN) THEN
			
				UPDATE DC@RNSLIB.ZZWT90
				SET
					SFRMCL = ' ',  
					NFRMCL = 0, 
					NFRRCL = 0 ,  
					FULTAC = DC@RNSLIB.FECHA(),  
					HULTAC = DC@RNSLIB.HORA(),  
					CULUSA = PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;
				
				IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND NOPRCN=PARAM_NOPRCN AND STPENT='C' ) THEN
					DELETE FROM DC@RNSLIB.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND NOPRCN=PARAM_NOPRCN AND STPENT='C';
				END IF;				
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro modificado';
			
			ELSE
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro no existe';
			END IF;
					
			
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;		
	END IF;	
	
	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_FULTAC : ' CONCAT CAST(PARAM_FULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_HULTAC : ' CONCAT CAST(PARAM_HULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ROLL_FIRMDEPO',
	pParametros,
	pRespuesta
	);	
	
END
GO
--4.1.16	REQF016 –  Rollback Registro firma rechazo depositante
--DROP PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_FIRMARECHAZOD
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_FIRMARECHAZOD
(
	IN PARAM_CCMPN CHAR(2),	
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_NOPRRL NUMERIC(10,0),
	--IN PARAM_FULTAC NUMERIC(8,0),
	--IN PARAM_HULTAC NUMERIC(8,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	--DECLARE NROFILAS INTEGER DEFAULT 0;
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG	
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
--	IF LENGTH(CAST(PARAM_FULTAC AS VARCHAR(8)))<>8  OR 
--		CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),5,2) AS INTEGER)>12 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)>31 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
--		SET VAL=VAL+1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
--	END IF;
--	
--	IF PARAM_HULTAC<0 OR 
--	   PARAM_HULTAC>235959 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
--	   
--	   SET VAL=VAL+1;
--	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
--	END IF;		
	
	IF PARAM_CULUSA<>'WEBALMA' AND PARAM_CULUSA<>'WEBCASA' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido';		
	END IF;


	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN
		
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL  =PARAM_NOPRRL) THEN
			
				UPDATE DC@ALMAPER.ZZWW10
				SET SSTCOP ='E', SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				UPDATE DC@ALMAPER.ZZWW28
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				UPDATE DC@ALMAPER.ZZWW24
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@ALMAPER.ZZWM06
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRRL ;
				
				UPDATE DC@ALMAPER.ZZWT28
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRRL;
				
				UPDATE DC@ALMAPER.ZZWT24
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRRL;
				
				UPDATE DC@ALMAPER.ZZWT90
				SET SFRMCL  ='', NFRMCL =0, NFRRCL=0, FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				DELETE FROM  DC@ALMAPER.ZZWT89
				WHERE NPROPR=PARAM_NPROPR AND STPENT ='C';
			
			END IF;
		
			
			
			--GET DIAGNOSTICS NROFILAS=ROW_COUNT;
			
			SET PARAM_PROCSTATUS=0;
            SET PARAM_PROCDESC='Rollback realizado';	
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR=PARAM_NPROPR AND NOPRRL  =PARAM_NOPRRL) THEN
			
				UPDATE DC@RNSLIB.ZZWW10
				SET SSTCOP ='E', SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				UPDATE DC@RNSLIB.ZZWW28
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND NOPRRL =PARAM_NOPRRL;
				
				UPDATE DC@RNSLIB.ZZWW24
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@RNSLIB.ZZWM06
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRRL ;
				
				UPDATE DC@RNSLIB.ZZWT28
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRRL;
				
				UPDATE DC@RNSLIB.ZZWT24
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRRL;
				
				UPDATE DC@RNSLIB.ZZWT90
				SET SFRMCL  ='', NFRMCL =0, NFRRCL=0, FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				DELETE FROM  DC@RNSLIB.ZZWT89
				WHERE NPROPR=PARAM_NPROPR AND STPENT ='C';
			
			END IF;
			
			--GET DIAGNOSTICS NROFILAS=ROW_COUNT;
			
			SET PARAM_PROCSTATUS=0;
            SET PARAM_PROCDESC='Rollback realizado';							
			
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;		
	END IF;		

	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NOPRRL : ' CONCAT CAST(PARAM_NOPRRL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_FULTAC : ' CONCAT CAST(PARAM_FULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_HULTAC : ' CONCAT CAST(PARAM_HULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100));-- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ROLL_FIRMARECHAZOD',
	pParametros,
	pRespuesta
	);	


END
GO
--4.1.17	REQF017 –  Rollback Registro firma primer endosatario 
--DROP PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_FIRMAPRIM_ENDO
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_FIRMAPRIM_ENDO
(
	IN PARAM_CCMPN CHAR(2),	
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_NOPRCN NUMERIC(10,0),
	--IN PARAM_FULTAC NUMERIC(8,0),
	--IN PARAM_HULTAC NUMERIC(8,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN

	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG		
	
	IF IFNULL(PARAM_CCMPN,'')='' OR 	   
	   --IFNULL(PARAM_FULTAC,0)=0 OR 
	   --IFNULL(PARAM_HULTAC,0)=0 OR 
	   IFNULL(PARAM_CULUSA,'')='' OR 
	   IFNULL(PARAM_NOPRCN,0)=0 OR 
	   IFNULL(PARAM_NPROPR,0)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;		

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
--	IF LENGTH(CAST(PARAM_FULTAC AS VARCHAR(8)))<>8  OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),5,2) AS INTEGER)>12 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)>31 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN	
--		SET VAL=VAL+1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
--	END IF;
--	
--	IF PARAM_HULTAC<0 OR 
--	   PARAM_HULTAC>235959 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
--	   
--	   SET VAL=VAL+1;
--	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
--	END IF;		
	
	IF PARAM_CULUSA<>'WEBALMA' AND PARAM_CULUSA<>'WEBCASA' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido';		
	END IF;
	
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN
		
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWT90 WHERE NOPRCN =PARAM_NOPRCN) THEN
			
				DELETE FROM DC@ALMAPER.ZZWT89
				WHERE NPROPR=PARAM_NPROPR AND STPENT ='E' AND NOPRCN=PARAM_NOPRCN;	
				
				UPDATE DC@ALMAPER.ZZWT90
				SET SFRMEN ='', NFRMEN = 0, NFRREN = 0, FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;	
			
			END IF;
		
			SET PARAM_PROCSTATUS=0;
            SET PARAM_PROCDESC='Rollback realizado';			
		
		ELSEIF PARAM_CCMPN='LZ' THEN
		
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWT90 WHERE NOPRCN =PARAM_NOPRCN) THEN
			
				DELETE FROM DC@RNSLIB.ZZWT89
				WHERE NPROPR=PARAM_NPROPR AND STPENT ='E' AND NOPRCN=PARAM_NOPRCN;	
				
				UPDATE DC@RNSLIB.ZZWT90
				SET SFRMEN ='', NFRMEN = 0, NFRREN = 0, FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN =PARAM_NOPRCN;	
			
			END IF;	
		
			SET PARAM_PROCSTATUS=0;
            SET PARAM_PROCDESC='Rollback realizado';					
		
		ELSE
		
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';			
		
		END IF;
	
	
	ELSE
	
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	
	END IF;

	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_FULTAC : ' CONCAT CAST(PARAM_FULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_HULTAC : ' CONCAT CAST(PARAM_HULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA					
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ROLL_FIRMAPRIM_ENDO',
	pParametros,
	pRespuesta
	);	


END
GO

--4.1.18	REQF018 –  Rollback Registro firma endosatario 
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_REG_FIRMA_ENDOSATARIO
(
	IN PARAM_CCMPN CHAR(2),	
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_NOPRCN NUMERIC(10,0),
	--IN PARAM_FULTAC NUMERIC(8,0),
	--IN PARAM_HULTAC NUMERIC(8,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN

	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAM_SSTCOP CHAR(1) DEFAULT '';
	
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG	
	
	IF IFNULL(PARAM_CCMPN,'')='' OR 	   
	   --IFNULL(PARAM_FULTAC,0)=0 OR 
	   --IFNULL(PARAM_HULTAC,0)=0 OR 
	   IFNULL(PARAM_CULUSA,'')='' OR 
	   IFNULL(PARAM_NOPRCN,0)=0 OR 
	   IFNULL(PARAM_NPROPR,0)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;		
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
--	IF LENGTH(CAST(PARAM_FULTAC AS VARCHAR(8)))<>8  OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),5,2) AS INTEGER)>12 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)>31 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN	
--		SET VAL=VAL+1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
--	END IF;
--	
--	IF PARAM_HULTAC<0 OR 
--	   PARAM_HULTAC>235959 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
--	   
--	   SET VAL=VAL+1;
--	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
--	END IF;		
	
	IF PARAM_CULUSA<>'WEBALMA' AND PARAM_CULUSA<>'WEBCASA' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido';		
	END IF;
	
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN
		
		
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR =PARAM_NPROPR AND SSTCOP <>'G') THEN
			
				UPDATE DC@ALMAPER.ZZWW10
				SET SSTCOP ='E', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND SSTCOP <>'G';
				
				UPDATE DC@ALMAPER.ZZWT90
				SET SFRMBN ='', NFRMBN =0, NFRRBN =0, FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA =PARAM_CULUSA 
				WHERE NOPRCN =PARAM_NOPRCN ;
								
				DELETE FROM DC@ALMAPER.ZZWT89
				WHERE NPROPR=PARAM_NPROPR AND STPENT ='B' AND NOPRCN=PARAM_NOPRCN;
				
				SET PARAM_PROCSTATUS=0;
            	SET PARAM_PROCDESC='Rollback realizado';
				
			END IF;
		
		ELSEIF PARAM_CCMPN='LZ' THEN
		
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR =PARAM_NPROPR AND SSTCOP <>'G') THEN
			
				UPDATE DC@RNSLIB.ZZWW10
				SET SSTCOP ='E', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR AND SSTCOP <>'G';
				
				UPDATE DC@RNSLIB.ZZWT90
				SET SFRMBN ='', NFRMBN =0, NFRRBN =0, FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA =PARAM_CULUSA 
				WHERE NOPRCN =PARAM_NOPRCN ;
								
				DELETE FROM DC@RNSLIB.ZZWT89
				WHERE NPROPR=PARAM_NPROPR AND STPENT ='B' AND NOPRCN=PARAM_NOPRCN;
				
				SET PARAM_PROCSTATUS=0;
            	SET PARAM_PROCDESC='Rollback realizado';
				
			END IF;
		
		ELSE
		
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';			
		
		END IF;
	
	
	ELSE
	
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	
	END IF;

	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_FULTAC : ' CONCAT CAST(PARAM_FULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_HULTAC : ' CONCAT CAST(PARAM_HULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA					
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ROLL_REG_FIRMA_ENDOSATARIO',
	pParametros,
	pRespuesta
	);	


END
GO

--4.1.19	REQF019 – Rollback Registro firma rechazo endosatario
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_ROLL_REGFIRMRECHDEND
(
	IN PARAM_CCMPN CHAR(2),	
	IN PARAM_NPROPR NUMERIC(10,0),
	IN PARAM_NOPRCN NUMERIC(10,0),
	--IN PARAM_FULTAC NUMERIC(8,0),
	--IN PARAM_HULTAC NUMERIC(8,0),
	IN PARAM_CULUSA CHAR(10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000) 
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
--	
--	IF LENGTH(CAST(PARAM_FULTAC AS VARCHAR(8)))<>8  OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),5,2) AS INTEGER)>12 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)>31 OR CAST(SUBSTR(CAST(PARAM_FULTAC AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN	
--		SET VAL=VAL+1;
--		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
--	END IF;
--	
--	IF PARAM_HULTAC<0 OR 
--	   PARAM_HULTAC>235959 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
--	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HULTAC AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
--	   
--	   SET VAL=VAL+1;
--	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
--	END IF;		
	
	IF PARAM_CULUSA<>'WEBALMA' AND PARAM_CULUSA<>'WEBCASA' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido';		
	END IF;


	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN
		
			IF EXISTS (SELECT * FROM DC@ALMAPER.ZZWW10 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@ALMAPER.ZZWW10
				SET SSTCOP ='E', SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;	
			
				UPDATE DC@ALMAPER.ZZWW28
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@ALMAPER.ZZWW24
				SET SESTRG='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@ALMAPER.ZZWM06
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRCN;
				
				UPDATE DC@ALMAPER.ZZWT28
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRCN;
			
				UPDATE DC@ALMAPER.ZZWT24
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRCN;
			
				UPDATE DC@ALMAPER.ZZWT90
				SET SFRMCL ='',NFRMCL =0, NFRRCL =0, FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
			
				DELETE FROM DC@ALMAPER.ZZWT89			
				WHERE NPROPR=PARAM_NPROPR AND STPENT ='B' AND NOPRCN=PARAM_NOPRCN;
				
				SET PARAM_PROCSTATUS=0;
            	SET PARAM_PROCDESC='Rollback realizado';
			
			END IF;
		
			
		
		ELSEIF PARAM_CCMPN='LZ' THEN
		
			IF EXISTS (SELECT * FROM DC@RNSLIB.ZZWW10 WHERE NPROPR =PARAM_NPROPR ) THEN
			
				UPDATE DC@RNSLIB.ZZWW10
				SET SSTCOP ='E', SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;	
			
				UPDATE DC@RNSLIB.ZZWW28
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@RNSLIB.ZZWW24
				SET SESTRG='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
				
				UPDATE DC@RNSLIB.ZZWM06
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRCN;
				
				UPDATE DC@RNSLIB.ZZWT28
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRCN;
			
				UPDATE DC@RNSLIB.ZZWT24
				SET SESTRG ='A', FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NOPRCN=PARAM_NOPRCN;
			
				UPDATE DC@RNSLIB.ZZWT90
				SET SFRMCL ='',NFRMCL =0, NFRRCL =0, FULTAC=DC@RNSLIB.FECHA(), HULTAC=DC@RNSLIB.HORA(), CULUSA=PARAM_CULUSA
				WHERE NPROPR=PARAM_NPROPR;
			
				DELETE FROM DC@RNSLIB.ZZWT89			
				WHERE NPROPR=PARAM_NPROPR AND STPENT ='B' AND NOPRCN=PARAM_NOPRCN;
				
				SET PARAM_PROCSTATUS=0;
            	SET PARAM_PROCDESC='Rollback realizado';
			
			END IF;
		
		END IF;
	
	
	ELSE
	
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	
	END IF;

	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRRL  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_FULTAC : ' CONCAT CAST(PARAM_FULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					--'PARAM_HULTAC : ' CONCAT CAST(PARAM_HULTAC  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA					
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_ROLL_REGFIRMRECHDEND',
	pParametros,
	pRespuesta
	);		


END
GO
--DROP PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_WAR_CAB
--4.2.1	REQFE001 –   Consulta warrant generado
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_WAR_GEN
(
	IN PARAM_CCMPN CHAR(2),	
	IN PARAM_NPROPR NUMERIC(10,0)	
)
RESULT SET 1
LANGUAGE SQL
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAM_PROCDESC VARCHAR(250) DEFAULT '';
	
	DECLARE STRSQL01 VARCHAR(10000) DEFAULT '';
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	DECLARE CU_01 SCROLL CURSOR WITH RETURN FOR S1 ; 
	
	IF 
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	

	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN		

				SET STRSQL01=
					'SELECT ' CONCAT  
					'A3.NPROPR, A1.CCMPN, A1.NWRRNT, A1.NOPRCN, A1.NCRTDP, A1.CADNA, A1.NANDCL, A1.NPDDUA, A1.FPRMVN, A1.FVNCMX, A1.SSTCOP,' CONCAT
					'A2.NITEM, A2.NSRIE1, A2.CDPRDC, A2.CFMLPR, A2.QCNTIT, A2.CUNDCN, A2.QPSOIT, A2.CUNDPS, A2.IVUNIT, A2.IVTOIT, A2.STPCNS, A2.SINSPR' CONCAT
					' FROM DC@ALMAPER.ZZWM06 A1 ' CONCAT
					' INNER JOIN DC@ALMAPER.ZZWT28 A2 ON A1.NOPRCN=A2.NOPRCN ' CONCAT
					' INNER JOIN DC@ALMAPER.ZZWW10 A3 ON A3.NOPRRL=A2.NOPRCN ' CONCAT
					' WHERE A3.NPROPR=' CONCAT CAST(IFNULL(PARAM_NPROPR,0) AS VARCHAR(100)) CONCAT ' AND A3.NOPRRL>0';				
			
		ELSEIF PARAM_CCMPN='LZ' THEN

				SET STRSQL01=
					'SELECT ' CONCAT  
					'A3.NPROPR, A1.CCMPN, A1.NWRRNT, A1.NOPRCN, A1.NCRTDP, A1.CADNA, A1.NANDCL, A1.NPDDUA, A1.FPRMVN, A1.FVNCMX, A1.SSTCOP,' CONCAT
					'A2.NITEM, A2.NSRIE1, A2.CDPRDC, A2.CFMLPR, A2.QCNTIT, A2.CUNDCN, A2.QPSOIT, A2.CUNDPS, A2.IVUNIT, A2.IVTOIT, A2.STPCNS, A2.SINSPR' CONCAT
					' FROM DC@RNSLIB.ZZWM06 A1 ' CONCAT
					' INNER JOIN DC@RNSLIB.ZZWT28 A2 ON A1.NOPRCN=A2.NOPRCN ' CONCAT
					' INNER JOIN DC@RNSLIB.ZZWW10 A3 ON A3.NOPRRL=A2.NOPRCN ' CONCAT
					' WHERE A3.NPROPR=' CONCAT CAST(IFNULL(PARAM_NPROPR,0) AS VARCHAR(100)) CONCAT ' AND A3.NOPRRL>0';	

		ELSE	
			SET STRSQL01='SELECT ''NO DATA'' RESULT  FROM SYSIBM.SYSDUMMY1';
			
		END IF;
	
	ELSE
		SET STRSQL01='SELECT 1 AS TIPO, ' CONCAT '''' CONCAT PARAM_PROCDESC CONCAT ''' AS MENSAJE' CONCAT '  FROM SYSIBM.SYSDUMMY1';	
	END IF;
	
	PREPARE S1 FROM STRSQL01;
	OPEN CU_01;
	
	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000))									
					;
	--SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	SET pRespuesta='';
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_WAR_CAB',
	pParametros,
	pRespuesta
	);	

END
GO

--REQFE002 –   Consulta Firmantes Almacenera
--DROP PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_FIR_ALM
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_FIR_ALM
(
	IN PARAM_CCMPN		CHAR (2),
	IN PARAM_NPROPR		NUMERIC (10, 0),
	IN PARAM_NOPRCN		NUMERIC (10,0)
)
RESULT SET 1
LANGUAGE SQL
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAM_PROCDESC VARCHAR(250) DEFAULT '';
	
	DECLARE STRSQL01 VARCHAR(10000) DEFAULT '';
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	DECLARE CU_01 SCROLL CURSOR WITH RETURN FOR S1 ; 
	
	IF 
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_NOPRCN,0)=0
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN		

				SET STRSQL01=
					'SELECT ' CONCAT
					'A1.NPROPR, A1.CRPRS, A1.SFRMRP, A1.FFRMRP, A1.HFRMRP,' CONCAT
					'A2.TRPRS ' CONCAT
					'FROM DC@ALMAPER.ZZWT89 A1 ' CONCAT
					'INNER JOIN DC@ALMAPER.ZZWT88 A2 ON A1.STPENT=A2.STPENT AND A1.CENTD=A2.CENTD AND A1.CRPRS =A2.CRPRS ' CONCAT
					'WHERE A1.NPROPR=' CONCAT CAST(IFNULL(PARAM_NPROPR,0) AS VARCHAR(100)) CONCAT ' AND A1.NOPRCN=' CONCAT CAST(IFNULL(PARAM_NOPRCN,0) AS VARCHAR(100));
			
		ELSEIF PARAM_CCMPN='LZ' THEN

				SET STRSQL01=
					'SELECT ' CONCAT
					'A1.NPROPR, A1.CRPRS, A1.SFRMRP, A1.FFRMRP, A1.HFRMRP,' CONCAT
					'A2.TRPRS ' CONCAT
					'FROM DC@RNSLIB.ZZWT89 A1 ' CONCAT
					'INNER JOIN DC@RNSLIB.ZZWT88 A2 ON A1.STPENT=A2.STPENT AND A1.CENTD=A2.CENTD AND A1.CRPRS =A2.CRPRS ' CONCAT
					'WHERE A1.NPROPR=' CONCAT CAST(IFNULL(PARAM_NPROPR,0) AS VARCHAR(100)) CONCAT ' AND A1.NOPRCN=' CONCAT CAST(IFNULL(PARAM_NOPRCN,0) AS VARCHAR(100));	

		ELSE	
			SET STRSQL01='SELECT ''NO DATA'' RESULT  FROM SYSIBM.SYSDUMMY1';
			
		END IF;
	
	ELSE
		SET STRSQL01='SELECT 1 AS TIPO, ' CONCAT '''' CONCAT PARAM_PROCDESC CONCAT ''' AS MENSAJE' CONCAT '  FROM SYSIBM.SYSDUMMY1';	
	END IF;
	
	PREPARE S1 FROM STRSQL01;
	OPEN CU_01;
	
	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000))
					;
	--SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	SET pRespuesta='';
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_FIR_ALM',
	pParametros,
	pRespuesta
	);


END
GO

--REQFE003 –   Consulta Warrants Vigentes
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_WAR_VIG
(
	IN PARAM_CCMPN CHAR(2)
)
RESULT SET 1
LANGUAGE SQL
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAM_PROCDESC VARCHAR(250) DEFAULT '';
	
	DECLARE STRSQL01 VARCHAR(10000) DEFAULT '';
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	DECLARE CU_01 SCROLL CURSOR WITH RETURN FOR S1 ; 
	
	IF 
		IFNULL(PARAM_CCMPN,'')='' 
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN		

				SET STRSQL01=
					'SELECT ' CONCAT
					'NOPRCN, NWRRNT, NCRTDP, CTPOAL, CALMCM, CCLNT, CFNNC, FINGR	, FPRMVN, FVNCMX, CMNDA	, SSGRPR, CCMPSG, ISLVFN, ISLVFS, SCNINP, CRGMN ' CONCAT
					'FROM DC@ALMAPER.ZZWM06 ' CONCAT
					'WHERE SESTRG=''A'' AND SSTCOP =''G'' AND FEMRCD >0';
			
		ELSEIF PARAM_CCMPN='LZ' THEN

				SET STRSQL01=
					'SELECT ' CONCAT
					'NOPRCN, NWRRNT, NCRTDP, CTPOAL, CALMCM, CCLNT, CFNNC, FINGR	, FPRMVN, FVNCMX, CMNDA	, SSGRPR, CCMPSG, ISLVFN, ISLVFS, SCNINP, CRGMN ' CONCAT
					'FROM DC@RNSLIB.ZZWM06 ' CONCAT
					'WHERE SESTRG=''A'' AND SSTCOP =''G'' AND FEMRCD >0';	

		ELSE	
			SET STRSQL01='SELECT ''NO DATA'' RESULT  FROM SYSIBM.SYSDUMMY1';
			
		END IF;
	
	ELSE
		SET STRSQL01='SELECT 1 AS TIPO, ' CONCAT '''' CONCAT PARAM_PROCDESC CONCAT ''' AS MENSAJE' CONCAT '  FROM SYSIBM.SYSDUMMY1';	
	END IF;
	

	PREPARE S1 FROM STRSQL01;
	OPEN CU_01;
	
	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN
					;
	--SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	SET pRespuesta='';
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_WAR_VIG',
	pParametros,
	pRespuesta
	);


END
GO
--REQFE004 –   Relación datos del Warrant
--CABECERA DE OPERACIONES 
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_REL_DATOS_WAR_CAB
(
	IN PARAM_CCMPN		CHAR (2),
	IN PARAM_STPQRY		CHAR(1),
	IN PARAM_CODQRY		NUMERIC (10,0)
)
RESULT SET 1
LANGUAGE SQL
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAM_PROCDESC VARCHAR(250) DEFAULT '';
	
	DECLARE STRSQL01 VARCHAR(10000) DEFAULT '';
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	DECLARE CU_01 SCROLL CURSOR WITH RETURN FOR S1 ; 
	
	IF 
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_STPQRY,'')='' OR
		IFNULL(PARAM_CODQRY,0)=0
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF PARAM_STPQRY NOT IN ('C','B','O','P') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag tipo Búsqueda  no válido, ';	
	END IF;

	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN				
		
			SET STRSQL01=
				'SELECT ' CONCAT
				'A1.NPROPR, A1.IMNTPR, A1.NGARAN, A1.FACONF, A1.TTSINT, A1.ZTSINT , A1.TGRCMP, A1.TOFCN, A1.NCNTBN, A1.NDCEND, A1.TLGEND, A1.NENDS, A1.FENDS,' CONCAT
				'A2.NOPRCN, A2.NWRRNT, A2.NCRTDP, A2.CCLNT, A2.CFNNC, A2.CTOPRC, A2.CTPOAL, A2.CALMCM, A2.CRGMN, A2.CADNA, A2.NANDCL, A2.NPDDUA, A2.CMNDA,' CONCAT
				'A2.PALMFN, A2.FPRMVN, A2.FVNCMX, A2.IVLPIS, A2.ISLVFN, A2.SSGRPR, A2.CCMPSG, A2.CAPLVL, A2.SPRCB, A2.SCNINP, A2.SORLBC, A2.SSTCOP, A2.SESTRG ' CONCAT
				'FROM DC@ALMAPER.ZZWW10 A1 ' CONCAT
				'INNER JOIN DC@ALMAPER.ZZWM06 A2 ON A1.NOPRRL=A2.NOPRCN ';				
		
			IF PARAM_STPQRY <>'P' THEN
				SET STRSQL01=STRSQL01 CONCAT 							
							'WHERE A2.SESTRG=''A'' AND A2.SSTCOP<>''G'' AND A2.FEMRCD=0 ';
				IF PARAM_STPQRY='C' THEN
					SET STRSQL01=STRSQL01 CONCAT ' AND A2.CCLNT =' CONCAT CAST(IFNULL(PARAM_CODQRY,0) AS VARCHAR(100));					
				ELSEIF PARAM_STPQRY='B' THEN
					SET STRSQL01=STRSQL01 CONCAT ' AND A2.CFNNC =' CONCAT CAST(IFNULL(PARAM_CODQRY,0) AS VARCHAR(100));
				ELSE
					SET STRSQL01=STRSQL01 CONCAT ' AND A2.NOPRCN =' CONCAT CAST(IFNULL(PARAM_CODQRY,0) AS VARCHAR(100));
				END IF;
			ELSE
				SET STRSQL01=STRSQL01 CONCAT 							 
							 ' WHERE A1.NPROPR =' CONCAT CAST(IFNULL(PARAM_CODQRY,0) AS VARCHAR(100));			
			END IF;			
		ELSEIF PARAM_CCMPN='LZ' THEN
			SET STRSQL01=
				'SELECT ' CONCAT
				'A1.NPROPR, A1.IMNTPR, A1.NGARAN, A1.FACONF, A1.TTSINT, A1.ZTSINT , A1.TGRCMP, A1.TOFCN, A1.NCNTBN, A1.NDCEND, A1.TLGEND, A1.NENDS, A1.FENDS,' CONCAT
				'A2.NOPRCN, A2.NWRRNT, A2.NCRTDP, A2.CCLNT, A2.CFNNC, A2.CTOPRC, A2.CTPOAL, A2.CALMCM, A2.CRGMN, A2.CADNA, A2.NANDCL, A2.NPDDUA, A2.CMNDA,' CONCAT
				'A2.PALMFN, A2.FPRMVN, A2.FVNCMX, A2.IVLPIS, A2.ISLVFN, A2.SSGRPR, A2.CCMPSG, A2.CAPLVL, A2.SPRCB, A2.SCNINP, A2.SORLBC, A2.SSTCOP, A2.SESTRG ' CONCAT
				'FROM DC@RNSLIB.ZZWW10 A1 ' CONCAT
				'INNER JOIN DC@RNSLIB.ZZWM06 A2 ON A1.NOPRRL=A2.NOPRCN ';				
		
			IF PARAM_STPQRY <>'P' THEN
				SET STRSQL01=STRSQL01 CONCAT 							
							'WHERE A2.SESTRG=''A'' AND A2.SSTCOP<>''G'' AND A2.FEMRCD=0 ';
				IF PARAM_STPQRY='C' THEN
					SET STRSQL01=STRSQL01 CONCAT ' AND A2.CCLNT =' CONCAT CAST(IFNULL(PARAM_CODQRY,0) AS VARCHAR(100));					
				ELSEIF PARAM_STPQRY='B' THEN
					SET STRSQL01=STRSQL01 CONCAT ' AND A2.CFNNC =' CONCAT CAST(IFNULL(PARAM_CODQRY,0) AS VARCHAR(100));
				ELSE
					SET STRSQL01=STRSQL01 CONCAT ' AND A2.NOPRCN =' CONCAT CAST(IFNULL(PARAM_CODQRY,0) AS VARCHAR(100));
				END IF;
			ELSE
				SET STRSQL01=STRSQL01 CONCAT 							 
							 ' WHERE A1.NPROPR =' CONCAT CAST(IFNULL(PARAM_CODQRY,0) AS VARCHAR(100));
			
			END IF;						
		ELSE	
			SET STRSQL01='SELECT ''NO DATA'' RESULT  FROM SYSIBM.SYSDUMMY1';
			
		END IF;
	
	ELSE
		SET STRSQL01='SELECT 1 AS TIPO, ' CONCAT '''' CONCAT PARAM_PROCDESC CONCAT ''' AS MENSAJE' CONCAT '  FROM SYSIBM.SYSDUMMY1';	
	END IF;
	
	
	PREPARE S1 FROM STRSQL01;
	OPEN CU_01;
	
	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_STPQRY : ' CONCAT PARAM_STPQRY  CONCAT ' | ' CONCAT
					'PARAM_CODQRY : ' CONCAT CAST(PARAM_CODQRY  AS VARCHAR(2000))
					;
	--SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	SET pRespuesta='';
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_REL_DATOS_WAR_CAB',
	pParametros,
	pRespuesta
	);
	

END
GO
--DETALLE DE OPERACIONES 
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_REL_DATOS_WAR_DET
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NOPRCN NUMERIC(10,0)
)
RESULT SET 1
LANGUAGE SQL
BEGIN
DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAM_PROCDESC VARCHAR(250) DEFAULT '';
	
	DECLARE STRSQL01 VARCHAR(10000) DEFAULT '';
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	DECLARE CU_01 SCROLL CURSOR WITH RETURN FOR S1 ; 
	
	IF
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_NOPRCN,0)=0 
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN		

				SET STRSQL01=
					'SELECT ' CONCAT
					'NOPRCN, NITEM, NORDS1, CDPRDC, CFMLPR, CTPOP1, CSCTEC, NSRIE1, QCNTIT, CUNDCN, QPSOIT, CUNDPS, IVUNIT, IVTOIT,' CONCAT
					'STPCNS, QMRCCM, QSLCNF, QPSMRC, QSLPSF, IVLRCM, ISLDFN, SINSPR, NCHSRC, TCLRUN, TESTL, TMDLO, TDSCCR ' CONCAT					
					'FROM DC@ALMAPER.ZZWT28 ' CONCAT					
					'WHERE NOPRCN=' CONCAT CAST(IFNULL(PARAM_NPROPR,0) AS VARCHAR(100));
			
		ELSEIF PARAM_CCMPN='LZ' THEN
				SET STRSQL01=
					'SELECT ' CONCAT
					'NOPRCN, NITEM, NORDS1, CDPRDC, CFMLPR, CTPOP1, CSCTEC, NSRIE1, QCNTIT, CUNDCN, QPSOIT, CUNDPS, IVUNIT, IVTOIT,' CONCAT
					'STPCNS, QMRCCM, QSLCNF, QPSMRC, QSLPSF, IVLRCM, ISLDFN, SINSPR, NCHSRC, TCLRUN, TESTL, TMDLO, TDSCCR ' CONCAT					
					'FROM DC@RNSLIB.ZZWT28 ' CONCAT					
					'WHERE NOPRCN=' CONCAT CAST(IFNULL(PARAM_NPROPR,0) AS VARCHAR(100));
					

		ELSE	
			SET STRSQL01='SELECT ''NO DATA'' RESULT  FROM SYSIBM.SYSDUMMY1';
			
		END IF;
	
	ELSE
		SET STRSQL01='SELECT 1 AS TIPO, ' CONCAT '''' CONCAT PARAM_PROCDESC CONCAT ''' AS MENSAJE' CONCAT '  FROM SYSIBM.SYSDUMMY1';	
	END IF;

	PREPARE S1 FROM STRSQL01;
	OPEN CU_01;
	
	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT					
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000))
					;
	--SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	SET pRespuesta='';
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_REL_DATOS_WAR_DET',
	pParametros,
	pRespuesta
	);


END
GO
--DESCRIPCION DETALLE DE OPERACIONES 
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_REL_DATOS_WAR_DESC_DET_OPE
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_NOPRCN NUMERIC(10,0),
	IN PARAM_NITEM NUMERIC(5,0)
)
RESULT SET 1
LANGUAGE SQL
BEGIN
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAM_PROCDESC VARCHAR(250) DEFAULT '';
	
	DECLARE STRSQL01 VARCHAR(10000) DEFAULT '';
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	DECLARE CU_01 SCROLL CURSOR WITH RETURN FOR S1 ;
	
	IF 
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_NITEM,0)=0
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN		

				SET STRSQL01=
					'SELECT ' CONCAT
					'NOPRCN, NITEM, NCRRDT, TDSCIT ' CONCAT									
					'FROM DC@ALMAPER.ZZWT24 ' CONCAT					
					'WHERE NOPRCN=' CONCAT CAST(IFNULL(PARAM_NOPRCN,0) AS VARCHAR(100)) CONCAT ' AND NITEM=' CONCAT CAST(IFNULL(PARAM_NITEM,0) AS VARCHAR(100));
			
		ELSEIF PARAM_CCMPN='LZ' THEN
				SET STRSQL01=
					'SELECT ' CONCAT
					'NOPRCN, NITEM, NCRRDT, TDSCIT ' CONCAT									
					'FROM DC@RNSLIB.ZZWT24 ' CONCAT					
					'WHERE NOPRCN=' CONCAT CAST(IFNULL(PARAM_NOPRCN,0) AS VARCHAR(100)) CONCAT ' AND NITEM=' CONCAT CAST(IFNULL(PARAM_NITEM,0) AS VARCHAR(100));				
		ELSE	
			SET STRSQL01='SELECT ''NO DATA'' RESULT  FROM SYSIBM.SYSDUMMY1';
			
		END IF;
	
	ELSE
		SET STRSQL01='SELECT 1 AS TIPO, ' CONCAT '''' CONCAT PARAM_PROCDESC CONCAT ''' AS MENSAJE' CONCAT '  FROM SYSIBM.SYSDUMMY1';	
	END IF;

	PREPARE S1 FROM STRSQL01;
	OPEN CU_01;
	
	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_NITEM : ' CONCAT CAST(PARAM_NITEM  AS VARCHAR(2000))
					;
	--SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	SET pRespuesta='';
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_REL_DATOS_WAR_DESC_DET_OPE',
	pParametros,
	pRespuesta
	);

END
GO

--REQFE005 –   Warrant Generados SGO
--CABECERA DE OPERACIONES 
CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_GEN_SGO_CAB
(
	IN PARAM_CCMPN CHAR(2),
	IN PARAM_CCLNT NUMERIC(6,0)
)
RESULT SET 1
LANGUAGE SQL
BEGIN
	DECLARE VAL INTEGER DEFAULT 0;
	DECLARE PARAM_PROCDESC VARCHAR(250) DEFAULT '';
	
	DECLARE STRSQL01 VARCHAR(10000) DEFAULT '';
	
	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	DECLARE CU_01 SCROLL CURSOR WITH RETURN FOR S1 ;
	
	IF
		IFNULL(PARAM_CCMPN,'')='' OR
		IFNULL(PARAM_CCLNT,0)=0
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;


	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF VAL=0 THEN
	
		IF PARAM_CCMPN='AM' THEN		

				SET STRSQL01=
					'SELECT ' CONCAT
					'A1.NPROPR, ' CONCAT									
					'A2.NWRRNT, A2.NOPRCN, A2.NCRTDP, A2.CCLNT, A2.CFNNC, A2.CRGMN, A2.SCNINP, A2.SIMPR, A2.CTPOAL, A2.CALMCM, A2.CMNDA, A2.SPRCB ' CONCAT
					'FROM DC@ALMAPER.ZZWW10 A1 ' CONCAT	
					'INNER JOIN DC@ALMAPER.ZZWM06 A2 ON A1.NOPRRL=A2.NOPRCN ' CONCAT	
					'WHERE A2.CCLNT=' CONCAT CAST(IFNULL(PARAM_CCLNT,0) AS VARCHAR(100)) CONCAT 'AND A2.SESTRG=''A'' AND A1.USRCRT NOT IN (''WEBALMA'', ''WEBCASA'')';
			
		ELSEIF PARAM_CCMPN='LZ' THEN
				SET STRSQL01=
					'SELECT ' CONCAT
					'A1.NPROPR, ' CONCAT									
					'A2.NWRRNT, A2.NOPRCN, A2.NCRTDP, A2.CCLNT, A2.CFNNC, A2.CRGMN, A2.SCNINP, A2.SIMPR, A2.CTPOAL, A2.CALMCM, A2.CMNDA, A2.SPRCB ' CONCAT
					'FROM DC@RNSLIB.ZZWW10 A1 ' CONCAT	
					'INNER JOIN DC@RNSLIB.ZZWM06 A2 ON A1.NOPRRL=A2.NOPRCN ' CONCAT	
					'WHERE A2.CCLNT=' CONCAT CAST(IFNULL(PARAM_CCLNT,0) AS VARCHAR(100)) CONCAT 'AND A2.SESTRG=''A'' AND A1.USRCRT NOT IN (''WEBALMA'', ''WEBCASA'')';		
		ELSE	
			SET STRSQL01='SELECT ''NO DATA'' RESULT  FROM SYSIBM.SYSDUMMY1';
			
		END IF;
	
	ELSE
		SET STRSQL01='SELECT 1 AS TIPO, ' CONCAT '''' CONCAT PARAM_PROCDESC CONCAT ''' AS MENSAJE' CONCAT '  FROM SYSIBM.SYSDUMMY1';	
	END IF;

	PREPARE S1 FROM STRSQL01;
	OPEN CU_01;
	
	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_CCLNT : ' CONCAT CAST(PARAM_CCLNT  AS VARCHAR(2000))					
					;
	--SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)) CONCAT '|' CONCAT PARAM_PROCDESC;
	SET pRespuesta='';
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_CONSULTAR_GEN_SGO_CAB',
	pParametros,
	pRespuesta
	);

END


---------------------------------------------------------------------------------------------------------------------------------------------------------