CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_ENDO_REPXOPE
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_STPENT	NUMERIC (5,0),
	IN PARAM_CENTD	NUMERIC (6,0),
	IN PARAM_CRPRS	CHAR (5),
	IN PARAM_NOPRCN	NUMERIC (10, 0),
	IN PARAM_SFRMRP	CHAR (1),
	IN PARAM_FFRMRP	NUMERIC (8,0),
	IN PARAM_HFRMRP	NUMERIC (6,0),
	IN PARAM_SESTRG	CHAR (1) ,
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000)		
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF 
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_STPENT,0)=0 OR
		IFNULL(PARAM_CENTD	,0)=0 OR
		IFNULL(PARAM_CRPRS	,'')='' OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_SFRMRP,'')='' OR
		IFNULL(PARAM_FFRMRP,0)=0 OR
		IFNULL(PARAM_HFRMRP,-1)=-1 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor, ';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido, ';	
	END IF;
	
	IF PARAM_STPENT<>'B' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Numero de Item no válido, ';	
	END IF;

	IF PARAM_CRPRS BETWEEN '00' AND '99999' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código representante no válido, ';	
	END IF;

	IF PARAM_SFRMRP<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido, ';	
	END IF;
	
	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido, ';	
	END IF;
	
	IF LENGTH(CAST(PARAM_FFRMRP AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HFRMRP<0 OR 
	   PARAM_HFRMRP>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;	

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF NOT EXISTS (SELECT * FROM DC@ALMAPER.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS=PARAM_CRPRS) THEN
			
				INSERT INTO DC@ALMAPER.ZZWT89(
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF NOT EXISTS (SELECT * FROM DC@RNSLIB.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS=PARAM_CRPRS) THEN
			
				INSERT INTO DC@RNSLIB.ZZWT89(
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_STPENT : ' CONCAT CAST(PARAM_STPENT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CENTD : ' CONCAT CAST(PARAM_CENTD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CRPRS : ' CONCAT PARAM_CRPRS  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SFRMRP : ' CONCAT PARAM_SFRMRP  CONCAT ' | ' CONCAT
					'PARAM_FFRMRP : ' CONCAT CAST(PARAM_FFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_HFRMRP : ' CONCAT CAST(PARAM_HFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_ENDO_REPXOPE',
	pParametros,
	pRespuesta
	);	

END

CREATE PROCEDURE INTEGRASGO.SP_INTSGO_GEN_LISTADO_TIPOALMACEN()
RESULT SET 1
LANGUAGE SQL
BEGIN

DECLARE CR CURSOR FOR
SELECT CTPOAL,TALMC,AALMC,SESTRG  FROM DC@RNSLIB.ZZWM16;
OPEN CR;

	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_GEN_LISTADO_TIPOALMACEN',
	'',
	''
	);

END

CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_PRIMENDO_REPOPE
(
	IN PARAM_CCMPN CHAR(2) , 
	IN PARAM_NPROPR NUMERIC(10, 0) , 
	IN PARAM_STPENT NUMERIC(5, 0) , 
	IN PARAM_CENTD NUMERIC(6, 0) , 
	IN PARAM_CRPRS CHAR(5) , 
	IN PARAM_NOPRCN NUMERIC(10, 0) , 
	IN PARAM_SFRMRP CHAR(1) , 
	IN PARAM_FFRMRP NUMERIC(8, 0) , 
	IN PARAM_HFRMRP NUMERIC(6, 0) , 
	IN PARAM_SESTRG CHAR(1) , 
	IN PARAM_CULUSA CHAR(10) , 
	INOUT PARAM_PROCSTATUS INTEGER,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	IF
		IFNULL(PARAM_CCMPN	,'')='' OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_STPENT,0)=0 OR
		IFNULL(PARAM_CENTD	,0)=0 OR
		IFNULL(PARAM_CRPRS	,'')='' OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_SFRMRP,'')='' OR
		IFNULL(PARAM_FFRMRP,0)=0 OR
		IFNULL(PARAM_HFRMRP,0)=0 OR
		IFNULL(PARAM_SESTRG,'')='' OR
		IFNULL(PARAM_CULUSA,'')=''
	THEN 
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';
	END IF;

	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_STPENT<>'E' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Numero de Item no válido,';		
	END IF;
	
	IF PARAM_CRPRS NOT BETWEEN '00' AND '99999' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código representante no válido,';	
	END IF;
	
	IF PARAM_SFRMRP<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;

	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';
	END IF;

	IF LENGTH(CAST(PARAM_FFRMRP AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HFRMRP<0 OR 
	   PARAM_HFRMRP>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;	

	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF NOT EXISTS (SELECT * FROM DC@ALMAPER.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS =PARAM_CRPRS ) THEN
			
				INSERT INTO DC@ALMAPER.ZZWT89(
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
 			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF NOT EXISTS (SELECT * FROM DC@RNSLIB.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS =PARAM_CRPRS ) THEN
			
				INSERT INTO DC@RNSLIB.ZZWT89(
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
			
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	

	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_STPENT : ' CONCAT CAST(PARAM_STPENT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CENTD : ' CONCAT CAST(PARAM_CENTD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CRPRS : ' CONCAT PARAM_CRPRS  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SFRMRP : ' CONCAT PARAM_SFRMRP  CONCAT ' | ' CONCAT
					'PARAM_FFRMRP : ' CONCAT CAST(PARAM_FFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_HFRMRP : ' CONCAT CAST(PARAM_HFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA  
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_PRIMENDO_REPOPE',
	pParametros,
	pRespuesta
	);	

END

CREATE PROCEDURE INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_DEPOS_REPOPE
(
	IN PARAM_CCMPN	CHAR (2),
	IN PARAM_NPROPR	NUMERIC (10, 0),
	IN PARAM_STPENT	NUMERIC (5,0),
	IN PARAM_CENTD	NUMERIC (6,0),
	IN PARAM_CRPRS	CHAR (5),
	IN PARAM_NOPRCN	NUMERIC (10, 0),
	IN PARAM_SFRMRP	CHAR (1),
	IN PARAM_FFRMRP	NUMERIC (8,0),
	IN PARAM_HFRMRP	NUMERIC (6,0),
	IN PARAM_SESTRG	CHAR (1) ,
	IN PARAM_CULUSA	CHAR (10),
	INOUT PARAM_PROCSTATUS INT,
	INOUT PARAM_PROCDESC VARCHAR(2000)	
)
BEGIN
	DECLARE SQLCODE INTEGER DEFAULT 0;
	DECLARE VAL INTEGER DEFAULT 0;

	--DECLARE LOG
	DECLARE pParametros varchar(2000);
	DECLARE pRespuesta varchar(100);
	--FIN LOG
	
	
	IF
		IFNULL(PARAM_CCMPN	,0)=0 OR
		IFNULL(PARAM_NPROPR,0)=0 OR
		IFNULL(PARAM_STPENT,0)=0 OR
		IFNULL(PARAM_CENTD	,0)=0 OR
		IFNULL(PARAM_CRPRS	,0)=0 OR
		IFNULL(PARAM_NOPRCN,0)=0 OR
		IFNULL(PARAM_SFRMRP,0)=0 OR
		IFNULL(PARAM_FFRMRP,0)=0 OR
		IFNULL(PARAM_HFRMRP,0)=0 OR
		IFNULL(PARAM_SESTRG,0)=0 OR
		IFNULL(PARAM_CULUSA,0)=0
	THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Los parámetros deben tener valor,';	
	END IF;
	
	IF PARAM_CCMPN<>'AM' AND PARAM_CCMPN<>'LZ' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código de compañía no válido,';	
	END IF;
	
	IF PARAM_STPENT<>'C' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Numero de Item no válido,';	
	END IF;
	
	IF PARAM_CRPRS BETWEEN '00' AND '99999' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Código representante no válido,';	
	END IF;
	
	IF PARAM_SFRMRP<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag firma del representante no válido,';	
	END IF;
	
	IF PARAM_SESTRG<>'A' THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Flag estado registro no válido,';
	END IF;
	
	IF LENGTH(CAST(PARAM_FFRMRP AS VARCHAR(8)))<>8  OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),1,4) AS INTEGER)<=1900 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),5,2) AS INTEGER)>12 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)>31 OR 
	   CAST(SUBSTR(CAST(PARAM_FFRMRP AS VARCHAR(8)),7,2) AS INTEGER)=0 THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de fecha no válido,';		
	END IF;

	IF PARAM_HFRMRP<0 OR 
	   PARAM_HFRMRP>235959 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),1,2) AS INTEGER)>23 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),3,2) AS INTEGER)>59 OR
	   CAST(SUBSTRING(RIGHT('000000' CONCAT CAST(PARAM_HFRMRP AS VARCHAR(6)),6),5,2) AS INTEGER)>59 THEN
	   
	   SET VAL=VAL+1;
	   SET PARAM_PROCDESC = PARAM_PROCDESC || 'Formato de hora no válido,';		
	END IF;	
	
	IF PARAM_CULUSA NOT IN ('WEBALMA','WEBCASA') THEN
		SET VAL=VAL+1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario de acceso no válido,';	
	END IF;	

	IF (PARAM_CULUSA='WEBALMA' AND PARAM_CCMPN<>'AM') OR  (PARAM_CULUSA='WEBCASA' AND PARAM_CCMPN<>'LZ') THEN
		SET VAL = VAL + 1;
		SET PARAM_PROCDESC = PARAM_PROCDESC || 'Usuario no pertenece a la compañía,';
	END IF;
	
	IF VAL=0 THEN	
		IF PARAM_CCMPN='AM' THEN
			IF NOT EXISTS (SELECT * FROM DC@ALMAPER.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS =PARAM_CRPRS ) THEN
			
				INSERT INTO DC@ALMAPER.ZZWT89 (
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
			
		ELSEIF PARAM_CCMPN='LZ' THEN
			IF NOT EXISTS (SELECT * FROM DC@RNSLIB.ZZWT89 WHERE NPROPR=PARAM_NPROPR AND STPENT=PARAM_STPENT AND CENTD=PARAM_CENTD AND CRPRS =PARAM_CRPRS ) THEN
			
				INSERT INTO DC@RNSLIB.ZZWT89 (
					NPROPR, STPENT, CENTD, CRPRS, NOPRCN, SFRMRP, FFRMRP, HFRMRP,
					SESTRG, NTRMNL, FULTAC, HULTAC, CULUSA
				) VALUES (
					PARAM_NPROPR, PARAM_STPENT, PARAM_CENTD, PARAM_CRPRS, PARAM_NOPRCN, PARAM_SFRMRP, PARAM_FFRMRP, PARAM_HFRMRP,
					PARAM_SESTRG, PARAM_CULUSA, DC@RNSLIB.FECHA(), DC@RNSLIB.HORA(), PARAM_CULUSA
				);
				
				SET PARAM_PROCSTATUS=0;
				SET PARAM_PROCDESC='Registro insertado';
			ELSE
				SET PARAM_PROCSTATUS=1;
				SET PARAM_PROCDESC='Registro ya existe';
			
			END IF;
		ELSE
			SET PARAM_PROCSTATUS=1;
			SET PARAM_PROCDESC='Error en el esquema';	
		END IF;
	ELSE
		SET PARAM_PROCSTATUS=1;
		SET PARAM_PROCDESC='Errores de validación,' || PARAM_PROCDESC;	
	END IF;	
	
	
	SET pParametros=				
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN  CONCAT ' | ' CONCAT
					'PARAM_NPROPR : ' CONCAT CAST(PARAM_NPROPR  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_STPENT : ' CONCAT CAST(PARAM_STPENT  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CENTD : ' CONCAT CAST(PARAM_CENTD  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_CRPRS : ' CONCAT PARAM_CRPRS  CONCAT ' | ' CONCAT
					'PARAM_NOPRCN : ' CONCAT CAST(PARAM_NOPRCN  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SFRMRP : ' CONCAT PARAM_SFRMRP  CONCAT ' | ' CONCAT
					'PARAM_FFRMRP : ' CONCAT CAST(PARAM_FFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_HFRMRP : ' CONCAT CAST(PARAM_HFRMRP  AS VARCHAR(2000)) CONCAT ' | ' CONCAT
					'PARAM_SESTRG : ' CONCAT PARAM_SESTRG  CONCAT ' | ' CONCAT
					'PARAM_CULUSA : ' CONCAT PARAM_CULUSA
					;
	SET pRespuesta=CAST(PARAM_PROCSTATUS AS VARCHAR(100)); -- CONCAT '|' CONCAT PARAM_PROCDESC;
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_WAR_REG_FIRMA_DEPOS_REPOPE',
	pParametros,
	pRespuesta
	);	
	
END

CREATE PROCEDURE INTEGRASGO.SP_INTSGO_GEN_LISTADO_ALMACEN(
PARAM_CCMPN CHAR(2)
)
RESULT SET 1
LANGUAGE SQL
BEGIN
DECLARE pParametros varchar(2000);
DECLARE pRespuesta varchar(100);

DECLARE CR1 CURSOR FOR
SELECT CTPOAL,CALMCM, CUABLC,TDRALC,TDRAL1,SESTRG FROM DC@RNSLIB.RZZM23;

DECLARE CR2 CURSOR FOR
SELECT CTPOAL,CALMCM, CUABLC,TDRALC,TDRAL1,SESTRG FROM DC@ALMAPER.RZZM23;

DECLARE CR3 CURSOR FOR
SELECT '' RESULT  FROM SYSIBM.SYSDUMMY1;

IF PARAM_CCMPN='LZ' THEN
OPEN CR1;
ELSEIF PARAM_CCMPN='AM' THEN
OPEN CR2;
ELSE
OPEN CR3;
END IF;

	SET pParametros=					
					'PARAM_CCMPN : ' CONCAT PARAM_CCMPN
					;
	SET pRespuesta='0';
	
	CALL INTEGRASGO.SP_INTSGO_GEN_ILOG('INTEGRASGO.SP_INTSGO_GEN_LISTADO_ALMACEN',
	pParametros,
	pRespuesta
	);

END